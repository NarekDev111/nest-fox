{
  "openapi": "3.0.1",
  "info": {
    "title": "Phrase TMS API",
    "description": "Welcome to Phrase's TMS API documentation. \n\n Please visit our [help center](https://support.phrase.com/hc/en-us/sections/5709662083612) for more information about the APIs. \n\n If you have any questions, please contact [Support](https://support.phrase.com/hc/requests/new). \n\n Please, include the `User-Agent` header with the name of your application or project. It might be a good idea to include some sort of contact information as well, so that we can get in touch if necessary. Examples of excellent `User-Agent` headers:\n > User-Agent: Example mobile app (example@phrase.com) <br/> User-Agent: ACME Inc Java 1.8 Client (http://acmeinc.com/contact)",
    "version": "Latest"
  },
  "servers": [
    {
      "url": "https://cloud.memsource.com/web"
    }
  ],
  "tags": [
    {
      "name": "Additional Workflow Step"
    },
    {
      "name": "Analysis"
    },
    {
      "name": "Async Request"
    },
    {
      "name": "Authentication"
    },
    {
      "name": "Bilingual File"
    },
    {
      "name": "Business Unit"
    },
    {
      "name": "Client"
    },
    {
      "name": "Connector"
    },
    {
      "name": "Conversations"
    },
    {
      "name": "Cost Center"
    },
    {
      "name": "Custom Fields"
    },
    {
      "name": "Custom File Type"
    },
    {
      "name": "Domain"
    },
    {
      "name": "Email Template"
    },
    {
      "name": "File"
    },
    {
      "name": "Glossary"
    },
    {
      "name": "Import settings"
    },
    {
      "name": "Job"
    },
    {
      "name": "Language Quality Assessment"
    },
    {
      "name": "Machine Translation"
    },
    {
      "name": "Machine Translation Settings"
    },
    {
      "name": "Mapping"
    },
    {
      "name": "Net Rate Scheme"
    },
    {
      "name": "Price List"
    },
    {
      "name": "Project"
    },
    {
      "name": "Project Reference File"
    },
    {
      "name": "Project Template"
    },
    {
      "name": "Provider"
    },
    {
      "name": "Quality Assurance"
    },
    {
      "name": "Quote"
    },
    {
      "name": "SCIM"
    },
    {
      "name": "Segment"
    },
    {
      "name": "Segmentation Rules"
    },
    {
      "name": "Spell Check"
    },
    {
      "name": "SubDomain"
    },
    {
      "name": "Supported Languages"
    },
    {
      "name": "Term Base"
    },
    {
      "name": "Translation"
    },
    {
      "name": "Translation Memory"
    },
    {
      "name": "User"
    },
    {
      "name": "Vendor"
    },
    {
      "name": "Webhook"
    },
    {
      "name": "Workflow Step"
    },
    {
      "name": "Workflow changes"
    }
  ],
  "paths": {
    "/api2/v1/additionalWorkflowSteps/{id}": {
      "delete": {
        "tags": [
          "Additional Workflow Step"
        ],
        "summary": "Delete additional workflow step",
        "operationId": "deleteAWFStep",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/additionalWorkflowSteps": {
      "get": {
        "tags": [
          "Additional Workflow Step"
        ],
        "summary": "List additional workflow steps",
        "operationId": "listAWFSteps",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the additional workflow step to filter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoAdditionalWorkflowStepDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Additional Workflow Step"
        ],
        "summary": "Create additional workflow step",
        "operationId": "createAWFStep",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalWorkflowStepRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalWorkflowStepDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/analyses/{analyseUid}": {
      "delete": {
        "tags": [
          "Analysis"
        ],
        "summary": "Delete analysis",
        "operationId": "delete",
        "parameters": [
          {
            "name": "analyseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "purge",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/analyses/bulk": {
      "delete": {
        "tags": [
          "Analysis"
        ],
        "summary": "Delete analyses (batch)",
        "operationId": "bulkDeleteAnalyses",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDeleteAnalyseDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/analyses/byProviders": {
      "post": {
        "tags": [
          "Analysis"
        ],
        "summary": "Create analyses by providers",
        "operationId": "createAnalysesForProviders",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAnalyseListAsyncDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncAnalyseListResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/analyses/byLanguages": {
      "post": {
        "tags": [
          "Analysis"
        ],
        "summary": "Create analyses by languages",
        "operationId": "createAnalysesForLangs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAnalyseListAsyncDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncAnalyseListResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/analyses/{analyseUid}/analyseLanguageParts/{analyseLanguagePartId}": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Get analysis language part",
        "description": "Returns analysis language pair",
        "operationId": "getAnalyseLanguagePart",
        "parameters": [
          {
            "name": "analyseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "analyseLanguagePartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyseLanguagePartDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/analyses/{analyseUid}/jobs/{jobUid}": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Get jobs analysis",
        "description": "Returns job's analyse",
        "operationId": "getJobPartAnalyse",
        "parameters": [
          {
            "name": "analyseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyseJobDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/analyses/{analyseUid}/download": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Download analysis",
        "operationId": "downloadAnalyse",
        "parameters": [
          {
            "name": "analyseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CSV",
                "CSV_EXTENDED",
                "LOG",
                "JSON"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "application/octet-stream",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/analyses/recalculate": {
      "post": {
        "tags": [
          "Analysis"
        ],
        "summary": "Recalculate analysis",
        "operationId": "recalculate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyseRecalculateRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyseRecalculateResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/analyses/{analyseUid}/analyseLanguageParts/{analyseLanguagePartId}/jobs": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "List jobs of analyses",
        "description": "Returns list of job's analyses",
        "operationId": "listJobParts",
        "parameters": [
          {
            "name": "analyseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "analyseLanguagePartId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoAnalyseJobDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/async/{asyncRequestId}": {
      "get": {
        "tags": [
          "Async Request"
        ],
        "summary": "Get asynchronous request",
        "operationId": "getAsyncRequest",
        "parameters": [
          {
            "name": "asyncRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncRequestDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/async": {
      "get": {
        "tags": [
          "Async Request"
        ],
        "summary": "List pending requests",
        "operationId": "listPendingRequests",
        "parameters": [
          {
            "name": "all",
            "in": "query",
            "description": "Pending requests for organization instead of current user. Only for ADMIN.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoAsyncRequestDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/async/status": {
      "get": {
        "tags": [
          "Async Request"
        ],
        "summary": "Get current limits",
        "operationId": "getCurrentLimitStatus",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncRequestStatusDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout",
        "operationId": "logout",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/auth/loginToSession": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login to session",
        "operationId": "loginToSession",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginToSessionDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginToSessionResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/auth/loginOther": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login as another user",
        "description": "Available only for admin",
        "operationId": "loginOther",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginOtherDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/auth/whoAmI": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Who am I",
        "operationId": "whoAmI",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginUserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/auth/loginWithGoogle": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login with Google",
        "operationId": "loginByGoogle",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginWithGoogleDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/auth/loginWithApple/refreshToken": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login with Apple refresh token",
        "operationId": "loginByAppleWithRefreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginWithAppleDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/auth/loginWithApple/code": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login with Apple with code",
        "operationId": "loginByAppleWithCode",
        "parameters": [
          {
            "name": "native",
            "in": "query",
            "description": "For sign in with code from native device",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginWithAppleDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/auth/refreshAppleToken": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "refresh apple token",
        "operationId": "refreshAppleToken",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppleTokenResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/bilingualFiles/convert": {
      "post": {
        "tags": [
          "Bilingual File"
        ],
        "summary": "Convert bilingual file",
        "operationId": "convertBilingualFile",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MXLF",
                "DOCX"
              ]
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MXLF",
                "DOCX"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InputStream"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "application/octet-stream",
            "headers": {
              "Content-Disposition": {
                "description": "Contains filename (UTF-8 encoded). \n\n `filename*=UTF-8''ExampleFileName.md`",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/bilingualFiles": {
      "put": {
        "tags": [
          "Bilingual File",
          "Job"
        ],
        "summary": "Upload bilingual file",
        "description": "Returns updated job parts",
        "operationId": "uploadBilingualFile",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "MXLF",
              "enum": [
                "MXLF",
                "DOCX",
                "XLIFF"
              ]
            }
          },
          {
            "name": "saveToTransMemory",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Confirmed",
              "enum": [
                "All",
                "Confirmed",
                "None"
              ]
            }
          },
          {
            "name": "setCompleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InputStream"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPartsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/bilingualFiles/compare": {
      "post": {
        "tags": [
          "Bilingual File"
        ],
        "summary": "Compare bilingual file",
        "description": "Compares bilingual file to job state. Returns list of compared segments.",
        "operationId": "compareBilingualFile",
        "parameters": [
          {
            "name": "workflowLevel",
            "in": "query",
            "schema": {
              "maximum": 15,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InputStream"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComparedSegmentsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/bilingualFiles/preview": {
      "post": {
        "tags": [
          "Bilingual File"
        ],
        "summary": "Download preview",
        "description": "Supports mxliff format",
        "operationId": "getPreviewFile",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InputStream"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "application/octet-stream",
            "headers": {
              "Content-Disposition": {
                "description": "Contains filename (UTF-8 encoded). \n\n `filename*=UTF-8''ExampleFileName.md`",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/businessUnits/{businessUnitUid}": {
      "get": {
        "tags": [
          "Business Unit"
        ],
        "summary": "Get business unit",
        "operationId": "getBusinessUnit",
        "parameters": [
          {
            "name": "businessUnitUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessUnitDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Business Unit"
        ],
        "summary": "Edit business unit",
        "operationId": "updateBusinessUnit",
        "parameters": [
          {
            "name": "businessUnitUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessUnitEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessUnitDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Business Unit"
        ],
        "summary": "Delete business unit",
        "operationId": "deleteBusinessUnit",
        "parameters": [
          {
            "name": "businessUnitUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/businessUnits": {
      "get": {
        "tags": [
          "Business Unit"
        ],
        "summary": "List business units",
        "operationId": "listBusinessUnits",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Unique name of the business unit",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "description": "Uid of user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NAME",
              "enum": [
                "NAME",
                "DATE_CREATED"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoBusinessUnitDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Business Unit"
        ],
        "summary": "Create business unit",
        "operationId": "createBusinessUnit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessUnitEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessUnitDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/clients/{clientUid}": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get client",
        "operationId": "getClient",
        "parameters": [
          {
            "name": "clientUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Client"
        ],
        "summary": "Edit client",
        "operationId": "updateClient",
        "parameters": [
          {
            "name": "clientUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientEditDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Client"
        ],
        "summary": "Delete client",
        "operationId": "deleteClient",
        "parameters": [
          {
            "name": "clientUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/clients": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "List clients",
        "operationId": "listClients",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Unique name of the Client",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "description": "Uid of user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NAME",
              "enum": [
                "NAME",
                "DATE_CREATED"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoClientDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Create client",
        "operationId": "createClient",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientEditDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/connectors/{connectorId}/folders/{folder}/files/{file}": {
      "get": {
        "tags": [
          "Connector"
        ],
        "summary": "Download file",
        "description": "Download a file from a subfolder of the selected connector",
        "operationId": "getFile",
        "parameters": [
          {
            "name": "connectorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/InputStreamLength"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/connectors/{connectorId}": {
      "get": {
        "tags": [
          "Connector"
        ],
        "summary": "Get a connector",
        "operationId": "getConnector",
        "parameters": [
          {
            "name": "connectorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectorDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Connector"
        ],
        "summary": "Edit connector",
        "description": "Edit selected connector",
        "operationId": "editConnector",
        "parameters": [
          {
            "name": "connectorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionTest",
            "in": "query",
            "description": "For running connection test",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbstractConnectorDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Edited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectorCreateResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/connectors": {
      "get": {
        "tags": [
          "Connector"
        ],
        "summary": "List connectors",
        "operationId": "getConnectorList",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectorListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/connectors/{connectorId}/folders/{folder}": {
      "get": {
        "tags": [
          "Connector"
        ],
        "summary": "List files in a subfolder",
        "description": "List files in a subfolder of the selected connector",
        "operationId": "getFolder",
        "parameters": [
          {
            "name": "connectorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectUid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "schema": {
              "pattern": "ALL|FILES_ONLY|FOLDERS_ONLY",
              "type": "string",
              "default": "ALL"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "pattern": "NAME|SIZE|LAST_MODIFIED",
              "type": "string",
              "default": "NAME"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "pattern": "ASCENDING|DESCENDING",
              "type": "string",
              "default": "ASCENDING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Connector"
        ],
        "summary": "Upload a file to a subfolder of the selected connector",
        "description": "Upload a file to a subfolder of the selected connector",
        "operationId": "uploadFile",
        "parameters": [
          {
            "name": "connectorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "multipart/form-data"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Translated file to upload",
                    "format": "binary"
                  },
                  "sourceFileName": {
                    "type": "string",
                    "description": "Name or ID of the original file"
                  },
                  "subfolderName": {
                    "type": "string",
                    "description": "Optional subfolder to upload the file to"
                  },
                  "mimeType": {
                    "type": "string",
                    "description": "Mime type of the file to upload"
                  },
                  "commitMessage": {
                    "type": "string",
                    "description": "Commit message for upload to Git, etc."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/connectors/{connectorId}/folders": {
      "get": {
        "tags": [
          "Connector"
        ],
        "summary": "List files in root",
        "description": "List files in a root folder of the selected connector",
        "operationId": "getRootFolder",
        "parameters": [
          {
            "name": "connectorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileType",
            "in": "query",
            "schema": {
              "pattern": "ALL|FILES_ONLY|FOLDERS_ONLY",
              "type": "string",
              "default": "ALL"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "pattern": "NAME|SIZE|LAST_MODIFIED",
              "type": "string",
              "default": "NAME"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "pattern": "ASCENDING|DESCENDING",
              "type": "string",
              "default": "ASCENDING"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/jobs/{jobUid}/conversations": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "List all conversations",
        "operationId": "listAllConversations",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/jobs/conversations/find": {
      "post": {
        "tags": [
          "Conversations"
        ],
        "summary": "Find all conversation",
        "operationId": "findConversations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindConversationsDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/costCenters/{costCenterUid}": {
      "get": {
        "tags": [
          "Cost Center"
        ],
        "summary": "Get cost center",
        "operationId": "getCostCenter",
        "parameters": [
          {
            "name": "costCenterUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCenterDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Cost Center"
        ],
        "summary": "Edit cost center",
        "operationId": "updateCostCenter",
        "parameters": [
          {
            "name": "costCenterUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCenterEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCenterDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Cost Center"
        ],
        "summary": "Delete cost center",
        "operationId": "deleteCostCenter",
        "parameters": [
          {
            "name": "costCenterUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/costCenters": {
      "get": {
        "tags": [
          "Cost Center"
        ],
        "summary": "List of cost centers",
        "operationId": "listCostCenters",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "description": "Uid of user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NAME",
              "enum": [
                "NAME",
                "DATE_CREATED"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoCostCenterDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Cost Center"
        ],
        "summary": "Create cost center",
        "operationId": "createCostCenter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CostCenterEditDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CostCenterDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/customFields/{fieldUid}": {
      "get": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Get custom field",
        "operationId": "getCustomField",
        "parameters": [
          {
            "name": "fieldUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/customFields": {
      "get": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Lists custom fields",
        "operationId": "getCustomFieldList",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by custom field name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "allowedEntities",
            "in": "query",
            "description": "Filter by custom field allowed entities",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PROJECT"
                ]
              }
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "Filter by custom field types",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "MULTI_SELECT",
                  "SINGLE_SELECT",
                  "STRING",
                  "NUMBER",
                  "URL",
                  "DATE"
                ]
              }
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "description": "Filter by custom field creators UIDs",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "modifiedBy",
            "in": "query",
            "description": "Filter by custom field updaters UIDs",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "uids",
            "in": "query",
            "description": "Filter by custom field UIDs",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "required",
            "in": "query",
            "description": "Filter by custom field required parameter",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort by this field",
            "schema": {
              "type": "string",
              "enum": [
                "NAME",
                "CREATED",
                "LAST_MODIFIED"
              ]
            }
          },
          {
            "name": "sortTrend",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoCustomFieldDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Create custom field",
        "operationId": "createCustomField",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomFieldDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/customFields/{fieldUid}/options": {
      "get": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Lists options of custom field",
        "operationId": "getCustomFieldOptionList",
        "parameters": [
          {
            "name": "fieldUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by option name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort by this field",
            "schema": {
              "type": "string",
              "enum": [
                "NAME"
              ]
            }
          },
          {
            "name": "sortTrend",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoCustomFieldOptionDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/customFileTypes": {
      "get": {
        "tags": [
          "Custom File Type"
        ],
        "summary": "Get All Custom file type",
        "operationId": "getAllCustomFileType",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoCustomFileTypeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Custom File Type"
        ],
        "summary": "Create custom file type",
        "operationId": "createCustomFileTypes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomFileTypeDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFileTypeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Custom File Type"
        ],
        "summary": "Delete multiple Custom file type",
        "operationId": "deleteBatchCustomFileType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCustomFileTypeDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "Deleted",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/customFileTypes/{customFileTypeUid}": {
      "get": {
        "tags": [
          "Custom File Type"
        ],
        "summary": "Get Custom file type",
        "operationId": "getCustomFileType",
        "parameters": [
          {
            "name": "customFileTypeUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFileTypeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Custom File Type"
        ],
        "summary": "Update Custom file type",
        "operationId": "updateCustomFileType",
        "parameters": [
          {
            "name": "customFileTypeUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomFileTypeDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFileTypeDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Custom File Type"
        ],
        "summary": "Delete Custom file type",
        "operationId": "deleteCustomFileType",
        "parameters": [
          {
            "name": "customFileTypeUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/netRateSchemes/{netRateSchemeUid}": {
      "get": {
        "tags": [
          "Net Rate Scheme"
        ],
        "summary": "Get net rate scheme",
        "operationId": "getDiscountScheme",
        "parameters": [
          {
            "name": "netRateSchemeUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetRateScheme"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Net Rate Scheme"
        ],
        "summary": "Edit net rate scheme",
        "operationId": "updateDiscountScheme",
        "parameters": [
          {
            "name": "netRateSchemeUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetRateSchemeEdit"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetRateScheme"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/netRateSchemes": {
      "get": {
        "tags": [
          "Net Rate Scheme"
        ],
        "summary": "List net rate schemes",
        "operationId": "getDiscountSchemes",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoNetRateSchemeReference"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Net Rate Scheme"
        ],
        "summary": "Create net rate scheme",
        "operationId": "createDiscountScheme",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscountSchemeCreateDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetRateScheme"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/netRateSchemes/{netRateSchemeUid}/workflowStepNetSchemes/{netRateSchemeWorkflowStepId}": {
      "get": {
        "tags": [
          "Net Rate Scheme"
        ],
        "summary": "Get scheme for workflow step",
        "operationId": "getDiscountSchemeWorkflowStep",
        "parameters": [
          {
            "name": "netRateSchemeUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "netRateSchemeWorkflowStepId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetRateSchemeWorkflowStep"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Net Rate Scheme"
        ],
        "summary": "Edit scheme for workflow step",
        "operationId": "editDiscountSchemeWorkflowStep",
        "parameters": [
          {
            "name": "netRateSchemeUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "netRateSchemeWorkflowStepId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/NetRateSchemeWorkflowStepEdit"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetRateSchemeWorkflowStep"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/netRateSchemes/{netRateSchemeUid}/workflowStepNetSchemes": {
      "get": {
        "tags": [
          "Net Rate Scheme"
        ],
        "summary": "List schemes for workflow step",
        "operationId": "getDiscountSchemeWorkflowSteps",
        "parameters": [
          {
            "name": "netRateSchemeUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoNetRateSchemeWorkflowStepReference"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/domains/{domainUid}": {
      "get": {
        "tags": [
          "Domain"
        ],
        "summary": "Get domain",
        "operationId": "getDomain",
        "parameters": [
          {
            "name": "domainUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Domain"
        ],
        "summary": "Edit domain",
        "operationId": "updateDomain",
        "parameters": [
          {
            "name": "domainUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Domain"
        ],
        "summary": "Delete domain",
        "operationId": "deleteDomain",
        "parameters": [
          {
            "name": "domainUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/domains": {
      "get": {
        "tags": [
          "Domain"
        ],
        "summary": "List of domains",
        "operationId": "listDomains",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "description": "Uid of user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NAME",
              "enum": [
                "NAME",
                "DATE_CREATED"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoDomainDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Domain"
        ],
        "summary": "Create domain",
        "operationId": "createDomain",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/emailTemplates": {
      "get": {
        "tags": [
          "Email Template"
        ],
        "summary": "List email templates",
        "operationId": "listOrgEmailTemplates",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoOrganizationEmailTemplateDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/emailTemplates/{templateUid}": {
      "get": {
        "tags": [
          "Email Template"
        ],
        "summary": "Get email template",
        "operationId": "getOrgEmailTemplate",
        "parameters": [
          {
            "name": "templateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationEmailTemplateDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/fileHandovers": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Download handover file(s)",
        "description": "\nFor downloading multiple files as ZIP file provide multiple IDs in query parameters.\n* For example `?jobUid={id1}&jobUid={id2}`\n* When no files matched given IDs error 404 is returned, otherwise ZIP file will include those that were found\n",
        "operationId": "getHandoverFiles",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "query",
            "description": "JobPart Id of requested handover file",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File / Archive with file handovers",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Job"
        ],
        "summary": "Upload handover file",
        "description": "\nFor following jobs the handover file is not supported:\n* Continuous jobs\n* Jobs from connectors\n* Split jobs\n* Multilingual jobs\n",
        "operationId": "uploadHandoverFile",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Memsource",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "application/json"
            },
            "example": "{\"jobs\":[{\"uid\":\"8kMckeDcgWWF4Fe4Szqjb1\"}]}"
          },
          {
            "name": "Content-Disposition",
            "in": "header",
            "description": "must match pattern `((inline|attachment); )?(filename\\*=UTF-8''(.+)|filename=\"?(.+)\"?)`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Length",
            "in": "header",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InputStream"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileHandoverDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Job"
        ],
        "summary": "Delete handover file",
        "operationId": "deleteHandoverFile",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPartReferences"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "Deleted",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/files/{fileUid}": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "Get file",
        "description": "Get uploaded file as <b>octet-stream</b> or as <b>json</b> based on 'Accept' header",
        "operationId": "getFileJson",
        "parameters": [
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadedFileDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "File"
        ],
        "summary": "Delete file",
        "operationId": "deletesFile",
        "parameters": [
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/files": {
      "get": {
        "tags": [
          "File"
        ],
        "summary": "List files",
        "operationId": "getFiles",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "types",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "biggerThan",
            "in": "query",
            "description": "Size in bytes",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoUploadedFileDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "File"
        ],
        "summary": "Upload file",
        "description": "Accepts multipart/form-data, application/octet-stream or application/json.",
        "operationId": "createUrlFile",
        "parameters": [
          {
            "name": "Content-Disposition",
            "in": "header",
            "description": "must match pattern `((inline|attachment); )?filename\\*=UTF-8''(.+)`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "file",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoteUploadedFileDto"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/RemoteUploadedFileDto"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RemoteUploadedFileDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadedFileDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/glossaries/{glossaryUid}": {
      "get": {
        "tags": [
          "Glossary"
        ],
        "summary": "Get glossary",
        "operationId": "getGlossary",
        "parameters": [
          {
            "name": "glossaryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlossaryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Glossary"
        ],
        "summary": "Edit glossary",
        "description": "Languages can only be added, their removal is not supported",
        "operationId": "updateGlossary",
        "parameters": [
          {
            "name": "glossaryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlossaryEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlossaryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Glossary"
        ],
        "summary": "Delete glossary",
        "operationId": "deleteGlossary",
        "parameters": [
          {
            "name": "glossaryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "purge",
            "in": "query",
            "description": "purge=false - the Glossary can later be restored,\n                    'purge=true - the Glossary is completely deleted and cannot be restored",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/glossaries": {
      "get": {
        "tags": [
          "Glossary"
        ],
        "summary": "List glossaries",
        "operationId": "listGlossaries",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Language of the glossary",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoGlossaryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Glossary"
        ],
        "summary": "Create glossary",
        "operationId": "createGlossary",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlossaryEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlossaryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/glossaries/{glossaryUid}/activate": {
      "put": {
        "tags": [
          "Glossary"
        ],
        "summary": "Activate/Deactivate glossary",
        "operationId": "activateGlossary",
        "parameters": [
          {
            "name": "glossaryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlossaryActivationDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlossaryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/transMemories/searchSegment": {
      "post": {
        "tags": [
          "Translation Memory",
          "Job"
        ],
        "summary": "Search translation memory for segment by job",
        "description": "Returns at most <i>maxSegments</i>\n            records with <i>score >= scoreThreshold</i> and at most <i>maxSubsegments</i> records which are subsegment,\n            i.e. the source text is substring of the query text.",
        "operationId": "searchSegmentByJob",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchTMByJobRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseListTmDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/jobs/{jobUid}/conversations/lqas/{conversationId}/comments/{commentId}": {
      "delete": {
        "tags": [
          "Conversations"
        ],
        "summary": "Delete LQA comment",
        "operationId": "deleteLQAComment",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/jobs/{jobUid}/conversations/lqas/{conversationId}": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get LQA conversation",
        "operationId": "getLQAConversation",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LQAConversationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "Conversations"
        ],
        "summary": "Delete LQA conversation",
        "operationId": "deleteLQAConversation",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/jobs/{jobUid}/conversations/lqas": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "List LQA conversations",
        "operationId": "listLQAConversations",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LQAConversationsListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/languages": {
      "get": {
        "tags": [
          "Supported Languages"
        ],
        "summary": "List supported languages",
        "operationId": "listOfLanguages",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/lqa/assessments/reports": {
      "get": {
        "tags": [
          "Language Quality Assessment"
        ],
        "summary": "Download LQA Assessment XLSX reports",
        "description": "Returns a single xlsx report or ZIP archive with multiple reports.\nIf any given jobPart is not from LQA workflow step, reports from successive workflow steps may be returned\nIf none were found returns 404 error, otherwise returns those that were found.",
        "operationId": "downloadLqaReports",
        "parameters": [
          {
            "name": "jobParts",
            "in": "query",
            "description": "Comma separated list of JobPart UIDs",
            "required": true,
            "schema": {
              "maxLength": 2147483647,
              "minLength": 1,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "application/octet-stream",
            "content": {}
          },
          "400": {
            "description": "Invalid request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "No reports found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/lqa/profiles/{profileUid}": {
      "get": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Get LQA profile details",
        "operationId": "getLqaProfile",
        "parameters": [
          {
            "name": "profileUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LqaProfileDetailDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Update LQA profile",
        "operationId": "updateLqaProfile",
        "parameters": [
          {
            "name": "profileUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLqaProfileDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LqaProfileDetailDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Delete LQA profile",
        "operationId": "deleteLqaProfile",
        "parameters": [
          {
            "name": "profileUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/lqa/profiles/{profileUid}/duplicate": {
      "post": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Duplicate LQA profile",
        "operationId": "duplicateProfile",
        "parameters": [
          {
            "name": "profileUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LqaProfileReferenceDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/lqa/profiles": {
      "get": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "GET list LQA profiles",
        "operationId": "getLqaProfiles",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of LQA profiles, it is used for filter the list by name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "description": "It is used for filter the list by who created the profile",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateCreated",
            "in": "query",
            "description": "It is used for filter the list by date created",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 20",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "NAME",
                  "CREATED_BY",
                  "DATE_CREATED"
                ]
              }
            }
          },
          {
            "name": "order",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ASC",
                  "DESC"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoLqaProfileReferenceDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Create LQA profile",
        "operationId": "createLqaProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLqaProfileDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LqaProfileDetailDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/lqa/profiles/authors": {
      "get": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Get list of LQA profile authors",
        "operationId": "getLqaProfileAuthors",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserReference"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/lqa/profiles/{profileUid}/default": {
      "post": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Make LQA profile default",
        "operationId": "makeDefault",
        "parameters": [
          {
            "name": "profileUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LqaProfileReferenceDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/machineTranslateSettings/{mtsUid}/status": {
      "get": {
        "tags": [
          "Machine Translation Settings"
        ],
        "summary": "Get status of machine translate engine",
        "operationId": "getStatus",
        "parameters": [
          {
            "name": "mtsUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineTranslateStatusDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/machineTranslateSettings/{mtsUid}": {
      "get": {
        "tags": [
          "Machine Translation Settings"
        ],
        "summary": "Get machine translate settings",
        "operationId": "getMTSettings",
        "parameters": [
          {
            "name": "mtsUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineTranslateSettingsPbmDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/machineTranslateSettings": {
      "get": {
        "tags": [
          "Machine Translation Settings"
        ],
        "summary": "List machine translate settings",
        "operationId": "getList",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting field",
            "schema": {
              "type": "string",
              "default": "NAME",
              "enum": [
                "NAME"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoMachineTranslateSettingsPbmDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/machineTranslateSettings/types": {
      "get": {
        "tags": [
          "Machine Translation Settings"
        ],
        "summary": "Get machine translate settings types",
        "operationId": "getMTTypes",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TypesDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/machineTranslateSettings/thirdPartyEngines": {
      "get": {
        "tags": [
          "Machine Translation Settings"
        ],
        "summary": "List third party machine translate settings",
        "operationId": "getThirdPartyEnginesList",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting field",
            "schema": {
              "type": "string",
              "default": "NAME",
              "enum": [
                "NAME"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoMachineTranslateSettingsPbmDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/machineTranslations/{mtSettingsUid}/translate": {
      "post": {
        "tags": [
          "Machine Translation"
        ],
        "summary": "Translate with MT",
        "operationId": "machineTranslation",
        "parameters": [
          {
            "name": "mtSettingsUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationRequestExtendedDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineTranslateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/mappings/tasks/{id}": {
      "get": {
        "tags": [
          "Mapping"
        ],
        "summary": "Returns mapping for taskId (mxliff)",
        "operationId": "getMappingForTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowLevel",
            "in": "query",
            "schema": {
              "maximum": 15,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskMappingDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/importSettings/default": {
      "get": {
        "tags": [
          "Import settings"
        ],
        "summary": "Get organization's default import settings",
        "operationId": "getImportSettings",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/importSettings/{uid}": {
      "get": {
        "tags": [
          "Import settings"
        ],
        "summary": "Get import settings",
        "operationId": "getImportSettings_1",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "Import settings"
        ],
        "summary": "Delete import settings",
        "operationId": "deleteImportSettings",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/importSettings": {
      "get": {
        "tags": [
          "Import settings"
        ],
        "summary": "List import settings",
        "operationId": "listImportSettings",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoImportSettingsReference"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Import settings"
        ],
        "summary": "Edit import settings",
        "operationId": "editImportSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportSettingsEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "tags": [
          "Import settings"
        ],
        "summary": "Create import settings",
        "description": "Pre-defined import settings is handy for [Create Job](#operation/createJob).\n                  See [supported file types](https://wiki.memsource.com/wiki/API_File_Type_List)",
        "operationId": "createImportSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportSettingsCreateDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/jobs/{jobUid}/conversations/plains/{conversationId}": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "Get plain conversation",
        "operationId": "getPlainConversation",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainConversationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Edit plain conversation",
        "operationId": "updatePlainConversation",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditPlainConversationDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainConversationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Conversations"
        ],
        "summary": "Delete plain conversation",
        "operationId": "deletePlainConversation",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/jobs/{jobUid}/conversations/plains": {
      "get": {
        "tags": [
          "Conversations"
        ],
        "summary": "List plain conversations",
        "operationId": "listPlainConversations",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainConversationsListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/jobs/{jobUid}/conversations/plains/{conversationId}/comments/{commentId}": {
      "delete": {
        "tags": [
          "Conversations"
        ],
        "summary": "Delete plain comment",
        "operationId": "deletePlainComment",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get project",
        "operationId": "getProject",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractProjectDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Delete project",
        "operationId": "deleteProject",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "purge",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": [
          "Project"
        ],
        "summary": "Edit project",
        "operationId": "patchProject",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchProjectDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractProjectDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/workflowSteps": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Add workflow steps",
        "operationId": "addWorkflowSteps",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddWorkflowStepsDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/assignableTemplates": {
      "get": {
        "tags": [
          "Project",
          "Project Template"
        ],
        "summary": "List assignable templates",
        "operationId": "assignableTemplates",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignableTemplatesDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/applyTemplate/{templateUid}/assignProviders": {
      "post": {
        "tags": [
          "Project",
          "Project Template"
        ],
        "summary": "Assigns providers from template",
        "operationId": "assignLinguistsFromTemplate",
        "parameters": [
          {
            "name": "templateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPartsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/applyTemplate/{templateUid}/assignProviders/forJobParts": {
      "post": {
        "tags": [
          "Project",
          "Project Template"
        ],
        "summary": "Assigns providers from template (specific jobs)",
        "operationId": "assignLinguistsFromTemplateToJobParts",
        "parameters": [
          {
            "name": "templateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPartReferences"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPartsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "List projects",
        "operationId": "listProjects",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "businessUnitName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statuses",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "NEW",
                  "ASSIGNED",
                  "COMPLETED",
                  "ACCEPTED_BY_VENDOR",
                  "DECLINED_BY_VENDOR",
                  "COMPLETED_BY_VENDOR",
                  "CANCELLED"
                ]
              }
            }
          },
          {
            "name": "targetLangs",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "domainId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "domainName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subDomainId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subDomainName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "costCenterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "costCenterName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dueInHours",
            "in": "query",
            "description": "-1 for projects that are overdue",
            "schema": {
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "createdInLastHours",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sourceLangs",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "jobStatuses",
            "in": "query",
            "description": "Allowed for linguists only",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "NEW",
                  "ACCEPTED",
                  "DECLINED",
                  "DELIVERED",
                  "EMAILED",
                  "COMPLETED",
                  "CANCELLED"
                ]
              }
            }
          },
          {
            "name": "jobStatusGroup",
            "in": "query",
            "description": "Allowed for linguists only",
            "schema": {
              "type": "string",
              "enum": [
                "NEW",
                "ACCEPTED",
                "COMPLETED"
              ]
            }
          },
          {
            "name": "buyerId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "nameOrInternalId",
            "in": "query",
            "description": "Name or internal ID of project",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeArchived",
            "in": "query",
            "description": "List also archived projects",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "archivedOnly",
            "in": "query",
            "description": "List only archived projects, regardless of `includeArchived`",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoAbstractProjectDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/targetLangs": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Add target languages",
        "description": "Add target languages to project",
        "operationId": "addTargetLanguageToProject",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTargetLangDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/assignVendor": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Assign vendor",
        "description": "\nTo unassign Vendor from Project, use empty body:\n```\n{}\n```\n    ",
        "operationId": "assignVendorToProject",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignVendorDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/clone": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Clone project",
        "operationId": "cloneProject",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloneProjectDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractProjectDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/providers": {
      "get": {
        "tags": [
          "Project",
          "Provider"
        ],
        "summary": "List project providers",
        "operationId": "getProjectAssignments",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "providerName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoProviderReference"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/setStatus": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Edit project status",
        "operationId": "setProjectStatus",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProjectStatusDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/financialSettings": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get financial settings",
        "operationId": "getFinancialSettings",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Edit financial settings",
        "operationId": "setFinancialSettings",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetFinancialSettingsDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/qaSettingsChecks": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get QA checks",
        "description": "Returns enabled quality assurance settings.",
        "operationId": "enabledQualityChecks",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnabledQualityChecksDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/lqaSettings": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get LQA settings",
        "operationId": "getProjectSettings",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowLevel",
            "in": "query",
            "schema": {
              "maximum": 15,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LqaSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/mtSettings": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get project machine translate settings",
        "operationId": "getMtSettingsForProject",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MTSettingsPerLanguageListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Edit machine translate settings",
        "description": "This will erase all mtSettings per language for project.\n        To remove all machine translate settings from project call without a machineTranslateSettings parameter.",
        "operationId": "setMtSettingsForProject",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProjectMTSettingsDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MTSettingsPerLanguageListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/quotes": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "List quotes",
        "operationId": "getQuotesForProject",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoQuoteDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/mtSettingsPerLanguage": {
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Edit machine translate settings per language",
        "description": "This will erase mtSettings for project",
        "operationId": "setMtSettingsPerLanguageForProject",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProjectMTSettPerLangListDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MTSettingsPerLanguageListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/analyseSettings": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get analyse settings",
        "operationId": "getAnalyseSettingsForProject",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyseSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/importSettings": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get projects's default import settings",
        "operationId": "getImportSettings_2",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileImportSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Edit project import settings",
        "operationId": "editImportSettings_1",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileImportSettingsCreateDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileImportSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/fileNamingSettings": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get file naming settings for project",
        "operationId": "getFileNamingSettings",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileNamingSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Update file naming settings for project",
        "operationId": "updateFileNamingSettings",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileNamingSettingsDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileNamingSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/customFields": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get custom fields of project (page)",
        "operationId": "getCustomFieldsPage",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 20",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "description": "Filter by webhook creators UIDs",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "modifiedBy",
            "in": "query",
            "description": "Filter by webhook updaters UIDs",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort by this field",
            "schema": {
              "type": "string",
              "enum": [
                "CREATED",
                "LAST_MODIFIED"
              ]
            }
          },
          {
            "name": "sortTrend",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoCustomFieldInstanceDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Edit custom fields of the project (batch)",
        "operationId": "editCustomFields",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomFieldInstancesDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldInstancesDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Create custom field instances",
        "operationId": "createCustomFields",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomFieldInstancesDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldInstancesDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/customFields/{fieldInstanceUid}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get custom field of project",
        "operationId": "getCustomField_1",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldInstanceUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldInstanceDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Edit custom field of project",
        "operationId": "editCustomField",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldInstanceUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomFieldInstanceDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldInstanceDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Delete custom field of project",
        "operationId": "deleteCustomField_1",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldInstanceUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/split": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Split job",
        "description": "\nSplits job by one of the following methods:\n* **After specific segments** - fill in `segmentOrdinals`\n* **Into X parts** - fill in `partCount` \n* **Into parts with specific size** - fill in `partSize`. partSize represents segment count in each part.\n* **Into parts with specific word count** - fill in `wordCount`  \n* **By document parts** - fill in `byDocumentParts`, works only with **PowerPoint** files \n\nOnly one option at a time is allowed.",
        "operationId": "split",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SplitJobActionDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPartsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/setStatus": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Edit job status",
        "operationId": "setStatus",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobStatusChangeActionDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Get job",
        "operationId": "getPart",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPartExtendedDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Job"
        ],
        "summary": "Edit job",
        "operationId": "editPart",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPartUpdateSingleDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPartExtendedDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "patch": {
        "tags": [
          "Job"
        ],
        "summary": "Patch job",
        "operationId": "patchPart",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPartPatchSingleDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPartExtendedDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/pseudoTranslate": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Pseudo-translates job",
        "operationId": "pseudoTranslateJobPart",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PseudoTranslateActionDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/translations": {
      "delete": {
        "tags": [
          "Job"
        ],
        "summary": "Delete all translations",
        "operationId": "deleteAllTranslations",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPartReadyReferences"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/qualityAssurances/ignoredWarnings": {
      "post": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Add ignored warnings",
        "operationId": "addIgnoredWarnings",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIgnoredWarningsDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateIgnoredWarningsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Delete ignored warnings",
        "operationId": "deleteIgnoredWarnings",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIgnoredWarningsDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/importSettings": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Get import settings for job",
        "operationId": "getImportSettings_3",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileImportSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Job"
        ],
        "summary": "Edit job import settings",
        "operationId": "editJobImportSettings",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileImportSettingsCreateDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileImportSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/statusChanges": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Get status changes",
        "operationId": "statusChanges",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPartStatusChangesDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/copySourceToTarget": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Copy Source to Target",
        "operationId": "copySourceToTarget",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPartReadyReferences"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/copySourceToTarget": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Copy Source to Target job",
        "operationId": "copySourceToTargetJobPart",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/translationResources": {
      "get": {
        "tags": [
          "Job",
          "Machine Translation Settings",
          "Term Base",
          "Translation Memory"
        ],
        "summary": "Get translation resources",
        "operationId": "getTranslationResources",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationResourcesDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/segments": {
      "get": {
        "tags": [
          "Job",
          "Segment"
        ],
        "summary": "Get segments",
        "operationId": "listSegments",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "beginIndex",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "endIndex",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/original": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Download original file",
        "operationId": "getOriginalFile",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "application/octet-stream",
            "headers": {
              "Content-Disposition": {
                "description": "Contains filename (UTF-8 encoded). \n\n `filename*=UTF-8''ExampleFileName.md`",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/preview": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Download preview file",
        "operationId": "filePreviewJob",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "application/octet-stream",
            "headers": {
              "Content-Disposition": {
                "description": "Contains filename (UTF-8 encoded). \n\n `filename*=UTF-8''ExampleFileName.md`",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Download preview file",
        "description": "Takes bilingual file (.mxliff only) as argument. If not passed, data will be taken from database",
        "operationId": "filePreview",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InputStream"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "application/octet-stream",
            "headers": {
              "Content-Disposition": {
                "description": "Contains filename (UTF-8 encoded). \n\n `filename*=UTF-8''ExampleFileName.md`",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/targetFileWarnings": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Get target file's warnings",
        "description": "\nThis call will return target file's warnings. This means even for other jobs that were created via 'split jobs' etc.\n",
        "operationId": "getCompletedFileWarnings",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetFileWarningsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/previewUrl": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Get PDF preview",
        "operationId": "previewUrls",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowLevel",
            "in": "query",
            "schema": {
              "maximum": 15,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreviewUrlsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/jobs": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Create job",
        "description": "\nJob file can be provided directly in the message body or downloaded from connector. \n\nPlease supply job metadata in `Memsource` header. \n\nFor file in the request body provide also the filename in `Content-Disposition` header.\n\nAccepted metadata: \n\n  - `targetLangs` - **required**\n  - `due` - ISO 8601\n  - `workflowSettings` - project with workflow - see examples bellow\n  - `assignments` - project without workflows - see examples bellow\n  - `importSettings` - re-usable import settings - see [Create import settings](#operation/createImportSettings)\n  - `useProjectFileImportSettings` - mutually exclusive with importSettings\n  - `callbackUrl` - consumer callback\n  - `path` - original destination directory\n  - `preTranslate` - set pre translate job after import\n  \n  for remote file jobs also `remoteFile` - see examples bellow:\n  - `connectorToken` - remote connector token\n  - `remoteFolder` \n  - `remoteFileName`\n  - `continuous` - true for continuous job\n\nCreate and assign job in project without workflow step:\n```\n\n{\n  \"targetLangs\": [\n    \"cs_cz\"\n  ],\n  \"callbackUrl\": \"https://my-shiny-service.com/consumeCallback\",\n  \"importSettings\": {\n    \"uid\": \"abcd123\"\n  },\n  \"due\": \"2007-12-03T10:15:30.00Z\",\n  \"path\": \"destination directory\",\n  \"assignments\": [\n    {\n      \"targetLang\": \"cs_cz\",\n      \"providers\": [\n        {\n          \"id\": \"4321\",\n          \"type\": \"USER\"\n        }\n      ]\n    }\n  ],\n  \"notifyProvider\": {\n    \"organizationEmailTemplate\": {\n      \"id\": \"39\"\n    },\n    \"notificationIntervalInMinutes\": \"10\"\n  }\n}\n```\n\nCreate job from remote file without workflow steps:\n```\n\n{\n  \"remoteFile\": {\n    \"connectorToken\": \"948123ef-e1ef-4cd3-a90e-af1617848af3\",\n    \"remoteFolder\": \"/\",\n    \"remoteFileName\": \"Few words.docx\",\n    \"continuous\": false\n  },\n  \"assignments\": [],\n  \"workflowSettings\": [],\n  \"targetLangs\": [\n    \"cs\"\n  ]\n}\n```\n\nCreate and assign job in project with workflow step:\n```\n\n{\n  \"targetLangs\": [\n    \"de\"\n  ],\n  \"useProjectFileImportSettings\": \"true\",\n  \"workflowSettings\": [\n    {\n      \"id\": \"64\",\n      \"due\": \"2007-12-03T10:15:30.00Z\",\n      \"assignments\": [\n        {\n          \"targetLang\": \"de\",\n          \"providers\": [\n            {\n              \"id\": \"3\",\n              \"type\": \"VENDOR\"\n            }\n          ]\n        }\n      ],\n      \"notifyProvider\": {\n        \"organizationEmailTemplate\": {\n          \"id\": \"39\"\n        },\n        \"notificationIntervalInMinutes\": \"10\"\n      }\n    }\n  ]\n}\n```\n    ",
        "operationId": "createJob",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Memsource",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "application/json"
            }
          },
          {
            "name": "Content-Disposition",
            "in": "header",
            "description": "must match pattern `((inline|attachment); )?(filename\\*=UTF-8''(.+)|filename=\"?(.+)\"?)`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InputStream"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/connectorTask": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Create job from connector asynchronous download task",
        "description": "\nCreates the job in project specified by path param projectUid. Source file is defined by downloadTaskId parameter. That is value of finished download async task \n[Connector - Download file (async)](#operation/getFile_1).\n\nPlease supply job metadata in body.\n\nAccepted metadata: \n\n  - `targetLangs` - **required**\n  - `due` - ISO 8601\n  - `workflowSettings` - project with workflow - see examples bellow\n  - `assignments` - project without workflows - see examples bellow\n  - `importSettings` - re-usable import settings - see [Create import settings](#operation/createImportSettings)\n  - `useProjectFileImportSettings` - mutually exclusive with importSettings\n  - `callbackUrl` - consumer callback\n  - `path` - original destination directory\n  - `preTranslate` - set pre translate job after import\n  \nCreate job simple (without workflow steps, without assignments):\n```\n{\n  \"targetLangs\": [\n    \"cs_cz\",\n    \"es_es\"\n  ]\n}\n```\n\nCreate and assign job in project without workflow step:\n```\n{\n  \"targetLangs\": [\n    \"cs_cz\"\n  ],\n  \"callbackUrl\": \"https://my-shiny-service.com/consumeCallback\",\n  \"importSettings\": {\n    \"uid\": \"abcd123\"\n  },\n  \"due\": \"2007-12-03T10:15:30.00Z\",\n  \"path\": \"destination directory\",\n  \"assignments\": [\n    {\n      \"targetLang\": \"cs_cz\",\n      \"providers\": [\n        {\n          \"id\": \"4321\",\n          \"type\": \"USER\"\n        }\n      ]\n    }\n  ],\n  \"notifyProvider\": {\n    \"organizationEmailTemplate\": {\n      \"id\": \"39\"\n    },\n    \"notificationIntervalInMinutes\": \"10\"\n  }\n}\n```\n\nCreate and assign job in project with workflow step:\n```\n{\n  \"targetLangs\": [\n    \"de\"\n  ],\n  \"useProjectFileImportSettings\": \"true\",\n  \"workflowSettings\": [\n    {\n      \"id\": \"64\",\n      \"due\": \"2007-12-03T10:15:30.00Z\",\n      \"assignments\": [\n        {\n          \"targetLang\": \"de\",\n          \"providers\": [\n            {\n              \"id\": \"3\",\n              \"type\": \"VENDOR\"\n            }\n          ]\n        }\n      ],\n      \"notifyProvider\": {\n        \"organizationEmailTemplate\": {\n          \"id\": \"39\"\n        },\n        \"notificationIntervalInMinutes\": \"10\"\n      }\n    }\n  ]\n}\n```\n    ",
        "operationId": "createJobFromAsyncDownloadTask",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "downloadTaskId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "continuous",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobCreateRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/source": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Update source",
        "description": "\nAPI updated source file for specified job\n\nJob file can be provided directly in the message body. \n\nPlease supply jobs in `Memsource` header. \n\nFor file in the request body provide also the filename in `Content-Disposition` header.\n\nIf a job from a multilingual file is updated, all jobs from the same file are update too even if their UIDs aren't \nlisted in the jobs field.\n\nAccepted metadata: \n\n  - `jobs` - **required** - list of jobs UID reference (maximum size `100`)\n  - `preTranslate` - pre translate flag (default `false`)\n  - `allowAutomaticPostAnalysis` - if automatic post editing analysis should be created. If not specified then value \n                                   is taken from the analyse settings of the project\n  - `callbackUrl` - consumer callback\n\nJob restrictions:\n  - job must belong to project specified in path (`projectUid`)\n  - job `UID` must be from the first workflow step\n  - job cannot be split\n  - job cannot be continuous\n  - job cannot originate in a connector\n  - status in any of the job's workflow steps cannot be a final\n    status (`COMPLETED_BY_LINGUIST`, `COMPLETED`, `CANCELLED`)\n  - job UIDs must be from the same multilingual file if a multilingual file is updated\n  - multiple multilingual files or a mixture of multilingual and other jobs cannot be updated in one call\n\nFile restrictions:\n  - file cannot be a `.zip` file\n\nExample:\n\n```\n{\n  \"jobs\": [\n    {\n        \"uid\": \"jobIn1stWfStepAndNonFinalStatusUid\"\n    }\n  ],\n  \"preTranslate\": false,\n  \"allowAutomaticPostAnalysis\": false\n  \"callbackUrl\": \"https://my-shiny-service.com/consumeCallback\"\n}\n```\n\n",
        "operationId": "updateSource",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Memsource",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "application/json"
            }
          },
          {
            "name": "Content-Disposition",
            "in": "header",
            "description": "must match pattern `((inline|attachment); )?(filename\\*=UTF-8''(.+)|filename=\"?(.+)\"?)`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InputStream"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobUpdateSourceResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/target": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Update target",
        "description": "\nAPI update target file for specified job\n\nJob file can be provided directly in the message body.\n\nPlease supply jobs in `Memsource` header.\n\nFor file in the request body provide also the filename in `Content-Disposition` header.\n\nAccepted metadata:\n\n  - `jobs` - **required** - list of jobs UID reference (maximum size `1`)\n  - `propagateConfirmedToTm` - sets if confirmed segments should be stored in TM (default value: true)\n  - `callbackUrl` - consumer callback\n  - `targetSegmentationRule` - ID reference to segmentation rule of organization to use for update target\n  - `unconfirmChangedSegments` - sets if segments should stay unconfirmed\n\nJob restrictions:\n  - job must belong to project specified in path (`projectUid`)\n  - job cannot be split\n  - job cannot be continuous\n  - job cannot be multilingual\n  - job cannot originate in a connector\n  - job cannot have different file extension than original file\n\nFile restrictions:\n  - file cannot be a `.zip` file\n  - update target is not allowed for jobs with file extensions: xliff, po, tbx, tmx, ttx, ts\n\nExample:\n\n```\n{\n  \"jobs\": [\n    {\n        \"uid\": \"jobUid\"\n    }\n  ],\n  \"propagateConfirmedToTm\": true,\n  \"targetSegmentationRule\": {\n        \"id\": \"1\"\n   },\n  \"callbackUrl\": \"https://my-shiny-service.com/consumeCallback\"\n}\n```\n\n",
        "operationId": "updateTarget",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Memsource",
            "in": "header",
            "schema": {
              "type": "string",
              "format": "application/json"
            }
          },
          {
            "name": "Content-Disposition",
            "in": "header",
            "description": "must match pattern `((inline|attachment); )?(filename\\*=UTF-8''(.+)|filename=\"?(.+)\"?)`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InputStream"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobUpdateSourceResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/batch": {
      "put": {
        "tags": [
          "Job"
        ],
        "summary": "Edit jobs (batch)",
        "description": "\nReturns only jobs which were updated by the batch operation.\n",
        "operationId": "editParts",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPartUpdateBatchDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPartsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Job"
        ],
        "summary": "Delete job (batch)",
        "operationId": "deleteParts",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "purge",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPartDeleteReferences"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/humanTranslate": {
      "post": {
        "tags": [
          "Translation"
        ],
        "summary": "Human translate (Gengo or Unbabel)",
        "operationId": "humanTranslate",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HumanTranslateJobsDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncRequestWrapperDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/notifyAssigned": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Notify assigned users",
        "operationId": "notifyAssigned",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyJobPartsRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/compare": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Compare jobs on workflow levels",
        "operationId": "comparePart",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "atWorkflowLevel",
            "in": "query",
            "schema": {
              "maximum": 15,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "withWorkflowLevel",
            "in": "query",
            "schema": {
              "maximum": 15,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPartReadyReferences"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComparedSegmentsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/bilingualFile": {
      "post": {
        "tags": [
          "Job",
          "Bilingual File"
        ],
        "summary": "Download bilingual file",
        "operationId": "getBilingualFile",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "MXLF",
              "enum": [
                "MXLF",
                "DOCX",
                "XLIFF",
                "TMX"
              ]
            }
          },
          {
            "name": "preview",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetBilingualFileDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "application/octet-stream, application/mxliff, application/xliff+xml",
            "headers": {
              "Content-Disposition": {
                "description": "Contains filename (UTF-8 encoded). \n\n `filename*=UTF-8''ExampleFileName.md`",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/qualityAssurances/ignoreChecks": {
      "post": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Edit ignored checks",
        "operationId": "updateIgnoredChecks",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIgnoredChecksDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/workflowStep": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Get job's workflowStep",
        "operationId": "getPartsWorkflowStep",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectWorkflowStepDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/search": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Search jobs in project",
        "operationId": "searchPartsInProject",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchJobsRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchJobsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/segmentsCount": {
      "post": {
        "tags": [
          "Job",
          "Segment"
        ],
        "summary": "Get segments count",
        "description": "Provides segments count (progress data)",
        "operationId": "getSegmentsCount",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPartReadyReferences"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentsCountsResponseListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/termBases/createByJob": {
      "post": {
        "tags": [
          "Term Base",
          "Job"
        ],
        "summary": "Create term in job's term bases",
        "description": "Create new term in the write term base assigned to the job",
        "operationId": "createTermByJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTermsDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TermPairDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/references": {
      "get": {
        "tags": [
          "Project Reference File"
        ],
        "summary": "List project reference files",
        "operationId": "listReferenceFiles",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateCreatedSince",
            "in": "query",
            "description": "date time in ISO 8601 UTC format",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "description": "UID of user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "DATE_CREATED",
              "enum": [
                "FILENAME",
                "DATE_CREATED",
                "CREATED_BY"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "DESC",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceFilePageDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Project Reference File"
        ],
        "summary": "Create project reference file",
        "description": "Accepts `application/octet-stream` or `application/json`.<br>\n                       - `application/json` - `note` field will be converted to .txt.<br>\n                       - `application/octet-stream` - `Content-Disposition` header is required",
        "operationId": "createNoteRef",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Disposition",
            "in": "header",
            "description": "Required for `application/octet-stream`.<br> Example: `filename*=UTF-8''YourFileName.txt`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Memsource-Note",
            "in": "header",
            "description": "For use with `application/octet-stream`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReferenceFileNoteDto"
              }
            },
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/CreateReferenceFileNoteDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceFileReference"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Project Reference File"
        ],
        "summary": "Delete project reference files (batch)",
        "operationId": "batchDeleteReferenceFiles",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectReferenceFilesRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/references/{referenceFileId}": {
      "get": {
        "tags": [
          "Project Reference File"
        ],
        "summary": "Download project reference file",
        "operationId": "downloadReference",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "referenceFileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "application/octet-stream",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/references/download": {
      "post": {
        "tags": [
          "Project Reference File"
        ],
        "summary": "Download project reference files (batch)",
        "operationId": "batchDownloadReferenceFiles",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectReferenceFilesRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "application/octet-stream",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/references/creators": {
      "get": {
        "tags": [
          "Project Reference File"
        ],
        "summary": "List project reference file creators",
        "description": "The result is not paged and returns up to 50 users.\n                If the requested user is not included, the search can be narrowed down with the `userName` parameter.\n            ",
        "operationId": "listReferenceFileCreators",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReferencesDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projectTemplates/{projectTemplateUid}/transMemories/relevant": {
      "get": {
        "tags": [
          "Project Template",
          "Translation Memory"
        ],
        "summary": "List project template relevant translation memories",
        "operationId": "relevantTransMemories",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domainName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subDomainName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetLangs",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "strictLangMatching",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoTransMemoryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projectTemplates": {
      "get": {
        "tags": [
          "Project Template"
        ],
        "summary": "List project templates",
        "operationId": "getProjectTemplates",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerUid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domainName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subDomainName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "costCenterId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "costCenterName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "pattern": "dateCreated|templateName",
              "type": "string",
              "default": "dateCreated"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "schema": {
              "pattern": "asc|desc",
              "type": "string",
              "default": "desc"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoProjectTemplateReference"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Project Template"
        ],
        "summary": "Create project template",
        "operationId": "createProjectTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTemplateCreateActionDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projectTemplates/{projectTemplateUid}": {
      "get": {
        "tags": [
          "Project Template"
        ],
        "summary": "Get project template",
        "description": "Note: importSettings in response is deprecated and will be always null",
        "operationId": "getProjectTemplate",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project Template"
        ],
        "summary": "Edit project template",
        "operationId": "editProjectTemplate",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectTemplateEditDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Edited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Project Template"
        ],
        "summary": "Delete project template",
        "operationId": "deleteProjectTemplate",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projectTemplates/{projectTemplateUid}/accessSettings": {
      "get": {
        "tags": [
          "Project Template"
        ],
        "summary": "Get project template access and security settings",
        "operationId": "getProjectTemplateAccessSettings",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSecuritySettingsDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project Template"
        ],
        "summary": "Edit project template access and security settings",
        "operationId": "editProjectTemplateAccessSettings",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProjectSecuritySettingsDtoV2"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSecuritySettingsDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projectTemplates/{projectTemplateUid}/analyseSettings": {
      "get": {
        "tags": [
          "Project Template"
        ],
        "summary": "Get analyse settings",
        "operationId": "getAnalyseSettingsForProjectTemplate",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractAnalyseSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project Template"
        ],
        "summary": "Edit analyse settings",
        "operationId": "updateAnalyseSettingsForProjectTemplate",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditAnalyseSettingsDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractAnalyseSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projectTemplates/{projectTemplateUid}/importSettings": {
      "get": {
        "tags": [
          "Project Template"
        ],
        "summary": "Get import settings",
        "operationId": "getImportSettingsForProjectTemplate",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileImportSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project Template"
        ],
        "summary": "Edit project template import settings",
        "operationId": "editProjectTemplateImportSettings",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileImportSettingsCreateDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileImportSettingsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projectTemplates/{projectTemplateUid}/mtSettings": {
      "get": {
        "tags": [
          "Project Template"
        ],
        "summary": "Get project template machine translate settings",
        "operationId": "getMachineTranslateSettingsForProjectTemplate",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MTSettingsPerLanguageListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projectTemplates/{projectTemplateUid}/termBases": {
      "get": {
        "tags": [
          "Project Template",
          "Term Base"
        ],
        "summary": "Get term bases",
        "operationId": "getProjectTemplateTermBases",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateTermBaseListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project Template",
          "Term Base"
        ],
        "summary": "Edit term bases in project template",
        "operationId": "setProjectTemplateTermBases",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProjectTemplateTermBaseDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateTermBaseListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projectTemplates/{projectTemplateUid}/customFields": {
      "get": {
        "tags": [
          "Project Template"
        ],
        "summary": "Get custom fields of project template (page)",
        "operationId": "getCustomFieldsPage_1",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 20",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "description": "Filter by webhook creators UIDs",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "modifiedBy",
            "in": "query",
            "description": "Filter by webhook updaters UIDs",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort by this field",
            "schema": {
              "type": "string",
              "enum": [
                "CREATED",
                "LAST_MODIFIED"
              ]
            }
          },
          {
            "name": "sortTrend",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoCustomFieldInstanceDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project Template"
        ],
        "summary": "Edit custom fields of the project template (batch)",
        "operationId": "editCustomFields_1",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomFieldInstancesDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldInstancesDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "post": {
        "tags": [
          "Project Template"
        ],
        "summary": "Create custom field instances",
        "operationId": "createCustomFields_1",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomFieldInstancesDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldInstancesDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projectTemplates/{projectTemplateUid}/customFields/{fieldInstanceUid}": {
      "get": {
        "tags": [
          "Project Template"
        ],
        "summary": "Get custom field of project template",
        "operationId": "getCustomField_2",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldInstanceUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldInstanceDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project Template"
        ],
        "summary": "Edit custom field of project template",
        "operationId": "editCustomField_1",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldInstanceUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomFieldInstanceDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CustomFieldInstanceDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Project Template"
        ],
        "summary": "Delete custom field of project template",
        "operationId": "deleteCustomField_2",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldInstanceUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/termBases": {
      "get": {
        "tags": [
          "Project",
          "Term Base"
        ],
        "summary": "Get term bases",
        "operationId": "getProjectTermBases",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTermBaseListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project",
          "Term Base"
        ],
        "summary": "Edit term bases",
        "operationId": "setProjectTermBases",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetTermBaseDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTermBaseListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/termBases/relevant": {
      "get": {
        "tags": [
          "Project",
          "Term Base"
        ],
        "summary": "List project relevant term bases",
        "operationId": "relevantTermBases",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domainName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subDomainName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetLangs",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "strictLangMatching",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoTermBaseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/transMemories/relevant": {
      "get": {
        "tags": [
          "Project",
          "Translation Memory"
        ],
        "summary": "List project relevant translation memories",
        "operationId": "relevantTransMemories_1",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domainName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subDomainName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetLangs",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "strictLangMatching",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoTransMemoryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/projects/{projectUid}/transMemories/searchSegmentInProject": {
      "post": {
        "tags": [
          "Project",
          "Translation Memory"
        ],
        "summary": "Search translation memory for segment in the project",
        "description": "Returns at most <i>maxSegments</i>\n            records with <i>score >= scoreThreshold</i> and at most <i>maxSubsegments</i> records which are subsegment,\n            i.e. the source text is substring of the query text.",
        "operationId": "searchSegment_1",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchTMRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseListTmDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/quotes/{quoteUid}": {
      "get": {
        "tags": [
          "Quote"
        ],
        "summary": "Get quote",
        "operationId": "get_2",
        "parameters": [
          {
            "name": "quoteUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "Quote"
        ],
        "summary": "Delete quote",
        "operationId": "deleteQuote",
        "parameters": [
          {
            "name": "quoteUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/quotes/email": {
      "post": {
        "tags": [
          "Quote"
        ],
        "summary": "Email quotes",
        "operationId": "emailQuotes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailQuotesRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailQuotesResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/scim/ResourceTypes": {
      "get": {
        "tags": [
          "SCIM"
        ],
        "summary": "List the types of SCIM Resources available",
        "operationId": "getResourceTypes",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScimResourceTypeSchema"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/scim/ServiceProviderConfig": {
      "get": {
        "tags": [
          "SCIM"
        ],
        "summary": "Retrieve the Service Provider's Configuration",
        "operationId": "getServiceProviderConfigDto",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceProviderConfigDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/scim/Schemas/{schemaUrn}": {
      "get": {
        "tags": [
          "SCIM"
        ],
        "summary": "Get supported SCIM Schema by urn",
        "operationId": "getSchemaByUrn",
        "parameters": [
          {
            "name": "schemaUrn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScimResourceSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/scim/Schemas": {
      "get": {
        "tags": [
          "SCIM"
        ],
        "summary": "Get supported SCIM Schemas",
        "operationId": "getSchemas",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScimResourceSchema"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/scim/Users/{userId}": {
      "get": {
        "tags": [
          "SCIM"
        ],
        "summary": "Get user",
        "operationId": "getScimUser",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScimUserCoreDto"
                }
              },
              "application/scim+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScimUserCoreDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "SCIM"
        ],
        "summary": "Edit user using SCIM",
        "operationId": "editUser",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScimUserCoreDto"
              }
            },
            "application/scim+json": {
              "schema": {
                "$ref": "#/components/schemas/ScimUserCoreDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScimUserCoreDto"
                }
              },
              "application/scim+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScimUserCoreDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "SCIM"
        ],
        "summary": "Delete user using SCIM",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": [
          "SCIM"
        ],
        "summary": "Patch user using SCIM",
        "operationId": "patchUser",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Patched",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScimUserCoreDto"
                }
              },
              "application/scim+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScimUserCoreDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/scim/Users": {
      "get": {
        "tags": [
          "SCIM"
        ],
        "summary": "Search users",
        "description": "\nThis operation supports <a href=\"http://ldapwiki.com/wiki/SCIM%20Filtering\" target=\"_blank\">SCIM Filter</a>, \n<a href=\"http://ldapwiki.com/wiki/SCIM%20Search%20Request\" target=\"_blank\">SCIM attributes</a> and \n<a href=\"http://ldapwiki.com/wiki/SCIM%20Sorting\" target=\"_blank\">SCIM sort</a>\n\nSupported attributes:\n  - `id`\n  - `active`\n  - `userName`\n  - `name.givenName`\n  - `name.familyName`\n  - `emails.value`\n  - `meta.created`\n",
        "operationId": "searchUsers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "See method description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "See method description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "See method description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "See method description",
            "schema": {
              "type": "string",
              "default": "ascending",
              "enum": [
                "ascending",
                "descending"
              ]
            }
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The 1-based index of the first search result. Default 1",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Non-negative Integer. Specifies the desired maximum number of search results per page; e.g., 10.",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "SCIM"
        ],
        "summary": "Create user using SCIM",
        "description": "\nSupported schema: `\"urn:ietf:params:scim:schemas:core:2.0:User\"`\n\nCreate active user:\n```\n{\n    \"schemas\": [\n        \"urn:ietf:params:scim:schemas:core:2.0:User\"\n    ],\n    \"active\": true,\n    \"userName\": \"john.doe\",\n    \"emails\": [\n        {\n            \"primary\": true,\n            \"value\": \"john.doe@example.com\",\n            \"type\": \"work\"\n        }\n    ],\n    \"name\": {\n        \"givenName\": \"John\",\n        \"familyName\": \"Doe\"\n    }\n}\n```\n",
        "operationId": "createUserSCIM",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScimUserCoreDto"
              }
            },
            "application/scim+json": {
              "schema": {
                "$ref": "#/components/schemas/ScimUserCoreDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScimUserCoreDto"
                }
              },
              "application/scim+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScimUserCoreDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/segmentationRules": {
      "get": {
        "tags": [
          "Segmentation Rules"
        ],
        "summary": "List segmentation rules",
        "operationId": "getListOfSegmentationRules",
        "parameters": [
          {
            "name": "locales",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoSegmentationRuleReference"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Segmentation Rules"
        ],
        "summary": "Create segmentation rule",
        "description": "Creates new Segmentation Rule with file and segRule JSON Object as header parameter. The same object is used for GET action.",
        "operationId": "createSegmentationRule",
        "parameters": [
          {
            "name": "segRule",
            "in": "header",
            "required": true,
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string",
              "format": "application/json: {name:'name', locale:'en', primary:'false', filename:'extra_file.xml'}"
            },
            "example": "{name:'name', locale:'en', primary:'false', filename:'extra_file.xml'}"
          }
        ],
        "requestBody": {
          "description": "streamed file",
          "content": {
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InputStream"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentationRuleDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/segmentationRules/{segRuleId}": {
      "get": {
        "tags": [
          "Segmentation Rules"
        ],
        "summary": "Get segmentation rule",
        "operationId": "getSegmentationRule",
        "parameters": [
          {
            "name": "segRuleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentationRuleDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Segmentation Rules"
        ],
        "summary": "Edit segmentation rule",
        "operationId": "updatesSegmentationRule",
        "parameters": [
          {
            "name": "segRuleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditSegmentationRuleDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentationRuleDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Segmentation Rules"
        ],
        "summary": "Delete segmentation rule",
        "operationId": "deletesSegmentationRule",
        "parameters": [
          {
            "name": "segRuleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/spellCheck/check": {
      "post": {
        "tags": [
          "Spell Check"
        ],
        "summary": "Spell check",
        "description": "Spell check using the settings of the user's organization",
        "operationId": "check",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpellCheckRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpellCheckResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/spellCheck/suggest": {
      "post": {
        "tags": [
          "Spell Check"
        ],
        "summary": "Suggest a word",
        "description": "Spell check suggest using the users's spell check dictionary",
        "operationId": "suggest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuggestRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/spellCheck/words": {
      "post": {
        "tags": [
          "Spell Check"
        ],
        "summary": "Add word to dictionary",
        "operationId": "addWord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryItemDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/spellCheck/check/{jobUid}": {
      "post": {
        "tags": [
          "Spell Check"
        ],
        "summary": "Spell check for job",
        "description": "Spell check using the settings from the project of the job",
        "operationId": "checkByJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpellCheckRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpellCheckResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/subDomains": {
      "get": {
        "tags": [
          "SubDomain"
        ],
        "summary": "List subdomains",
        "operationId": "listSubDomains",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "description": "Uid of user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "NAME",
              "enum": [
                "NAME",
                "DATE_CREATED"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoSubDomainDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "SubDomain"
        ],
        "summary": "Create subdomain",
        "operationId": "createSubDomain",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubDomainEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubDomainDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/subDomains/{subDomainUid}": {
      "get": {
        "tags": [
          "SubDomain"
        ],
        "summary": "Get subdomain",
        "operationId": "getSubDomain",
        "parameters": [
          {
            "name": "subDomainUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubDomainDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "SubDomain"
        ],
        "summary": "Edit subdomain",
        "operationId": "updateSubDomain",
        "parameters": [
          {
            "name": "subDomainUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubDomainEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubDomainDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "SubDomain"
        ],
        "summary": "Delete subdomain",
        "operationId": "deleteSubDomain",
        "parameters": [
          {
            "name": "subDomainUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/termBases/{termBaseUid}": {
      "get": {
        "tags": [
          "Term Base"
        ],
        "summary": "Get term base",
        "operationId": "getTermBase",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TermBaseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Term Base"
        ],
        "summary": "Edit term base",
        "description": "It is possible to add new languages only",
        "operationId": "updateTermBase",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TermBaseEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TermBaseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Term Base"
        ],
        "summary": "Delete term base",
        "operationId": "deleteTermBase",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "purge",
            "in": "query",
            "description": "purge=false - the Termbase is can later be restored, \n                    \"purge=true - the Termbase is completely deleted and cannot be restored",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/termBases": {
      "get": {
        "tags": [
          "Term Base"
        ],
        "summary": "List term bases",
        "operationId": "listTermBases",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "description": "Language of the term base",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domainId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subDomainId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoTermBaseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Term Base"
        ],
        "summary": "Create term base",
        "operationId": "createTermBase",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TermBaseEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TermBaseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/termBases/{termBaseUid}/upload": {
      "post": {
        "tags": [
          "Term Base"
        ],
        "summary": "Upload term base",
        "description": "\nTerms can be imported from XLS/XLSX and TBX file formats into a term base.\nSee <a target=\"_blank\" href=\"https://help.memsource.com/hc/en-us/articles/115003681851-Term-Bases\">Memsource Wiki</a>\n",
        "operationId": "importTermBase",
        "parameters": [
          {
            "name": "Content-Disposition",
            "in": "header",
            "description": "must match pattern `((inline|attachment); )?filename\\*=UTF-8''(.+)`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "charset",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "UTF-8"
            }
          },
          {
            "name": "strictLangMatching",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "updateTerms",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InputStream"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportTermBaseResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/termBases/{termBaseUid}/concepts": {
      "get": {
        "tags": [
          "Term Base"
        ],
        "summary": "List concepts",
        "operationId": "listConcepts",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConceptListResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Term Base"
        ],
        "summary": "Create concept",
        "operationId": "createConcept",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConceptEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConceptWithMetadataDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Term Base"
        ],
        "summary": "Delete concepts",
        "operationId": "deleteConcepts",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConceptListReference"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/termBases/{termBaseUid}/concepts/{conceptUid}": {
      "get": {
        "tags": [
          "Term Base"
        ],
        "summary": "Get concept",
        "operationId": "getConcept",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conceptUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConceptWithMetadataDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Term Base"
        ],
        "summary": "Update concept",
        "operationId": "updateConcept",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conceptUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConceptEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConceptWithMetadataDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/termBases/{termBaseUid}/terms": {
      "post": {
        "tags": [
          "Term Base"
        ],
        "summary": "Create term",
        "description": "Set conceptId to assign the term to an existing concept, otherwise a new concept will be created.",
        "operationId": "createTerm",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TermCreateDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TermDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Term Base"
        ],
        "summary": "Clear term base",
        "description": "Deletes all terms",
        "operationId": "clearTermBase",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/termBases/{termBaseUid}/terms/{termId}": {
      "get": {
        "tags": [
          "Term Base"
        ],
        "summary": "Get term",
        "operationId": "getTerm",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "termId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TermDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Term Base"
        ],
        "summary": "Edit term",
        "operationId": "updateTerm",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "termId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TermEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TermDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Term Base"
        ],
        "summary": "Delete term",
        "operationId": "deleteTerm",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "termId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/termBases/{termBaseUid}/concepts/{conceptId}": {
      "delete": {
        "tags": [
          "Term Base"
        ],
        "summary": "Delete concept",
        "operationId": "deleteConcept",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conceptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/termBases/{termBaseUid}/concepts/{conceptId}/terms": {
      "get": {
        "tags": [
          "Term Base"
        ],
        "summary": "Get terms of concept",
        "operationId": "listTermsOfConcept",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conceptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConceptDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/termBases/{termBaseUid}/lastBackgroundTask": {
      "get": {
        "tags": [
          "Term Base"
        ],
        "summary": "Last import status",
        "operationId": "getLastBackgroundTask",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackgroundTasksTbDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/termBases/{termBaseUid}/browse": {
      "post": {
        "tags": [
          "Term Base"
        ],
        "summary": "Browse term base",
        "operationId": "browseTerms",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BrowseRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BrowseResponseListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/termBases/{termBaseUid}/search": {
      "post": {
        "tags": [
          "Term Base"
        ],
        "summary": "Search term base",
        "operationId": "searchTerms",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TermBaseSearchRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseListTbDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/termBases/{termBaseUid}/export": {
      "get": {
        "tags": [
          "Term Base"
        ],
        "summary": "Export term base",
        "operationId": "exportTermBase",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Tbx",
              "enum": [
                "Tbx",
                "Xlsx"
              ]
            }
          },
          {
            "name": "charset",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "UTF-8"
            }
          },
          {
            "name": "termStatus",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "NEW",
                "APPROVED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "application/octet-stream",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/termBases/{termBaseUid}/metadata": {
      "get": {
        "tags": [
          "Term Base"
        ],
        "summary": "Get term base metadata",
        "operationId": "getTermBaseMetadata",
        "parameters": [
          {
            "name": "termBaseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataTbDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/transMemories/{transMemoryUid}/search": {
      "post": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Search translation memory (sync)",
        "operationId": "search",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseListTmDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/transMemories": {
      "get": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "List translation memories",
        "operationId": "listTransMemories",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceLang",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetLang",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "domainId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subDomainId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "businessUnitId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoTransMemoryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Create translation memory",
        "operationId": "createTransMemory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransMemoryCreateDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransMemoryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/transMemories/{transMemoryUid}": {
      "get": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Get translation memory",
        "operationId": "getTransMemory",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransMemoryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Edit translation memory",
        "operationId": "editTransMemory",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransMemoryEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransMemoryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Delete translation memory",
        "operationId": "deleteTransMemory",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "purge",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/transMemories/{transMemoryUid}/targetLanguages": {
      "post": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Add target language to translation memory",
        "operationId": "addTargetLangToTransMemory",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetLanguageDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransMemoryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/transMemories/downloadCleaned/{asyncRequestId}": {
      "get": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Download cleaned TM",
        "operationId": "downloadCleanedTM",
        "parameters": [
          {
            "name": "asyncRequestId",
            "in": "path",
            "description": "Request ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "application/octet-stream",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/transMemories/{transMemoryUid}/segments": {
      "post": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Insert segment",
        "operationId": "insertToTransMemory",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Delete all segments",
        "operationId": "clearTransMemory",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/transMemories/{transMemoryUid}/relatedProjects": {
      "get": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "List related projects",
        "operationId": "getRelatedProjects",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoAbstractProjectDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/transMemories/{transMemoryUid}/metadata": {
      "get": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Get translation memory metadata",
        "operationId": "getMetadata",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "byLanguage",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/transMemories/{transMemoryUid}/segments/{segmentId}": {
      "put": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Edit segment",
        "operationId": "updateTranslation",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "segmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Delete both source and translation",
        "description": "Not recommended for bulk removal of segments",
        "operationId": "deleteSourceAndTranslations",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "segmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/transMemories/{transMemoryUid}/segments/{segmentId}/lang/{lang}": {
      "delete": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Delete segment of given language",
        "description": "Not recommended for bulk removal of segments",
        "operationId": "deleteTranslation",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "segmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/transMemories/{transMemoryUid}/lastBackgroundTask": {
      "get": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Get last task information",
        "operationId": "getBackgroundTasks_1",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackgroundTasksTmDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/transMemories/{transMemoryUid}/wildCardSearch": {
      "post": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Wildcard search",
        "operationId": "wildcardSearch",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WildCardSearchRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseListTmDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/transMemories/downloadExport/{asyncRequestId}": {
      "get": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Download export",
        "operationId": "downloadSearchResult",
        "parameters": [
          {
            "name": "asyncRequestId",
            "in": "path",
            "description": "Request ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "TMX",
              "enum": [
                "TMX",
                "XLSX"
              ]
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Fields to include in exported XLSX",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "TEXT",
                  "PREVIOUS_SEGMENT",
                  "NEXT_SEGMENT",
                  "CONTEXT_KEY",
                  "CREATED_BY",
                  "CREATED_AT",
                  "MODIFIED_BY",
                  "MODIFIED_AT",
                  "CLIENT",
                  "PROJECT",
                  "DOMAIN",
                  "SUBDOMAIN",
                  "NOTE",
                  "REVIEWED",
                  "ALIGNED",
                  "FILENAME",
                  "METADATA"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "application/octet-stream",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/transMemories/{transMemoryUid}/exportByQueryAsync": {
      "post": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Search translation memory",
        "description": "Use [this API](#operation/downloadSearchResult) to download result",
        "operationId": "exportByQueryAsync",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportByQueryDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncExportTMByQueryResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/transMemories/extractCleaned": {
      "post": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Extract cleaned translation memory",
        "description": "Returns a ZIP file containing the cleaned translation memories in the specified outputFormat.",
        "operationId": "exportCleanedTMs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CleanedTransMemoriesDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncRequestWrapperDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/projects/{projectUid}/jobs/{jobUid}/translations/translateWithMachineTranslation": {
      "post": {
        "tags": [
          "Translation"
        ],
        "summary": "Translate using machine translation",
        "description": "Configured machine translate settings is used",
        "operationId": "machineTranslationJob",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineTranslateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/priceLists/{priceListUid}": {
      "get": {
        "tags": [
          "Price List"
        ],
        "summary": "Get price list",
        "operationId": "getPriceList",
        "parameters": [
          {
            "name": "priceListUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationPriceListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Price List"
        ],
        "summary": "Update price list",
        "operationId": "updatePriceList",
        "parameters": [
          {
            "name": "priceListUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationPriceListCreateDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationPriceListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Price List"
        ],
        "summary": "Delete price list",
        "operationId": "deletePriceList",
        "parameters": [
          {
            "name": "priceListUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/priceLists": {
      "get": {
        "tags": [
          "Price List"
        ],
        "summary": "List price lists",
        "operationId": "getListOfPriceList",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoTranslationPriceListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Price List"
        ],
        "summary": "Create price list",
        "operationId": "createPriceList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationPriceListCreateDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationPriceListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/priceLists/{priceListUid}/priceSets": {
      "get": {
        "tags": [
          "Price List"
        ],
        "summary": "List price sets",
        "operationId": "getPricesWithWorkflowSteps",
        "parameters": [
          {
            "name": "priceListUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sourceLanguages",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "targetLanguages",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoTranslationPriceSetDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Price List"
        ],
        "summary": "Add language pairs",
        "operationId": "createLanguagePair",
        "parameters": [
          {
            "name": "priceListUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationPriceSetCreateDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationPriceSetListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Price List"
        ],
        "summary": "Remove language pairs",
        "operationId": "deleteLanguagePairs",
        "parameters": [
          {
            "name": "priceListUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationPriceSetBulkDeleteDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/priceLists/{priceListUid}/priceSets/{sourceLanguage}/{targetLanguage}": {
      "delete": {
        "tags": [
          "Price List"
        ],
        "summary": "Remove language pair",
        "operationId": "deleteLanguagePair",
        "parameters": [
          {
            "name": "priceListUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sourceLanguage",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetLanguage",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/priceLists/{priceListUid}/priceSets/minimumPrices": {
      "post": {
        "tags": [
          "Price List"
        ],
        "summary": "Edit minimum prices",
        "operationId": "setMinimumPriceForSet",
        "parameters": [
          {
            "name": "priceListUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationPriceSetBulkMinimumPricesDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationPriceListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/priceLists/{priceListUid}/priceSets/prices": {
      "post": {
        "tags": [
          "Price List"
        ],
        "summary": "Edit prices",
        "description": "If object contains only price, all languages and workflow steps will be updated",
        "operationId": "setPrices",
        "parameters": [
          {
            "name": "priceListUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationPriceSetBulkPricesDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslationPriceListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/users/{userUid}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user",
        "operationId": "deleteUser_1",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/users/{userUid}/projects": {
      "get": {
        "tags": [
          "User",
          "Project"
        ],
        "summary": "List assigned projects",
        "operationId": "listAssignedProjects",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "NEW",
                  "ACCEPTED",
                  "DECLINED",
                  "DELIVERED",
                  "EMAILED",
                  "COMPLETED",
                  "CANCELLED"
                ]
              }
            }
          },
          {
            "name": "targetLang",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "workflowStepId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "dueInHours",
            "in": "query",
            "description": "-1 for jobs that are overdue",
            "schema": {
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoProjectReference"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List users",
        "operationId": "getListOfUsersFiltered",
        "parameters": [
          {
            "name": "firstName",
            "in": "query",
            "description": "Filter for first name, that starts with value",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "Filter for last name, that starts with value",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter for last name or first name, that starts with value",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "nameOrEmail",
            "in": "query",
            "description": "Filter for last name, first name or email starting with the value",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ADMIN",
                  "PROJECT_MANAGER",
                  "LINGUIST",
                  "GUEST",
                  "SUBMITTER"
                ]
              }
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "LAST_NAME",
                  "FIRST_NAME"
                ]
              }
            }
          },
          {
            "name": "order",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ASC",
                  "DESC"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoUserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/users/{userUid}/updatePassword": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Update password",
        "description": "\n* Password length must be between 8 and 255\n* Password must not be same as the username\n",
        "operationId": "updatePassword",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPasswordEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/users/{userUid}/emailLoginInformation": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Send login information",
        "operationId": "sendLoginInfo",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/users/{userUid}/undelete": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Restore user",
        "operationId": "cancelDeletion",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/users/{userUid}/loginStatistics": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Login statistics",
        "operationId": "loginActivity",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStatisticsListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/users/{userUid}/workflowSteps": {
      "get": {
        "tags": [
          "User",
          "Workflow Step"
        ],
        "summary": "List assigned workflow steps",
        "operationId": "listWorkflowSteps",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "NEW",
                  "ACCEPTED",
                  "DECLINED",
                  "DELIVERED",
                  "EMAILED",
                  "COMPLETED",
                  "CANCELLED"
                ]
              }
            }
          },
          {
            "name": "projectUid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetLang",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "dueInHours",
            "in": "query",
            "description": "-1 for jobs that are overdue",
            "schema": {
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoWorkflowStepReference"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/users/{userUid}/targetLangs": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List assigned target languages",
        "operationId": "listTargetLangs",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "NEW",
                  "ACCEPTED",
                  "DECLINED",
                  "DELIVERED",
                  "EMAILED",
                  "COMPLETED",
                  "CANCELLED"
                ]
              }
            }
          },
          {
            "name": "projectUid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workflowStepId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "dueInHours",
            "in": "query",
            "description": "-1 for jobs that are overdue",
            "schema": {
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoString"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/users/{userUid}/jobs": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List assigned jobs",
        "operationId": "listJobs",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "NEW",
                  "ACCEPTED",
                  "DECLINED",
                  "DELIVERED",
                  "EMAILED",
                  "COMPLETED",
                  "CANCELLED"
                ]
              }
            }
          },
          {
            "name": "projectUid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetLang",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "workflowStepId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "dueInHours",
            "in": "query",
            "description": "-1 for jobs that are overdue",
            "schema": {
              "minimum": -1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoAssignedJobDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/users/lastLogins": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "List last login dates",
        "operationId": "user-lastLogins",
        "parameters": [
          {
            "name": "userName",
            "in": "query",
            "schema": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ADMIN",
                  "PROJECT_MANAGER",
                  "LINGUIST",
                  "GUEST",
                  "SUBMITTER"
                ]
              }
            }
          },
          {
            "name": "sort",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "LAST_LOGIN_DATE"
                ]
              }
            }
          },
          {
            "name": "order",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ASC",
                  "DESC"
                ]
              }
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 100, default 100",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoLastLoginDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/vendors/{vendorUid}": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Get vendor",
        "operationId": "getVendor",
        "parameters": [
          {
            "name": "vendorUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/vendors": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "List vendors",
        "operationId": "listVendors",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name or the vendor, for filtering",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoVendorDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Create vendor",
        "operationId": "createVendor",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/CreateVendorDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/webhooksCalls/replay/latest": {
      "post": {
        "tags": [
          "Webhook"
        ],
        "summary": "Replay last webhook calls",
        "description": "\nReplays specified number of last Webhook calls from oldest to the newest one\n",
        "operationId": "replayLast",
        "parameters": [
          {
            "name": "numberOfCalls",
            "in": "query",
            "description": "Number of calls to be replayed",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 5
            }
          },
          {
            "name": "events",
            "in": "query",
            "description": "List of Webhook events to filter by",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "JOB_STATUS_CHANGED",
                  "JOB_CREATED",
                  "JOB_DELETED",
                  "JOB_ASSIGNED",
                  "JOB_DUE_DATE_CHANGED",
                  "JOB_UPDATED",
                  "JOB_TARGET_UPDATED",
                  "JOB_EXPORTED",
                  "JOB_UNEXPORTED",
                  "PROJECT_CREATED",
                  "PROJECT_DELETED",
                  "PROJECT_STATUS_CHANGED",
                  "PROJECT_DUE_DATE_CHANGED",
                  "SHARED_PROJECT_ASSIGNED",
                  "PROJECT_METADATA_UPDATED",
                  "PRE_TRANSLATION_FINISHED",
                  "ANALYSIS_CREATED",
                  "CONTINUOUS_JOB_UPDATED",
                  "PROJECT_TEMPLATE_CREATED",
                  "PROJECT_TEMPLATE_UPDATED",
                  "PROJECT_TEMPLATE_DELETED"
                ]
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of Webhook calls to filter by",
            "schema": {
              "type": "string",
              "enum": [
                "SUCCESS",
                "FAIL"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/webhooksCalls": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "Lists webhook calls",
        "operationId": "getWebhookCallsList",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "events",
            "in": "query",
            "description": "List of Webhook events to filter by",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "JOB_STATUS_CHANGED",
                  "JOB_CREATED",
                  "JOB_DELETED",
                  "JOB_ASSIGNED",
                  "JOB_DUE_DATE_CHANGED",
                  "JOB_UPDATED",
                  "JOB_TARGET_UPDATED",
                  "JOB_EXPORTED",
                  "JOB_UNEXPORTED",
                  "PROJECT_CREATED",
                  "PROJECT_DELETED",
                  "PROJECT_STATUS_CHANGED",
                  "PROJECT_DUE_DATE_CHANGED",
                  "SHARED_PROJECT_ASSIGNED",
                  "PROJECT_METADATA_UPDATED",
                  "PRE_TRANSLATION_FINISHED",
                  "ANALYSIS_CREATED",
                  "CONTINUOUS_JOB_UPDATED",
                  "PROJECT_TEMPLATE_CREATED",
                  "PROJECT_TEMPLATE_UPDATED",
                  "PROJECT_TEMPLATE_DELETED"
                ]
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of Webhook calls to filter by",
            "schema": {
              "type": "string",
              "enum": [
                "SUCCESS",
                "FAIL"
              ]
            }
          },
          {
            "name": "webhookUid",
            "in": "query",
            "description": "UID of Webhook to filter by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parentUid",
            "in": "query",
            "description": "UID of parent webhook call to filter by",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoWebhookCallDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v1/webhooksCalls/replay": {
      "post": {
        "tags": [
          "Webhook"
        ],
        "summary": "Replay webhook calls",
        "description": "\nReplays given list of Webhook Calls in specified order in the request\n",
        "operationId": "replayWebhookCalls",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/ReplayRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/workflowSteps": {
      "get": {
        "tags": [
          "Workflow Step"
        ],
        "summary": "List workflow steps",
        "operationId": "listWFSteps",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "ID",
              "enum": [
                "ID",
                "NAME",
                "ORDER",
                "ABBR"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the workflow step",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "abbr",
            "in": "query",
            "description": "Abbreviation of workflow step",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoWorkflowStepDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Workflow Step"
        ],
        "summary": "Create workflow step",
        "operationId": "createWFStep",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkflowStepDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStepDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v1/workflowSteps/{workflowStepUid}": {
      "put": {
        "tags": [
          "Workflow Step"
        ],
        "summary": "Edit workflow step",
        "operationId": "editWFStep",
        "parameters": [
          {
            "name": "workflowStepUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditWorkflowStepDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowStepDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/analyses/{analyseUid}": {
      "put": {
        "tags": [
          "Analysis"
        ],
        "summary": "Edit analysis",
        "description": "If no netRateScheme is provided in\nrequest, then netRateScheme associated with provider will be used if it exists, otherwise it will remain the same\nas it was.",
        "operationId": "editAnalysis",
        "parameters": [
          {
            "name": "analyseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/EditAnalyseV2Dto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyseV2Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/analyses": {
      "post": {
        "tags": [
          "Analysis"
        ],
        "summary": "Create analysis",
        "description": "Returns created analyses - batching analyses by number of segments (api.segment.count.approximation, default 100000), in case request contains more segments than maximum (api.segment.max.count, default 300000), returns 400 bad request.",
        "operationId": "createAnalyseAsync_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAnalyseAsyncV2Dto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncAnalyseListResponseV2Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/analyses/bulk": {
      "put": {
        "tags": [
          "Analysis"
        ],
        "summary": "Edit analyses (batch)",
        "description": "If no netRateScheme is provided in request, then netRateScheme associated with provider will\nbe used if it exists, otherwise it will remain the same as it was.",
        "operationId": "analyses-batchEdit-v2",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/BulkEditAnalyseV2Dto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysesV2Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/connectors/{connectorId}/folders/{folder}/files/{file}": {
      "post": {
        "tags": [
          "Connector"
        ],
        "summary": "Download file (async)",
        "description": "\nCreate an asynchronous request to download a file from a (sub)folder of the selected connector. \nAfter a callback with successful response is received, prepared file can be downloaded by [Download prepared file](#operation/getPreparedFile) \nor [Create job from connector asynchronous download task](#operation/createJobFromAsyncDownloadTask).\n",
        "operationId": "getFile_1",
        "parameters": [
          {
            "name": "connectorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetFileRequestParamsDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncFileOpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/connectors/{connectorId}/folders/{folder}/files/{fileName}/upload": {
      "post": {
        "tags": [
          "Connector"
        ],
        "summary": "Upload file (async)",
        "description": "Upload a file to a subfolder of the selected connector",
        "operationId": "uploadFile_1",
        "parameters": [
          {
            "name": "connectorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mimeType",
            "in": "query",
            "description": "Mime type of the file to upload",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Memsource",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "format": "application/json"
            },
            "example": "{\"subfolderName\":\"myFolder\",\"commitMessage\":\"add translation\",\"callbackUrl\":\"https://webhook.site/83b222a1-5cf2-48ec-b8b9-7f79bb2a25e4\"}"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "multipart/form-data"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "Translated file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncFileOpResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v2/connectors/{connectorId}/folders/{folder}/files/{file}/tasks/{taskId}": {
      "get": {
        "tags": [
          "Connector"
        ],
        "summary": "Download prepared file",
        "description": "Download the file by referencing successfully finished async download request [Connector - Download file (async)](#operation/getFile_1).",
        "operationId": "getPreparedFile",
        "parameters": [
          {
            "name": "connectorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "file",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/InputStreamLength"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v2/jobs/workflowChanges": {
      "post": {
        "tags": [
          "Workflow changes"
        ],
        "summary": "Download workflow changes report",
        "operationId": "downloadWorkflowChanges",
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowChangesDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/jobs/{jobUid}/conversations/lqas": {
      "post": {
        "tags": [
          "Conversations"
        ],
        "summary": "Create LQA conversation",
        "operationId": "createLqaConversation_1",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLqaConversationDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LQAConversationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/jobs/{jobUid}/conversations/lqas/{conversationId}": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Update LQA conversation",
        "operationId": "updateLqaConversation_1",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditLqaConversationDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LQAConversationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/jobs/{jobUid}/conversations/lqas/{conversationId}/comments": {
      "post": {
        "tags": [
          "Conversations"
        ],
        "summary": "Add LQA comment",
        "operationId": "addLQAComment_1",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCommentDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddLqaCommentResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/jobs/{jobUid}/conversations/lqas/{conversationId}/comments/{commentId}": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Edit LQA comment",
        "operationId": "updateLQAComment_1",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCommentDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LQAConversationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/projects/{projectUid}/providers/suggest": {
      "post": {
        "tags": [
          "Project",
          "Provider"
        ],
        "summary": "Get suggested providers",
        "operationId": "listProviders_3",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderListDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v2/projects/{projectUid}/qaSettings": {
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Edit quality assurance settings",
        "operationId": "setProjectQASettingsV2",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditQASettingsDtoV2"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/QASettingsDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/projects/applyTemplate/{templateUid}": {
      "post": {
        "tags": [
          "Project",
          "Project Template"
        ],
        "summary": "Create project from template",
        "operationId": "createProjectFromTemplateV2",
        "parameters": [
          {
            "name": "templateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectFromTemplateV2Dto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractProjectDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/projects/applyTemplate/async/{templateUid}": {
      "post": {
        "tags": [
          "Project",
          "Project Template"
        ],
        "summary": "Create project from template (async)",
        "operationId": "createProjectFromTemplateV2Async",
        "parameters": [
          {
            "name": "templateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectFromTemplateAsyncV2Dto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncRequestWrapperV2Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/projects/{projectUid}/accessSettings": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get access and security settings",
        "operationId": "getProjectAccessSettingsV2",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSecuritySettingsDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Edit access and security settings",
        "operationId": "editProjectAccessSettingsV2",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProjectSecuritySettingsDtoV2"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSecuritySettingsDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/projects/{projectUid}/workflowSteps": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get workflow steps",
        "operationId": "getProjectWorkflowStepsV2",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "withAssignedJobs",
            "in": "query",
            "description": "Return only steps containing jobs assigned to the calling linguist.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectWorkflowStepListDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v2/projects/{projectUid}": {
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Edit project",
        "operationId": "editProjectV2",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/EditProjectV2Dto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractProjectDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/projects/{projectUid}/jobs/qualityAssurances/settings": {
      "get": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Get QA settings",
        "description": "Returns enabled quality assurance checks and settings.",
        "operationId": "enabledQualityChecksForJob",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityAssuranceChecksDtoV2"
                },
                "example": {
                  "forbiddenStrings": [
                    "string"
                  ],
                  "enabledChecks": [
                    {
                      "checkerType": "EmptyTranslation",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "TrailingPunctuation",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "Formatting",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "JoinTags",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "MissingNumbers",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "MultipleSpaces",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "NonConformingTerm",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "NotConfirmed",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "TranslationLength",
                      "ignorable": false
                    },
                    {
                      "checkerType": "AbsoluteLength",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "RelativeLength",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "EmptyPairTags",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "InconsistentTranslationTargetSource",
                      "ignorable": true,
                      "instant": false
                    },
                    {
                      "checkerType": "InconsistentTranslationSourceTarget",
                      "ignorable": true,
                      "instant": false
                    },
                    {
                      "checkerType": "ForbiddenString",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "SpellCheck",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "RepeatedWords",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "InconsistentTagContent",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "EmptyTagContent",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "Malformed",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "ForbiddenTerm",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "NewerAtLowerLevel",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "LeadingAndTrailingSpaces",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "TargetSourceIdentical",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "SourceOrTargetRegexp"
                    },
                    {
                      "checkerType": "UnmodifiedFuzzyTranslationTM",
                      "ignorable": true,
                      "instant": false
                    },
                    {
                      "checkerType": "UnmodifiedFuzzyTranslationMTNT",
                      "ignorable": true,
                      "instant": false
                    },
                    {
                      "checkerType": "Moravia",
                      "ignorable": false,
                      "instant": false,
                      "context": {
                        "moraviaProfileId": "MoraviaProfileIdValue"
                      }
                    },
                    {
                      "checkerType": "ExtraNumbers",
                      "ignorable": true,
                      "instant": false
                    },
                    {
                      "checkerType": "UnresolvedConversation",
                      "ignorable": false
                    },
                    {
                      "checkerType": "NestedTags",
                      "ignorable": false,
                      "instant": false
                    }
                  ],
                  "excludeLockedSegments": true,
                  "userCanSetInstantQA": true,
                  "strictJobStatus": true,
                  "regexpRules": [
                    {
                      "description": "string",
                      "sourceRegexp": "string",
                      "targetRegexp": "string",
                      "id": "string",
                      "ignorable": true,
                      "instant": true
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v2/projects/{projectUid}/jobs/{jobUid}/qualityAssurances/settings": {
      "get": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Get QA settings for job",
        "description": "Returns enabled quality assurance checks and settings for job.",
        "operationId": "enabledQualityChecksForJob_1",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityAssuranceChecksDtoV2"
                },
                "example": {
                  "forbiddenStrings": [
                    "string"
                  ],
                  "enabledChecks": [
                    {
                      "checkerType": "EmptyTranslation",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "TrailingPunctuation",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "Formatting",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "JoinTags",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "MissingNumbers",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "MultipleSpaces",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "NonConformingTerm",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "NotConfirmed",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "TranslationLength",
                      "ignorable": false
                    },
                    {
                      "checkerType": "AbsoluteLength",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "RelativeLength",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "EmptyPairTags",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "InconsistentTranslationTargetSource",
                      "ignorable": true,
                      "instant": false
                    },
                    {
                      "checkerType": "InconsistentTranslationSourceTarget",
                      "ignorable": true,
                      "instant": false
                    },
                    {
                      "checkerType": "ForbiddenString",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "SpellCheck",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "RepeatedWords",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "InconsistentTagContent",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "EmptyTagContent",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "Malformed",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "ForbiddenTerm",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "NewerAtLowerLevel",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "LeadingAndTrailingSpaces",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "TargetSourceIdentical",
                      "ignorable": false,
                      "instant": false
                    },
                    {
                      "checkerType": "SourceOrTargetRegexp"
                    },
                    {
                      "checkerType": "UnmodifiedFuzzyTranslationTM",
                      "ignorable": true,
                      "instant": false
                    },
                    {
                      "checkerType": "UnmodifiedFuzzyTranslationMTNT",
                      "ignorable": true,
                      "instant": false
                    },
                    {
                      "checkerType": "Moravia",
                      "ignorable": false,
                      "instant": false,
                      "context": {
                        "moraviaProfileId": "MoraviaProfileIdValue"
                      }
                    },
                    {
                      "checkerType": "ExtraNumbers",
                      "ignorable": true,
                      "instant": false
                    },
                    {
                      "checkerType": "UnresolvedConversation",
                      "ignorable": false
                    },
                    {
                      "checkerType": "NestedTags",
                      "ignorable": false,
                      "instant": false
                    }
                  ],
                  "excludeLockedSegments": true,
                  "userCanSetInstantQA": true,
                  "strictJobStatus": true,
                  "regexpRules": [
                    {
                      "description": "string",
                      "sourceRegexp": "string",
                      "targetRegexp": "string",
                      "id": "string",
                      "ignorable": true,
                      "instant": true
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v2/projects/{projectUid}/jobs/webEditor": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Get Web Editor URL",
        "description": "\nPossible warning codes are:\n  - `NOT_ACCEPTED_BY_LINGUIST` - Job is not accepted by linguist\n  - `NOT_ASSIGNED_TO_LINGUIST` - Job is not assigned to linguist\n  - `PDF` - One of requested jobs is PDF\n  - `PREVIOUS_WORKFLOW_NOT_COMPLETED` - Previous workflow step is not completed\n  - `PREVIOUS_WORKFLOW_NOT_COMPLETED_STRICT` - Previous workflow step is not completed and project has strictWorkflowFinish set to true\n  - `IN_DELIVERED_STATE` - Jobs in DELIVERED state\n  - `IN_COMPLETED_STATE` - Jobs in COMPLETED state\n  - `IN_REJECTED_STATE` - Jobs in REJECTED state\n\nPossible error codes are:\n  - `ASSIGNED_TO_OTHER_USER` - Job is accepted by other user\n  - `NOT_UNIQUE_TARGET_LANG` - Requested jobs contains different target locales\n  - `TOO_MANY_SEGMENTS` - Count of requested job's segments is higher than **40000**\n  - `TOO_MANY_JOBS` - Count of requested jobs is higher than **290**\n  - `COMPLETED_JOINED_WITH_OTHER` - Jobs in COMPLETED state cannot be joined with jobs in other states\n  - `DELIVERED_JOINED_WITH_OTHER` - Jobs in DELIVERED state cannot be joined with jobs in other states\n  - `REJECTED_JOINED_WITH_OTHER` - Jobs in REJECTED state cannot be joined with jobs in other states\n\nWarning response example:\n```\n{\n    \"warnings\": [\n        {\n            \"message\": \"Not accepted by linguist\",\n            \"args\": {\n                \"jobs\": [\n                    \"abcd1234\"\n                ]\n            },\n            \"code\": \"NOT_ACCEPTED_BY_LINGUIST\"\n        },\n        {\n            \"message\": \"Previous workflow step not completed\",\n            \"args\": {\n                \"jobs\": [\n                    \"abcd1234\"\n                ]\n            },\n            \"code\": \"PREVIOUS_WORKFLOW_NOT_COMPLETED\"\n        }\n    ],\n    \"url\": \"/web/job/abcd1234-efgh5678/translate\"\n}\n```\n\nError response example:\nStatus: `400 Bad Request`\n```\n{\n    \"errorCode\": \"NOT_UNIQUE_TARGET_LANG\",\n    \"errorDescription\": \"Only files with identical target languages can be joined\",\n    \"errorDetails\": [\n        {\n            \"code\": \"NOT_UNIQUE_TARGET_LANG\",\n            \"args\": {\n                \"targetLocales\": [\n                    \"de\",\n                    \"en\"\n                ]\n            },\n            \"message\": \"Only files with identical target languages can be joined\"\n        },\n        {\n            \"code\": \"TOO_MANY_SEGMENTS\",\n            \"args\": {\n                \"maxSegments\": 40000,\n                \"segments\": 400009\n            },\n            \"message\": \"Up to 40000 segments can be opened in the Memsource Web Editor, job has 400009 segments\"\n        }\n    ]\n}\n```\n",
        "operationId": "webEditorLinkV2",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebEditorLinkDtoV2"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/WebEditorLinkDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/projects/{projectUid}/jobs/pseudoTranslate": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Pseudo-translate job",
        "operationId": "pseudoTranslate_1",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/PseudoTranslateWrapperDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/projects/{projectUid}/jobs": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "List jobs",
        "operationId": "listPartsV2",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "count",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "workflowLevel",
            "in": "query",
            "schema": {
              "maximum": 15,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "status",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "NEW",
                  "ACCEPTED",
                  "DECLINED",
                  "REJECTED",
                  "DELIVERED",
                  "EMAILED",
                  "COMPLETED",
                  "CANCELLED"
                ]
              }
            }
          },
          {
            "name": "assignedUser",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "dueInHours",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filename",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetLang",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assignedVendor",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoJobPartReferenceV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v2/projects/{projectUid}/jobs/preTranslate": {
      "post": {
        "tags": [
          "Translation"
        ],
        "summary": "Pre-translate job",
        "operationId": "preTranslate_1",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreTranslateJobsV2Dto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncRequestWrapperV2Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/projects/{projectUid}/jobs/translations": {
      "delete": {
        "tags": [
          "Job"
        ],
        "summary": "Delete specific translations",
        "operationId": "deleteAllTranslations_1",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/JobPartReadyDeleteTranslationDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/projects/{projectUid}/jobs/{jobUid}/providers/suggest": {
      "post": {
        "tags": [
          "Provider",
          "Job"
        ],
        "summary": "Get suggested providers",
        "operationId": "listProviders_4",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderListDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v2/projects/{projectUid}/jobs/{jobUid}/targetFile": {
      "put": {
        "tags": [
          "Job"
        ],
        "summary": "Download target file (async)",
        "description": "\n    This call will create async request for downloading target file with translation that can be downloaded when\n    finished. This means even for other jobs that were created via 'split jobs' etc.\n    ",
        "operationId": "completedFile_1",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v2/projects/{projectUid}/jobs/{jobUid}/downloadTargetFile/{asyncRequestId}": {
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "Download target file based on async request",
        "description": "\n    This call will return target file with translation. This means even for other jobs that were created via\n    'split jobs' etc.\n    ",
        "operationId": "downloadCompletedFile",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asyncRequestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "ORIGINAL",
              "enum": [
                "ORIGINAL",
                "PDF"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "application/octet-stream",
            "headers": {
              "Content-Disposition": {
                "description": "Contains filename (UTF-8 encoded). \n\n `filename*=UTF-8''ExampleFileName.md`",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v2/projects/{projectUid}/jobs/qualityAssurances/ignoredWarnings": {
      "post": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Add ignored warnings",
        "operationId": "addIgnoredWarnings_1",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIgnoredWarningsDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateIgnoredWarningsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Delete ignored warnings",
        "operationId": "deleteIgnoredWarnings_1",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIgnoredWarningsDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/projectTemplates/{projectTemplateUid}/transMemories": {
      "put": {
        "tags": [
          "Project Template"
        ],
        "summary": "Edit translation memories",
        "description": "If user wants to edit “All target languages” or \"All workflow steps”, \n                       but there are already varied TM settings for individual languages or steps, \n                       then the user risks to overwrite these individual choices.",
        "operationId": "setProjectTemplateTransMemoriesV2",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProjectTemplateTransMemoriesV2Dto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateTransMemoryListV2Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/quotes": {
      "post": {
        "tags": [
          "Quote"
        ],
        "summary": "Create quote",
        "description": "Either WorkflowSettings or Units must be sent for billingUnit \"Hour\".",
        "operationId": "createQuoteV2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteCreateV2Dto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteV2Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/transMemories/{transMemoryUid}/segments": {
      "delete": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Delete all segments.",
        "description": "This call is **asynchronous**, use [this API](#operation/getAsyncRequest) to check the result",
        "operationId": "clearTransMemoryV2",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v2/transMemories/{transMemoryUid}/import": {
      "post": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Import TMX",
        "operationId": "importTransMemoryV2",
        "parameters": [
          {
            "name": "Content-Length",
            "in": "header",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content-Disposition",
            "in": "header",
            "description": "must match pattern `((inline|attachment); )?filename\\*=UTF-8''(.+)`",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strictLangMatching",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "stripNativeCodes",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "$ref": "#/components/schemas/InputStream"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/InputStream"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncRequestWrapperV2Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/transMemories/{transMemoryUid}/export": {
      "post": {
        "tags": [
          "Translation Memory"
        ],
        "summary": "Export translation memory",
        "description": "Use [this API](#operation/downloadSearchResult) to download result",
        "operationId": "exportV2",
        "parameters": [
          {
            "name": "transMemoryUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/ExportTMDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncExportTMResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/webhooks/{webHookUid}": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "Get webhook",
        "operationId": "getWebHook_1",
        "parameters": [
          {
            "name": "webHookUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHookDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Webhook"
        ],
        "summary": "Edit webhook",
        "operationId": "updateWebHook_1",
        "parameters": [
          {
            "name": "webHookUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebHookDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHookDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Webhook"
        ],
        "summary": "Delete webhook",
        "operationId": "deleteWebHook_1",
        "parameters": [
          {
            "name": "webHookUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v2/webhooks": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "Lists webhooks",
        "operationId": "getWebHookList_1",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, starting with 0, default 0",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by webhook name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by enabled/disabled status",
            "schema": {
              "type": "string",
              "enum": [
                "ENABLED",
                "DISABLED"
              ]
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "Filter by webhook URL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "events",
            "in": "query",
            "description": "Filter by webhook events",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "JOB_STATUS_CHANGED",
                  "JOB_CREATED",
                  "JOB_DELETED",
                  "JOB_ASSIGNED",
                  "JOB_DUE_DATE_CHANGED",
                  "JOB_UPDATED",
                  "JOB_TARGET_UPDATED",
                  "JOB_EXPORTED",
                  "JOB_UNEXPORTED",
                  "PROJECT_CREATED",
                  "PROJECT_DELETED",
                  "PROJECT_STATUS_CHANGED",
                  "PROJECT_DUE_DATE_CHANGED",
                  "SHARED_PROJECT_ASSIGNED",
                  "PROJECT_METADATA_UPDATED",
                  "PRE_TRANSLATION_FINISHED",
                  "ANALYSIS_CREATED",
                  "CONTINUOUS_JOB_UPDATED",
                  "PROJECT_TEMPLATE_CREATED",
                  "PROJECT_TEMPLATE_UPDATED",
                  "PROJECT_TEMPLATE_DELETED"
                ]
              }
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "description": "Filter by webhook creators UIDs",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "modifiedBy",
            "in": "query",
            "description": "Filter by webhook updaters UIDs",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Sort by this field",
            "schema": {
              "type": "string",
              "enum": [
                "NAME",
                "STATUS",
                "CREATED",
                "LAST_MODIFIED"
              ]
            }
          },
          {
            "name": "sortTrend",
            "in": "query",
            "description": "Sort direction",
            "schema": {
              "type": "string",
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoWebHookDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "Webhook"
        ],
        "summary": "Create webhook",
        "operationId": "createWebHook_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebHookDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebHookDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/webhooks/previews": {
      "get": {
        "tags": [
          "Webhook"
        ],
        "summary": "Get webhook body previews",
        "operationId": "getWebhookPreviews",
        "parameters": [
          {
            "name": "events",
            "in": "query",
            "description": "Filter by webhook events, example for multiple: ?events=JOB_CREATED&events=JOB_UPDATED",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "JOB_STATUS_CHANGED",
                  "JOB_CREATED",
                  "JOB_ASSIGNED",
                  "JOB_DUE_DATE_CHANGED",
                  "JOB_DELETED",
                  "JOB_UPDATED",
                  "JOB_TARGET_UPDATED",
                  "JOB_EXPORTED",
                  "JOB_UNEXPORTED",
                  "PROJECT_CREATED",
                  "PROJECT_STATUS_CHANGED",
                  "PROJECT_DUE_DATE_CHANGED",
                  "SHARED_PROJECT_ASSIGNED",
                  "PROJECT_METADATA_UPDATED",
                  "PROJECT_DELETED",
                  "PRE_TRANSLATION_FINISHED",
                  "ANALYSIS_CREATED",
                  "CONTINUOUS_JOB_UPDATED",
                  "PROJECT_TEMPLATE_CREATED",
                  "PROJECT_TEMPLATE_UPDATED",
                  "PROJECT_TEMPLATE_DELETED"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookPreviewsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v2/webhooks/{webhookUid}/test": {
      "post": {
        "tags": [
          "Webhook"
        ],
        "summary": "Send test webhook",
        "operationId": "sendTestWebhook",
        "parameters": [
          {
            "name": "webhookUid",
            "in": "path",
            "description": "UID of the webhook",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event",
            "in": "query",
            "description": "Event of test webhook",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "JOB_STATUS_CHANGED",
                "JOB_CREATED",
                "JOB_DELETED",
                "JOB_ASSIGNED",
                "JOB_DUE_DATE_CHANGED",
                "JOB_UPDATED",
                "JOB_TARGET_UPDATED",
                "JOB_EXPORTED",
                "JOB_UNEXPORTED",
                "PROJECT_CREATED",
                "PROJECT_DELETED",
                "PROJECT_STATUS_CHANGED",
                "PROJECT_DUE_DATE_CHANGED",
                "SHARED_PROJECT_ASSIGNED",
                "PROJECT_METADATA_UPDATED",
                "PRE_TRANSLATION_FINISHED",
                "ANALYSIS_CREATED",
                "CONTINUOUS_JOB_UPDATED",
                "PROJECT_TEMPLATE_CREATED",
                "PROJECT_TEMPLATE_UPDATED",
                "PROJECT_TEMPLATE_DELETED"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Test webhook sent",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v2/projects/{projectUid}/jobs/{jobUid}/termBases/searchByJob": {
      "post": {
        "tags": [
          "Term Base",
          "Job"
        ],
        "summary": "Search job's term bases",
        "description": "Search all read term bases assigned to the job",
        "operationId": "searchTermsByJob_1",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchTbByJobRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchTbResponseListDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v2/projects/{projectUid}/jobs/{jobUid}/termBases/searchInTextByJob": {
      "post": {
        "tags": [
          "Term Base",
          "Job"
        ],
        "summary": "Search terms in text",
        "description": "Search in text in all read term bases assigned to the job",
        "operationId": "searchTermsInTextByJobV2",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchTbInTextByJobRequestDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchInTextResponseList2Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/analyses/{analyseUid}": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Get analysis",
        "operationId": "getAnalyseV3",
        "parameters": [
          {
            "name": "analyseUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyseV3Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v3/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "operationId": "login_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginV3Dto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseV3Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/auth/loginToSession": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login to session",
        "operationId": "loginToSession_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginToSessionV3Dto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginToSessionResponseV3Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/auth/loginOther": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login as another user",
        "description": "Available only for admin",
        "operationId": "loginOther_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginOtherV3Dto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseV3Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/jobs": {
      "patch": {
        "tags": [
          "Job"
        ],
        "summary": "Edit jobs (with possible partial updates)",
        "description": "Allows partial update, not breaking whole batch if single job fails and returns list of errors",
        "operationId": "patchUpdateJobParts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPartPatchBatchDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPartPatchResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/projects/{projectUid}/jobs/{jobUid}/transMemories/search": {
      "post": {
        "tags": [
          "Job",
          "Translation Memory"
        ],
        "summary": "Search job's translation memories",
        "operationId": "searchByJob3",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/SearchTMByJobRequestDtoV3"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseListTmDtoV3"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/projects/{projectUid}/jobs/{jobUid}/transMemories/wildCardSearch": {
      "post": {
        "tags": [
          "Job",
          "Translation Memory"
        ],
        "summary": "Wildcard search job's translation memories",
        "operationId": "wildCardSearchByJob3",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WildCardSearchByJobRequestDtoV3"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponseListTmDtoV3"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/jobs/{jobUid}/conversations/plains/{conversationId}/comments": {
      "post": {
        "tags": [
          "Conversations"
        ],
        "summary": "Add plain comment",
        "operationId": "addPlainComment_2",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCommentDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPlainCommentResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/jobs/{jobUid}/conversations/plains": {
      "post": {
        "tags": [
          "Conversations"
        ],
        "summary": "Create plain conversation",
        "operationId": "createSegmentTargetConversation_1",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlainConversationDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainConversationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/jobs/{jobUid}/conversations/plains/{conversationId}/comments/{commentId}": {
      "put": {
        "tags": [
          "Conversations"
        ],
        "summary": "Edit plain comment",
        "operationId": "updatePlainComment_1",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCommentDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "202": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainConversationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/projects/{projectUid}/preTranslateSettings": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get Pre-translate settings",
        "operationId": "getPreTranslateSettingsForProject_2",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreTranslateSettingsV3Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Update Pre-translate settings",
        "operationId": "editProjectPreTranslateSettings_2",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreTranslateSettingsV3Dto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreTranslateSettingsV3Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/projects/{projectUid}/analyses": {
      "get": {
        "tags": [
          "Project",
          "Analysis"
        ],
        "summary": "List analyses by project",
        "operationId": "listByProjectV3",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name to search by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uid",
            "in": "query",
            "description": "Uid to search by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Page size, accepts values between 1 and 50, default 50",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting field",
            "schema": {
              "type": "string",
              "default": "DATE_CREATED",
              "enum": [
                "DATE_CREATED"
              ]
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sorting order",
            "schema": {
              "type": "string",
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "onlyOwnerOrg",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoAnalyseReference"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v3/projects": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Create project",
        "operationId": "createProjectV3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectV3Dto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractProjectDtoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/projects/{projectUid}/jobs/{jobUid}/qualityAssurances/run": {
      "post": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Run quality assurance",
        "description": "Call \"Get QA settings\" endpoint to get the list of enabled QA checks",
        "operationId": "runQaForJobPartV3",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QualityAssuranceRunDtoV3"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityAssuranceResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/projects/{projectUid}/jobs/qualityAssurances/run": {
      "post": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Run quality assurance (batch)",
        "description": "Call \"Get QA settings\" endpoint to get the list of enabled QA checks",
        "operationId": "runQaForJobPartsV3",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QualityAssuranceBatchRunDtoV3"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityAssuranceResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/projects/{projectUid}/jobs/qualityAssurances/segments/run": {
      "post": {
        "tags": [
          "Quality Assurance"
        ],
        "summary": "Run quality assurance on selected segments",
        "description": "By default runs only fast running checks. Source and target language of jobs have to match.",
        "operationId": "runQaForSegmentsV3",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QualityAssuranceSegmentsRunDtoV3"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualityAssuranceResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/projects/{projectUid}/jobs/{jobUid}/analyses": {
      "get": {
        "tags": [
          "Analysis",
          "Job"
        ],
        "summary": "List analyses",
        "operationId": "listPartAnalyseV3",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "jobUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDtoAnalyseReference"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v3/projects/{projectUid}/jobs/export": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Export jobs to online repository",
        "operationId": "exportToOnlineRepository",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/JobExportActionDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobExportResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/projectTemplates/{projectTemplateUid}/preTranslateSettings": {
      "get": {
        "tags": [
          "Project Template"
        ],
        "summary": "Get Pre-translate settings",
        "operationId": "getPreTranslateSettingsForProjectTemplate_2",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreTranslateSettingsV3Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project Template"
        ],
        "summary": "Update Pre-translate settings",
        "operationId": "updatePreTranslateSettingsForProjectTemplate_2",
        "parameters": [
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreTranslateSettingsV3Dto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreTranslateSettingsV3Dto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/projectTemplates/{projectTemplateUid}/transMemories": {
      "get": {
        "tags": [
          "Project Template",
          "Translation Memory"
        ],
        "summary": "Get translation memories",
        "operationId": "getProjectTemplateTransMemories_2",
        "parameters": [
          {
            "name": "targetLang",
            "in": "query",
            "description": "Filter project translation memories by target language",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wfStepUid",
            "in": "query",
            "description": "Filter project translation memories by workflow step",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectTemplateUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTemplateTransMemoryListDtoV3"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    },
    "/api2/v3/projects/{projectUid}/transMemories": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get translation memories",
        "operationId": "getProjectTransMemories_1",
        "parameters": [
          {
            "name": "targetLang",
            "in": "query",
            "description": "Filter project translation memories by target language",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wfStepUid",
            "in": "query",
            "description": "Filter project translation memories by workflow step",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTransMemoryListDtoV3"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Edit translation memories",
        "description": "If user wants to edit “All target languages” or \"All workflow steps”, \n                       but there are already varied TM settings for individual languages or steps, \n                       then the user risks to overwrite these individual choices.",
        "operationId": "setProjectTransMemoriesV3",
        "parameters": [
          {
            "name": "projectUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetProjectTransMemoriesV3Dto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectTransMemoryListDtoV3"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/users/{userUid}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user",
        "operationId": "getUserV3",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDtoV3"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Edit user",
        "operationId": "updateUserV3",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbstractUserEditDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDtoV3"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create user",
        "operationId": "createUserV3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AbstractUserCreateDto"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDtoV3"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/api2/v3/users/{userUid}/disableTwoFactorAuth": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Disable two-factor authentication",
        "operationId": "disableTwoFactorAuthV3",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDtoV3"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Resource not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          },
          "408": {
            "description": "Timeout",
            "content": {}
          },
          "410": {
            "description": "Gone",
            "content": {}
          },
          "415": {
            "description": "Unsupported media type",
            "content": {}
          },
          "429": {
            "description": "Too many requests",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          },
          "501": {
            "description": "Not implemented",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserReference": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "SYS_ADMIN",
              "SYS_ADMIN_READ",
              "ADMIN",
              "PROJECT_MANAGER",
              "LINGUIST",
              "GUEST",
              "SUBMITTER"
            ]
          },
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        }
      },
      "AdditionalWorkflowStepDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AdditionalWorkflowStepRequestDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name of the additional workflow step"
          }
        }
      },
      "PageDtoAdditionalWorkflowStepDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalWorkflowStepDto"
            }
          }
        }
      },
      "AsyncAnalyseResponseDto": {
        "type": "object",
        "properties": {
          "asyncRequest": {
            "$ref": "#/components/schemas/AsyncRequestDto"
          },
          "analyse": {
            "$ref": "#/components/schemas/ObjectReference"
          }
        }
      },
      "AsyncRequestDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "action": {
            "type": "string",
            "enum": [
              "PRE_ANALYSE",
              "POST_ANALYSE",
              "COMPARE_ANALYSE",
              "PARENT_ANALYSE",
              "PRE_TRANSLATE",
              "ASYNC_TRANSLATE",
              "IMPORT_JOB",
              "IMPORT_FILE",
              "ALIGN",
              "EXPORT_TMX_BY_QUERY",
              "EXPORT_TMX",
              "IMPORT_TMX",
              "INSERT_INTO_TM",
              "DELETE_TM",
              "CLEAR_TM",
              "QA",
              "QA_V3",
              "UPDATE_CONTINUOUS_JOB",
              "UPDATE_SOURCE",
              "UPDATE_TARGET",
              "EXTRACT_CLEANED_TMS",
              "GLOSSARY_PUT",
              "GLOSSARY_DELETE",
              "CREATE_PROJECT",
              "EXPORT_COMPLETE_FILE"
            ]
          },
          "asyncResponse": {
            "$ref": "#/components/schemas/AsyncResponseDto"
          },
          "parent": {
            "$ref": "#/components/schemas/AsyncRequestDto"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectReference"
          }
        }
      },
      "AsyncResponseDto": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "errorCode": {
            "type": "string"
          },
          "errorDesc": {
            "type": "string"
          },
          "errorDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetailDto"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetailDto"
            }
          },
          "acceptedSegmentsCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ErrorDetailDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code, e.g. NOT_FOUND."
          },
          "args": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            },
            "description": "Related arguments, e.g. number => \"hello world\""
          },
          "message": {
            "type": "string",
            "description": "Optional human-readable message."
          }
        }
      },
      "ObjectReference": {
        "type": "object"
      },
      "ProjectReference": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "innerId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "businessUnit": {
            "$ref": "#/components/schemas/BusinessUnitReference"
          },
          "domain": {
            "$ref": "#/components/schemas/DomainReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/SubDomainReference"
          },
          "client": {
            "$ref": "#/components/schemas/ClientReference"
          },
          "costCenter": {
            "$ref": "#/components/schemas/CostCenterReference"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "owner": {
            "$ref": "#/components/schemas/UserReference"
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorUserReference"
          },
          "purchaseOrder": {
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string"
          },
          "progress": {
            "$ref": "#/components/schemas/ProgressReference"
          },
          "metadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataReference"
            }
          },
          "note": {
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          }
        }
      },
      "IdReference": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "UidReference": {
        "required": [
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          }
        }
      },
      "AnalyseJobReference": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "innerId": {
            "type": "string"
          }
        }
      },
      "AnalyseLanguagePartDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLang": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DataDtoV1"
          },
          "discountedData": {
            "$ref": "#/components/schemas/DataDtoV1"
          },
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyseJobReference"
            }
          }
        }
      },
      "CountsDto": {
        "type": "object",
        "properties": {
          "segments": {
            "type": "number",
            "format": "double"
          },
          "words": {
            "type": "number",
            "format": "double"
          },
          "characters": {
            "type": "number",
            "format": "double"
          },
          "normalizedPages": {
            "type": "number",
            "format": "double"
          },
          "percent": {
            "type": "number",
            "format": "double"
          },
          "editingTime": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "DataDtoV1": {
        "type": "object",
        "properties": {
          "available": {
            "type": "boolean"
          },
          "all": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "repetitions": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "transMemoryMatches": {
            "$ref": "#/components/schemas/MatchCounts101Dto"
          },
          "machineTranslationMatches": {
            "$ref": "#/components/schemas/MatchCountsDto"
          },
          "nonTranslatablesMatches": {
            "$ref": "#/components/schemas/MatchCountsNTDtoV1"
          },
          "internalFuzzyMatches": {
            "$ref": "#/components/schemas/MatchCountsDto"
          }
        }
      },
      "MatchCounts101Dto": {
        "type": "object",
        "properties": {
          "match100": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match95": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match85": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match75": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match50": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match0": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match101": {
            "$ref": "#/components/schemas/CountsDto"
          }
        }
      },
      "MatchCountsDto": {
        "type": "object",
        "properties": {
          "match100": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match95": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match85": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match75": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match50": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match0": {
            "$ref": "#/components/schemas/CountsDto"
          }
        }
      },
      "MatchCountsNTDtoV1": {
        "type": "object",
        "properties": {
          "match100": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match99": {
            "$ref": "#/components/schemas/CountsDto"
          }
        }
      },
      "NetRateSchemeReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          }
        }
      },
      "AsyncAnalyseListResponseDto": {
        "type": "object",
        "properties": {
          "analyses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AsyncAnalyseResponseDto"
            }
          }
        }
      },
      "CreateAnalyseListAsyncDto": {
        "required": [
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "type": {
            "type": "string",
            "description": "default: PreAnalyse",
            "enum": [
              "PreAnalyse",
              "PostAnalyse",
              "Compare"
            ]
          },
          "includeFuzzyRepetitions": {
            "type": "boolean",
            "description": "Default: true"
          },
          "separateFuzzyRepetitions": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeConfirmedSegments": {
            "type": "boolean",
            "description": "Default: true"
          },
          "includeNumbers": {
            "type": "boolean",
            "description": "Default: true"
          },
          "includeLockedSegments": {
            "type": "boolean",
            "description": "Default: true"
          },
          "countSourceUnits": {
            "type": "boolean",
            "description": "Default: true"
          },
          "includeTransMemory": {
            "type": "boolean",
            "description": "Default: true. Works only for type=PreAnalyse."
          },
          "includeNonTranslatables": {
            "type": "boolean",
            "description": "Default: false. Works only for type=PreAnalyse."
          },
          "includeMachineTranslationMatches": {
            "type": "boolean",
            "description": "Default: false. Works only for type=PreAnalyse."
          },
          "transMemoryPostEditing": {
            "type": "boolean",
            "description": "Default: false. Works only for type=PostAnalyse."
          },
          "nonTranslatablePostEditing": {
            "type": "boolean",
            "description": "Default: false. Works only for type=PostAnalyse."
          },
          "machineTranslatePostEditing": {
            "type": "boolean",
            "description": "Default: false. Works only for type=PostAnalyse."
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "netRateScheme": {
            "$ref": "#/components/schemas/IdReference"
          },
          "compareWorkflowLevel": {
            "maximum": 15,
            "minimum": 1,
            "type": "integer",
            "description": "Required for type=Compare",
            "format": "int32"
          },
          "useProjectAnalysisSettings": {
            "type": "boolean",
            "description": "Default: false. Use default project settings. Will be overwritten with setting sent\n        in the API call."
          },
          "callbackUrl": {
            "type": "string"
          }
        }
      },
      "AnalyseRecalculateResponseDto": {
        "type": "object",
        "properties": {
          "analyses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AsyncAnalyseResponseDto"
            }
          }
        }
      },
      "AnalyseJobDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DataDtoV1"
          },
          "discountedData": {
            "$ref": "#/components/schemas/DataDtoV1"
          }
        }
      },
      "CleanupTask": {
        "type": "object"
      },
      "InputStream": {
        "type": "object"
      },
      "InputStreamLength": {
        "type": "object",
        "properties": {
          "stream": {
            "$ref": "#/components/schemas/InputStream"
          },
          "length": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "characterEncoding": {
            "type": "string"
          },
          "extension": {
            "type": "string"
          },
          "cleanupTask": {
            "$ref": "#/components/schemas/CleanupTask"
          }
        }
      },
      "AnalyseRecalculateRequestDto": {
        "required": [
          "analyses"
        ],
        "type": "object",
        "properties": {
          "analyses": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdReference"
            }
          },
          "callbackUrl": {
            "type": "string"
          }
        }
      },
      "PageDtoAnalyseJobDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyseJobDto"
            }
          }
        }
      },
      "BulkDeleteAnalyseDto": {
        "required": [
          "analyses"
        ],
        "type": "object",
        "properties": {
          "analyses": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdReference"
            }
          },
          "purge": {
            "type": "boolean",
            "description": "Default: false"
          }
        }
      },
      "PageDtoAsyncRequestDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AsyncRequestDto"
            }
          }
        }
      },
      "AsyncRequestStatusDto": {
        "type": "object",
        "properties": {
          "concurrentRequests": {
            "$ref": "#/components/schemas/ConcurrentRequestsDto"
          }
        }
      },
      "ConcurrentRequestsDto": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Max number of allowed concurrent request, null value means no limit",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "description": "Current count of running concurrent requests",
            "format": "int32"
          }
        }
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserReference"
          },
          "token": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          },
          "lastInvalidateAllSessionsPerformed": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LoginDto": {
        "required": [
          "password",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "description": "Required only for 2-factor authentication"
          }
        }
      },
      "LoginToSessionResponseDto": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserReference"
          },
          "cookie": {
            "type": "string"
          },
          "csrfToken": {
            "type": "string"
          }
        }
      },
      "LoginToSessionDto": {
        "required": [
          "password",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "rememberMe": {
            "type": "boolean"
          }
        }
      },
      "LoginOtherDto": {
        "required": [
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          }
        }
      },
      "EditionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "FeaturesDto": {
        "type": "object",
        "properties": {
          "icuEnabled": {
            "type": "boolean"
          },
          "rejectJobs": {
            "type": "boolean"
          },
          "qaHighlightsEnabled": {
            "type": "boolean"
          },
          "lqaBulkCommentsCreation": {
            "type": "boolean"
          },
          "mtForTMAbove100Enabled": {
            "type": "boolean"
          }
        }
      },
      "LoginUserDto": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserReference"
          },
          "csrfToken": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReference"
          },
          "edition": {
            "$ref": "#/components/schemas/EditionDto"
          },
          "features": {
            "$ref": "#/components/schemas/FeaturesDto"
          }
        }
      },
      "OrganizationReference": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "LoginWithGoogleDto": {
        "required": [
          "idToken"
        ],
        "type": "object",
        "properties": {
          "idToken": {
            "type": "string"
          }
        }
      },
      "LoginWithAppleDto": {
        "required": [
          "codeOrRefreshToken"
        ],
        "type": "object",
        "properties": {
          "codeOrRefreshToken": {
            "type": "string"
          }
        }
      },
      "AppleTokenResponseDto": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "expires_in": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          }
        }
      },
      "JobPartReference": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ACCEPTED",
              "DECLINED",
              "REJECTED",
              "DELIVERED",
              "EMAILED",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "providers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderReference"
            }
          },
          "targetLang": {
            "type": "string"
          },
          "workflowLevel": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/WorkflowStepReference"
          },
          "filename": {
            "type": "string"
          },
          "dateDue": {
            "type": "string",
            "format": "date-time"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "updateSourceDate": {
            "type": "string",
            "format": "date-time"
          },
          "imported": {
            "type": "boolean"
          },
          "jobAssignedEmailTemplate": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "notificationIntervalInMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "continuous": {
            "type": "boolean"
          },
          "sourceFileUid": {
            "type": "string"
          }
        }
      },
      "JobPartsDto": {
        "type": "object",
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobPartReference"
            }
          }
        }
      },
      "ProviderReference": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string",
            "readOnly": true
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "USER": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProviderReference"
          },
          {
            "type": "object",
            "properties": {
              "userName": {
                "type": "string",
                "readOnly": true
              },
              "firstName": {
                "type": "string",
                "readOnly": true
              },
              "lastName": {
                "type": "string",
                "readOnly": true
              },
              "email": {
                "type": "string",
                "readOnly": true
              },
              "active": {
                "type": "boolean",
                "readOnly": true
              }
            }
          }
        ]
      },
      "VENDOR": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProviderReference"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "readOnly": true
              },
              "defaultProjectOwnerId": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "WorkflowStepReference": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "lqaEnabled": {
            "type": "boolean"
          }
        }
      },
      "ComparedSegmentDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "Miss",
              "Diff"
            ]
          }
        }
      },
      "ComparedSegmentsDto": {
        "type": "object",
        "properties": {
          "segments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComparedSegmentDto"
            }
          }
        }
      },
      "BusinessUnitDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          }
        }
      },
      "PageDtoBusinessUnitDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BusinessUnitDto"
            }
          }
        }
      },
      "BusinessUnitEditDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "ClientReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ClientDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "displayNoteInProject": {
            "type": "boolean",
            "description": "Default: false"
          },
          "priceList": {
            "$ref": "#/components/schemas/PriceListReference"
          },
          "netRateScheme": {
            "$ref": "#/components/schemas/NetRateSchemeReference"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          }
        }
      },
      "PriceListReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        }
      },
      "ClientEditDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "externalId": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "note": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string"
          },
          "displayNoteInProject": {
            "type": "boolean",
            "description": "Default: false"
          },
          "priceList": {
            "$ref": "#/components/schemas/IdReference"
          },
          "netRateScheme": {
            "$ref": "#/components/schemas/IdReference"
          }
        }
      },
      "PageDtoClientDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientDto"
            }
          }
        }
      },
      "AutomatedProjectSettingsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/NameDto"
          },
          "active": {
            "type": "boolean"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "connector": {
            "$ref": "#/components/schemas/NameDto"
          },
          "remoteFolder": {
            "type": "string"
          }
        }
      },
      "ConnectorDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "DROPBOX",
              "GOOGLE",
              "FTP",
              "WORDPRESS",
              "GITHUB",
              "SFTP",
              "DRUPAL",
              "BOX",
              "GIT",
              "ZENDESK",
              "ONEDRIVE",
              "GITLAB",
              "MARKETO",
              "HUBSPOT",
              "HELPSCOUT",
              "SALESFORCE",
              "BITBUCKET",
              "BITBUCKETSERVER",
              "BRAZE",
              "SHAREPOINT",
              "AZURE",
              "SITECORE",
              "KENTICO",
              "KENTICO_KONTENT",
              "MAGENTO",
              "CONTENTFULENTRYLEVEL",
              "CONTENTFUL",
              "CONTENTSTACK",
              "JOOMLA",
              "CONFLUENCE",
              "TYPO3",
              "AEM_PLUGIN",
              "DRUPAL_PLUGIN",
              "AMAZON_S3",
              "PARDOT",
              "PHRASE"
            ]
          },
          "organization": {
            "$ref": "#/components/schemas/NameDto"
          },
          "createdBy": {
            "$ref": "#/components/schemas/NameDto"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "localToken": {
            "type": "string"
          },
          "automatedProjectSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AutomatedProjectSettingsDto"
            }
          }
        }
      },
      "NameDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ConnectorCreateResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "linkedAccount": {
            "type": "string"
          }
        }
      },
      "AbstractConnectorDto": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Name of the connector"
          },
          "type": {
            "type": "string",
            "description": "Connector type"
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "AdobeExperienceManager": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractConnectorDto"
          },
          {
            "required": [
              "host"
            ],
            "type": "object",
            "properties": {
              "urlRewriteFind": {
                "type": "string"
              },
              "urlRewriteReplace": {
                "type": "string"
              },
              "host": {
                "type": "string"
              }
            }
          }
        ]
      },
      "AmazonS3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractConnectorDto"
          },
          {
            "required": [
              "apiKey",
              "apiSecret"
            ],
            "type": "object",
            "properties": {
              "apiKey": {
                "type": "string"
              },
              "apiSecret": {
                "type": "string"
              }
            }
          }
        ]
      },
      "BitbucketServer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractConnectorDto"
          },
          {
            "required": [
              "host",
              "token"
            ],
            "type": "object",
            "properties": {
              "host": {
                "type": "string"
              },
              "commitMessage": {
                "type": "string"
              },
              "token": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Contentstack": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractConnectorDto"
          },
          {
            "required": [
              "apiKey",
              "authType"
            ],
            "type": "object",
            "properties": {
              "authType": {
                "type": "string"
              },
              "region": {
                "type": "string"
              },
              "nonLocalizableBlocksUids": {
                "type": "string"
              },
              "targetLangsFieldId": {
                "type": "string"
              },
              "apiKey": {
                "type": "string"
              },
              "sourceLang": {
                "type": "string"
              },
              "translateUrls": {
                "type": "boolean",
                "description": "Default false"
              },
              "translateTags": {
                "type": "boolean",
                "description": "Default false"
              },
              "managementToken": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "userName": {
                "type": "string"
              },
              "stackWFObserved": {
                "type": "string"
              },
              "stackWFUponImport": {
                "type": "string"
              },
              "stackWFExportSource": {
                "type": "string"
              },
              "stackWFExportTranslate": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Ftp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractConnectorDto"
          },
          {
            "required": [
              "host",
              "password",
              "port",
              "userName"
            ],
            "type": "object",
            "properties": {
              "userName": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "port": {
                "type": "integer",
                "format": "int32"
              },
              "encryption": {
                "type": "string",
                "description": "Default TLS_IF_AVAILABLE"
              }
            }
          }
        ]
      },
      "Git": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractConnectorDto"
          },
          {
            "required": [
              "host",
              "password",
              "userName"
            ],
            "type": "object",
            "properties": {
              "userName": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "commitMessage": {
                "type": "string"
              },
              "sshKeyName": {
                "type": "string"
              },
              "sshKey": {
                "type": "string"
              },
              "sshPassPhrase": {
                "type": "string"
              }
            }
          }
        ]
      },
      "GitLab": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractConnectorDto"
          },
          {
            "required": [
              "host",
              "token"
            ],
            "type": "object",
            "properties": {
              "commitMessage": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "token": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Joomla": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractConnectorDto"
          },
          {
            "required": [
              "host",
              "token"
            ],
            "type": "object",
            "properties": {
              "host": {
                "type": "string"
              },
              "token": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Kentico": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractConnectorDto"
          },
          {
            "required": [
              "host",
              "password",
              "userName"
            ],
            "type": "object",
            "properties": {
              "userName": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "sourceLang": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Magento": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractConnectorDto"
          },
          {
            "required": [
              "host",
              "token"
            ],
            "type": "object",
            "properties": {
              "host": {
                "type": "string"
              },
              "token": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Marketo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractConnectorDto"
          },
          {
            "required": [
              "apiKey",
              "apiSecret",
              "connectorType",
              "identityURL"
            ],
            "type": "object",
            "properties": {
              "apiKey": {
                "type": "string"
              },
              "apiSecret": {
                "type": "string"
              },
              "identityURL": {
                "type": "string"
              },
              "connectorType": {
                "type": "string"
              },
              "variables": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VariableDto"
                }
              },
              "segmentationMapping": {
                "$ref": "#/components/schemas/MarketoSegmentationMappingDto"
              },
              "translateTokens": {
                "type": "boolean"
              },
              "debugMode": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "MarketoSegmentMappingDto": {
        "type": "object",
        "properties": {
          "segmentId": {
            "type": "integer",
            "format": "int64"
          },
          "locale": {
            "type": "string"
          },
          "source": {
            "type": "boolean"
          }
        }
      },
      "MarketoSegmentationMappingDto": {
        "type": "object",
        "properties": {
          "segmentationId": {
            "type": "integer",
            "format": "int64"
          },
          "segmentsMapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketoSegmentMappingDto"
            }
          }
        }
      },
      "MicrosoftAzure": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractConnectorDto"
          },
          {
            "required": [
              "connectionString"
            ],
            "type": "object",
            "properties": {
              "connectionString": {
                "type": "string",
                "description": "Microsoft azure connection string"
              }
            }
          }
        ]
      },
      "Sftp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractConnectorDto"
          },
          {
            "required": [
              "host",
              "password",
              "port",
              "userName"
            ],
            "type": "object",
            "properties": {
              "host": {
                "type": "string"
              },
              "port": {
                "type": "integer",
                "format": "int32"
              },
              "userName": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "sshKeyName": {
                "type": "string"
              },
              "sshKey": {
                "type": "string"
              },
              "sshPassPhrase": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Sitecore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractConnectorDto"
          },
          {
            "required": [
              "host",
              "password",
              "sitecoreDatabase",
              "userName"
            ],
            "type": "object",
            "properties": {
              "userName": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "sitecoreDatabase": {
                "type": "string"
              },
              "sourceLang": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Typo3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractConnectorDto"
          },
          {
            "required": [
              "host",
              "token"
            ],
            "type": "object",
            "properties": {
              "host": {
                "type": "string"
              },
              "sourceLang": {
                "type": "string"
              },
              "token": {
                "type": "string"
              }
            }
          }
        ]
      },
      "VariableDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Wordpress": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractConnectorDto"
          },
          {
            "required": [
              "basicAuthPassword",
              "basicAuthUserName",
              "host",
              "token"
            ],
            "type": "object",
            "properties": {
              "basicAuthUserName": {
                "type": "string"
              },
              "basicAuthPassword": {
                "type": "string"
              },
              "host": {
                "type": "string"
              },
              "token": {
                "type": "string",
                "description": "Memsource plugin token"
              }
            }
          }
        ]
      },
      "ConnectorErrorDetailDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageCode": {
            "type": "string"
          },
          "args": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            }
          },
          "skipPrefix": {
            "type": "boolean"
          }
        }
      },
      "ConnectorErrorsDto": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectorErrorDetailDto"
            }
          }
        }
      },
      "UploadResultDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "folder": {
            "type": "string"
          },
          "encodedName": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "error": {
            "type": "string"
          },
          "asyncTaskId": {
            "type": "string"
          },
          "errors": {
            "$ref": "#/components/schemas/ConnectorErrorsDto"
          }
        }
      },
      "ErrorDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "FileDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "encodedName": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "directory": {
            "type": "boolean"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "selected": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorDto"
          },
          "escapedName": {
            "type": "string"
          }
        }
      },
      "FileListDto": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileDto"
            }
          },
          "currentFolder": {
            "type": "string"
          },
          "encodedCurrentFolder": {
            "type": "string"
          },
          "rootFolder": {
            "type": "boolean"
          },
          "lastChangedFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileDto"
            }
          }
        }
      },
      "ConnectorListDto": {
        "type": "object",
        "properties": {
          "connectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectorDto"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CommentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/MentionableUserDto"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time"
          },
          "mentions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MentionDto"
            }
          }
        }
      },
      "CommonConversationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Field references differs based on the Conversation Type."
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time"
          },
          "dateEdited": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/MentionableUserDto"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentDto"
            }
          },
          "status": {
            "$ref": "#/components/schemas/StatusDto"
          },
          "deleted": {
            "type": "boolean"
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "ConversationListDto": {
        "type": "object",
        "properties": {
          "conversations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonConversationDto"
            }
          }
        }
      },
      "JobRoleDto": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PROJECT_OWNER",
              "JOB_OWNER",
              "PROVIDER",
              "GUEST"
            ]
          },
          "workflowStep": {
            "$ref": "#/components/schemas/ProjectWorkflowStepDtoV2"
          },
          "organizationType": {
            "type": "string",
            "description": "not null only for shared projects",
            "enum": [
              "VENDOR",
              "BUYER"
            ]
          }
        }
      },
      "LQA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonConversationDto"
          },
          {
            "type": "object",
            "properties": {
              "references": {
                "$ref": "#/components/schemas/LQAReferences"
              },
              "lqaDescription": {
                "type": "string"
              }
            }
          }
        ]
      },
      "LQAReference": {
        "required": [
          "errorCategoryId",
          "severityId"
        ],
        "type": "object",
        "properties": {
          "errorCategoryId": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "severityId": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/IdReference"
          },
          "repeated": {
            "type": "string",
            "description": "Default: `NOT_REPEATED`",
            "enum": [
              "REPEATED",
              "NOT_REPEATED"
            ]
          }
        }
      },
      "LQAReferences": {
        "required": [
          "lqa",
          "segmentId",
          "transGroupId"
        ],
        "type": "object",
        "properties": {
          "taskId": {
            "type": "string",
            "readOnly": true
          },
          "jobPartUid": {
            "type": "string",
            "readOnly": true
          },
          "transGroupId": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "segmentId": {
            "type": "string"
          },
          "conversationTitle": {
            "type": "string"
          },
          "conversationTitleOffset": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "commentedText": {
            "type": "string"
          },
          "correlation": {
            "$ref": "#/components/schemas/ReferenceCorrelation"
          },
          "lqa": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LQAReference"
            }
          }
        }
      },
      "MentionDto": {
        "required": [
          "mentionType"
        ],
        "type": "object",
        "properties": {
          "mentionType": {
            "type": "string",
            "enum": [
              "USER",
              "GROUP"
            ]
          },
          "mentionGroupType": {
            "type": "string",
            "enum": [
              "JOB",
              "OWNERS",
              "PROVIDERS",
              "GUESTS",
              "WORKFLOW_STEP"
            ]
          },
          "uidReference": {
            "$ref": "#/components/schemas/UidReference"
          },
          "userReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MentionableUserDto"
            }
          },
          "mentionableGroup": {
            "$ref": "#/components/schemas/MentionableGroupDto"
          },
          "tag": {
            "type": "string"
          }
        }
      },
      "MentionableGroupDto": {
        "type": "object",
        "properties": {
          "groupType": {
            "type": "string",
            "enum": [
              "JOB",
              "OWNERS",
              "PROVIDERS",
              "GUESTS",
              "WORKFLOW_STEP"
            ]
          },
          "groupName": {
            "type": "string"
          },
          "groupReference": {
            "$ref": "#/components/schemas/UidReference"
          }
        }
      },
      "MentionableUserDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "SYS_ADMIN",
              "SYS_ADMIN_READ",
              "ADMIN",
              "PROJECT_MANAGER",
              "LINGUIST",
              "GUEST",
              "SUBMITTER"
            ]
          },
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "unavailable": {
            "type": "boolean"
          },
          "jobRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobRoleDto"
            }
          }
        }
      },
      "PlainReferences": {
        "required": [
          "segmentId",
          "transGroupId"
        ],
        "type": "object",
        "properties": {
          "taskId": {
            "type": "string",
            "readOnly": true
          },
          "jobPartUid": {
            "type": "string",
            "readOnly": true
          },
          "transGroupId": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "segmentId": {
            "type": "string"
          },
          "conversationTitle": {
            "type": "string"
          },
          "conversationTitleOffset": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "commentedText": {
            "type": "string"
          },
          "correlation": {
            "$ref": "#/components/schemas/ReferenceCorrelation"
          }
        }
      },
      "ProjectWorkflowStepDtoV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "abbreviation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "workflowLevel": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/WorkflowStepReferenceV2"
          }
        }
      },
      "ReferenceCorrelation": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "PARENT"
            ]
          }
        }
      },
      "SEGMENT_TARGET": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonConversationDto"
          },
          {
            "type": "object",
            "properties": {
              "references": {
                "$ref": "#/components/schemas/PlainReferences"
              }
            }
          }
        ]
      },
      "StatusDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "enum": [
              "resolved",
              "unresolved"
            ]
          },
          "by": {
            "$ref": "#/components/schemas/MentionableUserDto"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WorkflowStepReferenceV2": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "lqaEnabled": {
            "type": "boolean"
          }
        }
      },
      "FindConversationsDto": {
        "required": [
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "since": {
            "type": "string"
          },
          "includeDeleted": {
            "type": "boolean",
            "description": "Default: false"
          }
        }
      },
      "CostCenterDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          }
        }
      },
      "CostCenterEditDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "PageDtoCostCenterDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CostCenterDto"
            }
          }
        }
      },
      "CustomFieldDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "MULTI_SELECT",
              "SINGLE_SELECT",
              "STRING",
              "NUMBER",
              "URL",
              "DATE"
            ]
          },
          "allowedEntities": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "PROJECT"
              ]
            }
          },
          "options": {
            "$ref": "#/components/schemas/CustomFieldOptionsTruncatedDto"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "requiredFrom": {
            "type": "string",
            "format": "date-time"
          },
          "required": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "CustomFieldOptionDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "CustomFieldOptionsTruncatedDto": {
        "type": "object",
        "properties": {
          "truncatedOptions": {
            "type": "array",
            "description": "Truncated list of options with size 5.\n    To get all options use endpoint for getting options of the specific field",
            "items": {
              "$ref": "#/components/schemas/CustomFieldOptionDto"
            }
          },
          "remainingCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateCustomFieldDto": {
        "required": [
          "allowedEntities",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "allowedEntities": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "PROJECT"
              ]
            }
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "MULTI_SELECT",
              "SINGLE_SELECT",
              "STRING",
              "NUMBER",
              "URL",
              "DATE"
            ]
          },
          "required": {
            "type": "boolean"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "PageDtoCustomFieldDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldDto"
            }
          }
        }
      },
      "PageDtoCustomFieldOptionDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldOptionDto"
            }
          }
        }
      },
      "AndroidSettingsDto": {
        "type": "object",
        "properties": {
          "tagRegexp": {
            "type": "string"
          },
          "icuSubFilter": {
            "type": "boolean",
            "description": "Default: `false`"
          }
        }
      },
      "AsciidocSettingsDto": {
        "type": "object",
        "properties": {
          "tagRegexp": {
            "type": "string"
          },
          "htmlInPassthrough": {
            "type": "boolean",
            "description": "Default: `false`"
          },
          "nontranslatableMonospaceCustomStylesRegexp": {
            "type": "string"
          },
          "extractCustomDocumentAttributeNameRegexp": {
            "type": "string",
            "description": "Default: `.*`"
          },
          "extractBtnMenuLabels": {
            "type": "boolean",
            "description": "Default: `false`"
          }
        }
      },
      "CsvSettingsDto": {
        "type": "object",
        "properties": {
          "delimiter": {
            "type": "string",
            "description": "Default: ,"
          },
          "delimiterType": {
            "type": "string",
            "description": "Default: COMMA",
            "enum": [
              "TAB",
              "COMMA",
              "SEMICOLON",
              "OTHER"
            ]
          },
          "htmlSubFilter": {
            "type": "boolean",
            "description": "Default: false"
          },
          "tagRegexp": {
            "type": "string"
          },
          "importColumns": {
            "type": "string"
          },
          "contextNoteColumns": {
            "type": "string"
          },
          "contextKeyColumn": {
            "type": "string"
          },
          "maxLenColumn": {
            "type": "string"
          },
          "importRows": {
            "type": "string"
          }
        }
      },
      "CustomFileTypeDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "filenamePattern": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "fileImportSettings": {
            "$ref": "#/components/schemas/FileImportSettingsDto"
          }
        }
      },
      "DitaSettingsDto": {
        "type": "object",
        "properties": {
          "includeTags": {
            "type": "string"
          },
          "excludeTags": {
            "type": "string"
          },
          "inlineTags": {
            "type": "string"
          },
          "inlineTagsNonTranslatable": {
            "type": "string"
          },
          "tagRegexp": {
            "type": "string"
          }
        }
      },
      "DocBookSettingsDto": {
        "type": "object",
        "properties": {
          "includeTags": {
            "type": "string"
          },
          "excludeTags": {
            "type": "string"
          },
          "inlineTags": {
            "type": "string"
          },
          "inlineTagsNonTranslatable": {
            "type": "string"
          },
          "tagRegexp": {
            "type": "string"
          }
        }
      },
      "DocSettingsDto": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "boolean",
            "description": "Default: false"
          },
          "index": {
            "type": "boolean",
            "description": "Default: true"
          },
          "other": {
            "type": "boolean",
            "description": "Default: false"
          },
          "tagRegexp": {
            "type": "string"
          },
          "hyperlinkTarget": {
            "type": "boolean",
            "description": "Default: false"
          },
          "joinSimilarRuns": {
            "type": "boolean",
            "description": "Default: false"
          },
          "targetFont": {
            "type": "string"
          },
          "properties": {
            "type": "boolean",
            "description": "Default: false"
          },
          "hidden": {
            "type": "boolean",
            "description": "Default: false"
          },
          "headerFooter": {
            "type": "boolean",
            "description": "Default: true"
          }
        }
      },
      "FileImportSettingsDto": {
        "type": "object",
        "properties": {
          "inputCharset": {
            "type": "string"
          },
          "outputCharset": {
            "type": "string"
          },
          "zipCharset": {
            "type": "string"
          },
          "fileFormat": {
            "type": "string"
          },
          "autodetectMultilingualFiles": {
            "type": "boolean"
          },
          "targetLength": {
            "type": "boolean"
          },
          "targetLengthMax": {
            "type": "integer",
            "format": "int32"
          },
          "targetLengthPercent": {
            "type": "boolean"
          },
          "targetLengthPercentValue": {
            "type": "number",
            "format": "double"
          },
          "android": {
            "$ref": "#/components/schemas/AndroidSettingsDto"
          },
          "idml": {
            "$ref": "#/components/schemas/IdmlSettingsDto"
          },
          "xls": {
            "$ref": "#/components/schemas/XlsSettingsDto"
          },
          "multilingualXml": {
            "$ref": "#/components/schemas/MultilingualXmlSettingsDto"
          },
          "php": {
            "$ref": "#/components/schemas/PhpSettingsDto"
          },
          "resx": {
            "$ref": "#/components/schemas/ResxSettingsDto"
          },
          "json": {
            "$ref": "#/components/schemas/JsonSettingsDto"
          },
          "html": {
            "$ref": "#/components/schemas/HtmlSettingsDto"
          },
          "multilingualXls": {
            "$ref": "#/components/schemas/MultilingualXlsSettingsDto"
          },
          "multilingualCsv": {
            "$ref": "#/components/schemas/MultilingualCsvSettingsDto"
          },
          "csv": {
            "$ref": "#/components/schemas/CsvSettingsDto"
          },
          "txt": {
            "$ref": "#/components/schemas/TxtSettingsDto"
          },
          "xlf2": {
            "$ref": "#/components/schemas/Xlf2SettingsDto"
          },
          "quarkTag": {
            "$ref": "#/components/schemas/QuarkTagSettingsDto"
          },
          "pdf": {
            "$ref": "#/components/schemas/PdfSettingsDto"
          },
          "tmMatch": {
            "$ref": "#/components/schemas/TMMatchSettingsDto"
          },
          "xml": {
            "$ref": "#/components/schemas/XmlSettingsDto"
          },
          "mif": {
            "$ref": "#/components/schemas/MifSettingsDto"
          },
          "properties": {
            "$ref": "#/components/schemas/PropertiesSettingsDto"
          },
          "doc": {
            "$ref": "#/components/schemas/DocSettingsDto"
          },
          "xlf": {
            "$ref": "#/components/schemas/XlfSettingsDto"
          },
          "sdlXlf": {
            "$ref": "#/components/schemas/SdlXlfSettingsDto"
          },
          "ttx": {
            "$ref": "#/components/schemas/TtxSettingsDto"
          },
          "ppt": {
            "$ref": "#/components/schemas/PptSettingsDto"
          },
          "yaml": {
            "$ref": "#/components/schemas/YamlSettingsDto"
          },
          "dita": {
            "$ref": "#/components/schemas/DitaSettingsDto"
          },
          "docBook": {
            "$ref": "#/components/schemas/DocBookSettingsDto"
          },
          "po": {
            "$ref": "#/components/schemas/PoSettingsDto"
          },
          "mac": {
            "$ref": "#/components/schemas/MacSettingsDto"
          },
          "md": {
            "$ref": "#/components/schemas/MdSettingsDto"
          },
          "psd": {
            "$ref": "#/components/schemas/PsdSettingsDto"
          },
          "asciidoc": {
            "$ref": "#/components/schemas/AsciidocSettingsDto"
          },
          "segRule": {
            "$ref": "#/components/schemas/SegRuleReference"
          },
          "targetSegRule": {
            "$ref": "#/components/schemas/SegRuleReference"
          }
        }
      },
      "HtmlSettingsDto": {
        "type": "object",
        "properties": {
          "breakTagCreatesSegment": {
            "type": "boolean",
            "description": "Default: true"
          },
          "unknownTagCreatesTag": {
            "type": "boolean",
            "description": "Default: true"
          },
          "preserveWhitespace": {
            "type": "boolean",
            "description": "Default: false"
          },
          "importComments": {
            "type": "boolean",
            "description": "Default: true"
          },
          "excludeElements": {
            "type": "string",
            "description": "Example: \"script,blockquote\""
          },
          "tagRegexp": {
            "type": "string"
          },
          "charEntitiesToTags": {
            "type": "string"
          },
          "translateMetaTagRegexp": {
            "type": "string"
          },
          "importDefaultMetaTags": {
            "type": "boolean",
            "description": "Default: true"
          },
          "translatableAttributes": {
            "type": "string"
          },
          "importDefaultAttributes": {
            "type": "boolean",
            "description": "Default: true"
          },
          "nonTranslatableInlineElements": {
            "type": "string",
            "description": "Example: \"code\""
          },
          "translatableInlineElements": {
            "type": "string",
            "description": "Example: \"span\""
          },
          "updateLang": {
            "type": "boolean",
            "description": "Default: false"
          },
          "escapeDisabled": {
            "type": "boolean",
            "description": "Default: `false`"
          }
        }
      },
      "IdmlSettingsDto": {
        "type": "object",
        "properties": {
          "extractNotes": {
            "type": "boolean",
            "description": "Default: false"
          },
          "simplifyCodes": {
            "type": "boolean",
            "description": "Default: true"
          },
          "extractMasterSpreads": {
            "type": "boolean",
            "description": "Default: true"
          },
          "extractLockedLayers": {
            "type": "boolean",
            "description": "Default: true"
          },
          "extractInvisibleLayers": {
            "type": "boolean",
            "description": "Default: false"
          },
          "extractHiddenConditionalText": {
            "type": "boolean",
            "description": "Default: false"
          },
          "extractHyperlinks": {
            "type": "boolean",
            "description": "Default: false"
          },
          "keepKerning": {
            "type": "boolean",
            "description": "Default: false"
          },
          "keepTracking": {
            "type": "boolean",
            "description": "Default: false"
          },
          "targetFont": {
            "type": "string"
          },
          "replaceFont": {
            "type": "boolean",
            "description": "Default: true"
          },
          "removeXmlElements": {
            "type": "boolean",
            "description": "Default: false"
          },
          "tagRegexp": {
            "type": "string"
          },
          "extractCrossReferenceFormats": {
            "type": "boolean",
            "description": "Default: true"
          },
          "extractVariables": {
            "type": "boolean",
            "description": "Default: true"
          }
        }
      },
      "JsonSettingsDto": {
        "type": "object",
        "properties": {
          "tagRegexp": {
            "type": "string"
          },
          "htmlSubFilter": {
            "type": "boolean",
            "description": "Default: true"
          },
          "icuSubFilter": {
            "type": "boolean",
            "description": "Default: false"
          },
          "excludeKeyRegexp": {
            "type": "string"
          },
          "includeKeyRegexp": {
            "type": "string"
          },
          "contextNotePath": {
            "type": "string"
          },
          "maxLenPath": {
            "type": "string"
          },
          "contextKeyPath": {
            "type": "string"
          }
        }
      },
      "MacSettingsDto": {
        "type": "object",
        "properties": {
          "htmlSubfilter": {
            "type": "boolean",
            "description": "Default: false"
          },
          "tagRegexp": {
            "type": "string"
          },
          "icuSubFilter": {
            "type": "boolean",
            "description": "Default: `false`"
          }
        }
      },
      "MdSettingsDto": {
        "type": "object",
        "properties": {
          "hardLineBreaksSegments": {
            "type": "boolean",
            "description": "Default: true"
          },
          "preserveWhiteSpaces": {
            "type": "boolean",
            "description": "Default: false"
          },
          "tagRegexp": {
            "type": "string"
          },
          "customElements": {
            "type": "string"
          },
          "ignoredBlockPrefixes": {
            "type": "string"
          },
          "flavor": {
            "type": "string",
            "description": "Default: PLAIN",
            "enum": [
              "PLAIN",
              "PHP",
              "GITHUB"
            ]
          },
          "processJekyllFrontMatter": {
            "type": "boolean",
            "description": "Default: false"
          },
          "extractCodeBlocks": {
            "type": "boolean",
            "description": "Default: true"
          },
          "notEscapedCharacters": {
            "type": "string"
          },
          "excludeCodeElements": {
            "type": "boolean",
            "description": "Default: false"
          }
        }
      },
      "MetadataField": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "CLIENT",
              "DOMAIN",
              "SUBDOMAIN",
              "FILENAME"
            ]
          }
        }
      },
      "MetadataPrioritySettingsDto": {
        "required": [
          "prioritizedFields"
        ],
        "type": "object",
        "properties": {
          "prioritizedFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataField"
            }
          }
        }
      },
      "MifSettingsDto": {
        "type": "object",
        "properties": {
          "extractBodyPages": {
            "type": "boolean",
            "description": "Default: true"
          },
          "extractReferencePages": {
            "type": "boolean",
            "description": "Default: false"
          },
          "extractMasterPages": {
            "type": "boolean",
            "description": "Default: true"
          },
          "extractHiddenPages": {
            "type": "boolean",
            "description": "Default: false"
          },
          "extractVariables": {
            "type": "boolean",
            "description": "Default: false"
          },
          "extractIndexMarkers": {
            "type": "boolean",
            "description": "Default: true"
          },
          "extractLinks": {
            "type": "boolean",
            "description": "Default: false"
          },
          "extractXRefDef": {
            "type": "boolean",
            "description": "Default: false"
          },
          "extractPgfNumFormat": {
            "type": "boolean",
            "description": "Default: true"
          },
          "extractCustomReferencePages": {
            "type": "boolean",
            "description": "Default: true"
          },
          "extractDefaultReferencePages": {
            "type": "boolean",
            "description": "Default: false"
          },
          "extractUsedVariables": {
            "type": "boolean",
            "description": "Default: true"
          },
          "extractHiddenCondText": {
            "type": "boolean",
            "description": "Default: false"
          },
          "extractUsedXRefDef": {
            "type": "boolean",
            "description": "Default: true"
          },
          "extractUsedPgfNumFormat": {
            "type": "boolean",
            "description": "Default: true"
          },
          "tagRegexp": {
            "type": "string"
          }
        }
      },
      "MultilingualCsvSettingsDto": {
        "type": "object",
        "properties": {
          "sourceColumns": {
            "type": "string"
          },
          "targetColumns": {
            "type": "string"
          },
          "contextNoteColumns": {
            "type": "string"
          },
          "contextKeyColumns": {
            "type": "string"
          },
          "tagRegexp": {
            "type": "string"
          },
          "htmlSubFilter": {
            "type": "boolean",
            "description": "Default: false"
          },
          "segmentation": {
            "type": "boolean",
            "description": "Default: true"
          },
          "delimiter": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Default: ,"
          },
          "delimiterType": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Default: COMMA",
            "enum": [
              "TAB",
              "COMMA",
              "SEMICOLON",
              "OTHER"
            ]
          },
          "importRows": {
            "type": "string"
          },
          "maxLenColumns": {
            "type": "string"
          },
          "allTargetColumns": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Format: \"language\":\"column\"; example: {\"en\": \"A\", \"sk\": \"B\"}"
          },
          "nonEmptySegmentAction": {
            "type": "string",
            "enum": [
              "NONE",
              "CONFIRM",
              "LOCK",
              "CONFIRM_LOCK"
            ]
          },
          "saveConfirmedSegmentsToTm": {
            "type": "boolean"
          }
        }
      },
      "MultilingualXlsSettingsDto": {
        "type": "object",
        "properties": {
          "sourceColumn": {
            "type": "string"
          },
          "targetColumns": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Format: \"language\":\"column\"; example: {\"en\": \"A\", \"sk\": \"B\"}"
          },
          "contextNoteColumn": {
            "type": "string"
          },
          "contextKeyColumn": {
            "type": "string"
          },
          "tagRegexp": {
            "type": "string"
          },
          "htmlSubFilter": {
            "type": "boolean",
            "description": "Default: false"
          },
          "segmentation": {
            "type": "boolean",
            "description": "Default: true"
          },
          "importRows": {
            "type": "string"
          },
          "maxLenColumn": {
            "type": "string"
          },
          "nonEmptySegmentAction": {
            "type": "string",
            "enum": [
              "NONE",
              "CONFIRM",
              "LOCK",
              "CONFIRM_LOCK"
            ]
          },
          "saveConfirmedSegmentsToTm": {
            "type": "boolean"
          }
        }
      },
      "MultilingualXmlSettingsDto": {
        "type": "object",
        "properties": {
          "translatableElementsXPath": {
            "type": "string"
          },
          "sourceElementsXPath": {
            "type": "string"
          },
          "targetElementsXPaths": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "'Format: \"language\":\"xpath\";\n            example = '{\"en\": \"tuv[@lang='en']/seg\", \"sk\": \"tuv[@lang='sk']/seg\"}"
          },
          "inlineElementsNonTranslatableXPath": {
            "type": "string"
          },
          "tagRegexp": {
            "type": "string"
          },
          "segmentation": {
            "type": "boolean",
            "description": "Default: `true`"
          },
          "htmlSubFilter": {
            "type": "boolean",
            "description": "Default: `false`"
          },
          "contextKeyXPath": {
            "type": "string"
          },
          "contextNoteXPath": {
            "type": "string"
          },
          "maxLenXPath": {
            "type": "string"
          },
          "preserveWhitespace": {
            "type": "boolean",
            "description": "Default: `false`"
          },
          "preserveCharEntities": {
            "type": "string"
          },
          "xslUrl": {
            "type": "string"
          },
          "xslFile": {
            "type": "string",
            "description": "UID of uploaded XSL file, overrides xslUrl"
          },
          "nonEmptySegmentAction": {
            "type": "string",
            "enum": [
              "NONE",
              "CONFIRM",
              "LOCK",
              "CONFIRM_LOCK"
            ]
          },
          "saveConfirmedSegmentsToTm": {
            "type": "boolean"
          },
          "icuSubFilter": {
            "type": "boolean",
            "description": "Default: `false`"
          }
        }
      },
      "PdfSettingsDto": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string",
            "description": "Default: TRANS_PDF",
            "enum": [
              "TRANS_PDF",
              "DEFAULT"
            ]
          }
        }
      },
      "PhpSettingsDto": {
        "type": "object",
        "properties": {
          "tagRegexp": {
            "type": "string"
          },
          "htmlSubFilter": {
            "type": "boolean",
            "description": "Default: false"
          }
        }
      },
      "PoSettingsDto": {
        "type": "object",
        "properties": {
          "tagRegexp": {
            "type": "string"
          },
          "exportMultiline": {
            "type": "boolean",
            "description": "Default: true"
          },
          "htmlSubFilter": {
            "type": "boolean",
            "description": "Default: false"
          },
          "segment": {
            "type": "boolean",
            "description": "Default: false"
          },
          "markupSubFilterTranslatable": {
            "type": "string"
          },
          "markupSubFilterNonTranslatable": {
            "type": "string"
          },
          "saveConfirmedSegments": {
            "type": "boolean"
          },
          "importSetSegmentConfirmedWhen": {
            "type": "string",
            "enum": [
              "FUZZY",
              "NONFUZZY"
            ]
          },
          "importSetSegmentLockedWhen": {
            "type": "string",
            "enum": [
              "FUZZY",
              "NONFUZZY"
            ]
          },
          "exportConfirmedLocked": {
            "type": "string",
            "enum": [
              "FUZZY",
              "NONFUZZY"
            ]
          },
          "exportConfirmedNotLocked": {
            "type": "string",
            "enum": [
              "FUZZY",
              "NONFUZZY"
            ]
          },
          "exportNotConfirmedLocked": {
            "type": "string",
            "enum": [
              "FUZZY",
              "NONFUZZY"
            ]
          },
          "exportNotConfirmedNotLocked": {
            "type": "string",
            "enum": [
              "FUZZY",
              "NONFUZZY"
            ]
          },
          "icuSubFilter": {
            "type": "boolean",
            "description": "Default: `false`"
          }
        }
      },
      "PptSettingsDto": {
        "type": "object",
        "properties": {
          "hiddenSlides": {
            "type": "boolean",
            "description": "Default: false"
          },
          "other": {
            "type": "boolean",
            "description": "Default: false"
          },
          "notes": {
            "type": "boolean",
            "description": "Default: false"
          },
          "masterSlides": {
            "type": "boolean",
            "description": "Default: false"
          }
        }
      },
      "PropertiesSettingsDto": {
        "type": "object",
        "properties": {
          "tagRegexp": {
            "type": "string"
          }
        }
      },
      "PsdSettingsDto": {
        "type": "object",
        "properties": {
          "extractHiddenLayers": {
            "type": "boolean",
            "description": "Default: true"
          },
          "extractLockedLayers": {
            "type": "boolean",
            "description": "Default: true"
          },
          "tagRegexp": {
            "type": "string"
          }
        }
      },
      "QuarkTagSettingsDto": {
        "type": "object",
        "properties": {
          "removeKerningTrackingTags": {
            "type": "boolean",
            "description": "Default: false"
          },
          "tagRegexp": {
            "type": "string"
          }
        }
      },
      "ResxSettingsDto": {
        "type": "object",
        "properties": {
          "tagRegexp": {
            "type": "string"
          },
          "htmlSubFilter": {
            "type": "boolean"
          }
        }
      },
      "SdlXlfSettingsDto": {
        "type": "object",
        "properties": {
          "icuSubFilter": {
            "type": "boolean",
            "description": "Default: false"
          },
          "skipImportRules": {
            "type": "string",
            "description": "Default: translate=no"
          },
          "importAsConfirmedRules": {
            "type": "string"
          },
          "importAsLockedRules": {
            "type": "string",
            "description": "Default: locked=true"
          },
          "exportAttrsWhenConfirmedAndLocked": {
            "type": "string",
            "description": "Default: locked=true"
          },
          "exportAttrsWhenConfirmedAndNotLocked": {
            "type": "string"
          },
          "exportAttrsWhenNotConfirmedAndLocked": {
            "type": "string",
            "description": "Default: locked=true"
          },
          "exportAttrsWhenNotConfirmedAndNotLocked": {
            "type": "string"
          },
          "saveConfirmedSegments": {
            "type": "boolean",
            "description": "Default: true"
          },
          "tagRegexp": {
            "type": "string"
          }
        }
      },
      "SegRuleReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "primary": {
            "type": "boolean"
          }
        }
      },
      "TMMatchSettingsDto": {
        "type": "object",
        "properties": {
          "contextType": {
            "type": "string",
            "description": "Default: PREV_AND_NEXT_SEGMENT",
            "enum": [
              "AUTO",
              "PREV_AND_NEXT_SEGMENT",
              "SEGMENT_KEY",
              "NO_CONTEXT"
            ]
          },
          "prevOrNextSegment": {
            "type": "boolean",
            "description": "Default: false"
          },
          "penalizeMultiContextMatch": {
            "type": "boolean",
            "description": "Default: false"
          },
          "ignoreTagMetadata": {
            "type": "boolean",
            "description": "Default: true"
          },
          "metadataPriority": {
            "$ref": "#/components/schemas/MetadataPrioritySettingsDto"
          }
        }
      },
      "TtxSettingsDto": {
        "type": "object",
        "properties": {
          "saveConfirmedSegments": {
            "type": "boolean",
            "description": "Default: true"
          }
        }
      },
      "TxtSettingsDto": {
        "type": "object",
        "properties": {
          "tagRegexp": {
            "type": "string"
          },
          "translatableTextRegexp": {
            "type": "string"
          },
          "contextKey": {
            "type": "string"
          },
          "regexpCapturingGroups": {
            "type": "boolean",
            "description": "Default: false"
          }
        }
      },
      "Xlf2SettingsDto": {
        "type": "object",
        "properties": {
          "icuSubFilter": {
            "type": "boolean",
            "description": "Default: false"
          },
          "importNotes": {
            "type": "boolean",
            "description": "Default: true"
          },
          "saveConfirmedSegments": {
            "type": "boolean",
            "description": "Default: true"
          },
          "segmentation": {
            "type": "boolean",
            "description": "Default: true"
          },
          "lineBreakTags": {
            "type": "boolean",
            "description": "Default: false"
          },
          "preserveWhitespace": {
            "type": "boolean",
            "description": "Default: true"
          },
          "copySourceToTargetIfNotImported": {
            "type": "boolean",
            "description": "Default: true"
          },
          "respectTranslateAttr": {
            "type": "boolean",
            "description": "Default: true"
          },
          "skipImportRules": {
            "type": "string"
          },
          "importAsConfirmedRules": {
            "type": "string",
            "description": "Default: state=final"
          },
          "importAsLockedRules": {
            "type": "string"
          },
          "exportAttrsWhenConfirmedAndLocked": {
            "type": "string",
            "description": "Default: state=final"
          },
          "exportAttrsWhenConfirmedAndNotLocked": {
            "type": "string",
            "description": "Default: state=final"
          },
          "exportAttrsWhenNotConfirmedAndLocked": {
            "type": "string"
          },
          "exportAttrsWhenNotConfirmedAndNotLocked": {
            "type": "string"
          },
          "contextKeyXPath": {
            "type": "string"
          },
          "preserveCharEntities": {
            "type": "string"
          },
          "xslUrl": {
            "type": "string"
          },
          "xslFile": {
            "type": "string",
            "description": "UID of uploaded XSL file, overrides xslUrl"
          },
          "tagRegexp": {
            "type": "string"
          }
        }
      },
      "XlfSettingsDto": {
        "type": "object",
        "properties": {
          "icuSubFilter": {
            "type": "boolean",
            "description": "Default: false"
          },
          "importNotes": {
            "type": "boolean",
            "description": "Default: true"
          },
          "segmentation": {
            "type": "boolean",
            "description": "Default: true"
          },
          "skipImportRules": {
            "type": "string",
            "description": "Default: translate=no; examples: translate=no;approved=no;state=needs-adaptation"
          },
          "importAsConfirmedRules": {
            "type": "string",
            "description": "Multiple rules must be separated by semicolon"
          },
          "importAsLockedRules": {
            "type": "string"
          },
          "exportAttrsWhenConfirmedAndLocked": {
            "type": "string"
          },
          "exportAttrsWhenConfirmedAndNotLocked": {
            "type": "string"
          },
          "exportAttrsWhenNotConfirmedAndLocked": {
            "type": "string"
          },
          "exportAttrsWhenNotConfirmedAndNotLocked": {
            "type": "string"
          },
          "saveConfirmedSegments": {
            "type": "boolean",
            "description": "Default: true"
          },
          "lineBreakTags": {
            "type": "boolean",
            "description": "Default: false"
          },
          "preserveWhitespace": {
            "type": "boolean",
            "description": "Default: true"
          },
          "contextType": {
            "type": "string"
          },
          "preserveCharEntities": {
            "type": "string"
          },
          "copySourceToTargetIfNotImported": {
            "type": "boolean",
            "description": "Default: true"
          },
          "importXPath": {
            "type": "string"
          },
          "importAsConfirmedXPath": {
            "type": "string"
          },
          "importAsLockedXPath": {
            "type": "string"
          },
          "xslUrl": {
            "type": "string"
          },
          "xslFile": {
            "type": "string",
            "description": "UID of uploaded XSL file, overrides xslUrl"
          },
          "tagRegexp": {
            "type": "string"
          }
        }
      },
      "XlsSettingsDto": {
        "type": "object",
        "properties": {
          "sheetNames": {
            "type": "boolean",
            "description": "Default: false"
          },
          "hidden": {
            "type": "boolean",
            "description": "Default: false"
          },
          "comments": {
            "type": "boolean",
            "description": "Default: false"
          },
          "other": {
            "type": "boolean",
            "description": "Default: false"
          },
          "cellFlow": {
            "type": "string",
            "description": "Default: DownRight",
            "enum": [
              "DownRight",
              "RightDown",
              "DownLeft",
              "LeftDown"
            ]
          },
          "htmlSubfilter": {
            "type": "boolean",
            "description": "Default: false"
          },
          "tagRegexp": {
            "type": "string"
          },
          "specifiedColumns": {
            "type": "string"
          }
        }
      },
      "XmlSettingsDto": {
        "type": "object",
        "properties": {
          "rulesFormat": {
            "type": "string",
            "description": "Default: `\"PLAIN\"`",
            "enum": [
              "PLAIN",
              "XPATH"
            ]
          },
          "includeElementsPlain": {
            "type": "string",
            "description": "Default: `\"*\"`, example: `\"para,heading\"`"
          },
          "excludeElementsPlain": {
            "type": "string",
            "description": "Example: `\"script,par\"`"
          },
          "includeAttributesPlain": {
            "type": "string",
            "description": "Example: `\"title\"`"
          },
          "excludeAttributesPlain": {
            "type": "string",
            "description": "Example: `\"lang,href\"`"
          },
          "inlineElementsNonTranslatablePlain": {
            "type": "string",
            "description": "Example: `\"tt,b\"`"
          },
          "inlineElementsPlain": {
            "type": "string"
          },
          "inlineElementsAutoPlain": {
            "type": "boolean",
            "description": "Default: `false`"
          },
          "htmlSubfilterElementsPlain": {
            "type": "string",
            "description": "Example: `\"tt,b\"`"
          },
          "entities": {
            "type": "boolean",
            "description": "Default: `false`"
          },
          "lockElementsPlain": {
            "type": "string"
          },
          "lockAttributesPlain": {
            "type": "string"
          },
          "includeXPath": {
            "type": "string"
          },
          "inlineElementsXpath": {
            "type": "string"
          },
          "inlineElementsNonTranslatableXPath": {
            "type": "string"
          },
          "inlineElementsAutoXPath": {
            "type": "boolean",
            "description": "Default: `false`"
          },
          "htmlSubfilterElementsXpath": {
            "type": "string"
          },
          "lockXPath": {
            "type": "string"
          },
          "segmentation": {
            "type": "boolean",
            "description": "Default: `true`"
          },
          "tagRegexp": {
            "type": "string"
          },
          "contextNoteXpath": {
            "type": "string"
          },
          "maxLenXPath": {
            "type": "string"
          },
          "preserveWhitespaceXPath": {
            "type": "string"
          },
          "preserveCharEntities": {
            "type": "string"
          },
          "contextKeyXPath": {
            "type": "string"
          },
          "xslUrl": {
            "type": "string"
          },
          "xslFile": {
            "type": "string",
            "description": "UID of uploaded XSL file, overrides `xslUrl`"
          },
          "importComments": {
            "type": "boolean",
            "description": "Default: `true`"
          },
          "icuSubFilter": {
            "type": "boolean",
            "description": "Default: `false`"
          }
        }
      },
      "YamlSettingsDto": {
        "type": "object",
        "properties": {
          "htmlSubFilter": {
            "type": "boolean",
            "description": "Default: false"
          },
          "tagRegexp": {
            "type": "string"
          },
          "includeKeyRegexp": {
            "type": "string"
          },
          "excludeValueRegexp": {
            "type": "string"
          },
          "contextPath": {
            "type": "string"
          },
          "contextKeyPath": {
            "type": "string"
          },
          "markdownSubfilter": {
            "type": "boolean",
            "description": "Default: false"
          },
          "updateRootElementLang": {
            "type": "boolean",
            "description": "Default: false"
          },
          "localeFormat": {
            "type": "string",
            "enum": [
              "MEMSOURCE",
              "RFC_5646",
              "ANDROID_QUALIFIER",
              "ANDROID_QUALIFIER_BCP"
            ]
          },
          "indentEmptyLinesInString": {
            "type": "boolean",
            "description": "Default: true"
          },
          "icuSubFilter": {
            "type": "boolean",
            "description": "Default: `false`"
          }
        }
      },
      "CreateCustomFileTypeDto": {
        "required": [
          "filenamePattern",
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "filenamePattern": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "html",
              "json",
              "xml",
              "multiling_xml",
              "txt"
            ]
          },
          "fileImportSettings": {
            "$ref": "#/components/schemas/FileImportSettingsCreateDto"
          }
        }
      },
      "FileImportSettingsCreateDto": {
        "type": "object",
        "properties": {
          "inputCharset": {
            "type": "string"
          },
          "outputCharset": {
            "type": "string"
          },
          "zipCharset": {
            "type": "string"
          },
          "fileFormat": {
            "type": "string",
            "description": "default: auto-detect",
            "enum": [
              "doc",
              "ppt",
              "xls",
              "xlf",
              "xlf2",
              "sdlxlif",
              "ttx",
              "html",
              "xml",
              "mif",
              "tmx",
              "idml",
              "dita",
              "json",
              "po",
              "ts",
              "icml",
              "yaml",
              "properties",
              "csv",
              "android_string",
              "desktop_entry",
              "mac_strings",
              "pdf",
              "windows_rc",
              "xml_properties",
              "joomla_ini",
              "magento_csv",
              "dtd",
              "mozilla_properties",
              "plist",
              "plain_text",
              "srt",
              "sub",
              "sbv",
              "wiki",
              "resx",
              "resjson",
              "chrome_json",
              "epub",
              "svg",
              "docbook",
              "wpxliff",
              "multiling_xml",
              "multiling_xls",
              "mqxliff",
              "php",
              "psd",
              "tag",
              "md",
              "vtt"
            ]
          },
          "autodetectMultilingualFiles": {
            "type": "boolean",
            "description": "Try to use multilingual variants for auto-detected CSV and Excel files. Default: true"
          },
          "targetLength": {
            "type": "boolean",
            "description": "Default: false"
          },
          "targetLengthMax": {
            "type": "integer",
            "description": "default: 1000",
            "format": "int32"
          },
          "targetLengthPercent": {
            "type": "boolean",
            "description": "Default: false"
          },
          "targetLengthPercentValue": {
            "type": "number",
            "description": "default: 130",
            "format": "double"
          },
          "segmentationRuleId": {
            "type": "integer",
            "format": "int64"
          },
          "targetSegmentationRuleId": {
            "type": "integer",
            "format": "int64"
          },
          "android": {
            "$ref": "#/components/schemas/AndroidSettingsDto"
          },
          "csv": {
            "$ref": "#/components/schemas/CsvSettingsDto"
          },
          "dita": {
            "$ref": "#/components/schemas/DitaSettingsDto"
          },
          "docBook": {
            "$ref": "#/components/schemas/DocBookSettingsDto"
          },
          "doc": {
            "$ref": "#/components/schemas/DocSettingsDto"
          },
          "html": {
            "$ref": "#/components/schemas/HtmlSettingsDto"
          },
          "idml": {
            "$ref": "#/components/schemas/IdmlSettingsDto"
          },
          "json": {
            "$ref": "#/components/schemas/JsonSettingsDto"
          },
          "mac": {
            "$ref": "#/components/schemas/MacSettingsDto"
          },
          "md": {
            "$ref": "#/components/schemas/MdSettingsDto"
          },
          "mif": {
            "$ref": "#/components/schemas/MifSettingsDto"
          },
          "multilingualXls": {
            "$ref": "#/components/schemas/MultilingualXlsSettingsDto"
          },
          "multilingualCsv": {
            "$ref": "#/components/schemas/MultilingualCsvSettingsDto"
          },
          "multilingualXml": {
            "$ref": "#/components/schemas/MultilingualXmlSettingsDto"
          },
          "pdf": {
            "$ref": "#/components/schemas/PdfSettingsDto"
          },
          "php": {
            "$ref": "#/components/schemas/PhpSettingsDto"
          },
          "po": {
            "$ref": "#/components/schemas/PoSettingsDto"
          },
          "ppt": {
            "$ref": "#/components/schemas/PptSettingsDto"
          },
          "properties": {
            "$ref": "#/components/schemas/PropertiesSettingsDto"
          },
          "psd": {
            "$ref": "#/components/schemas/PsdSettingsDto"
          },
          "quarkTag": {
            "$ref": "#/components/schemas/QuarkTagSettingsDto"
          },
          "resx": {
            "$ref": "#/components/schemas/ResxSettingsDto"
          },
          "sdlXlf": {
            "$ref": "#/components/schemas/SdlXlfSettingsDto"
          },
          "tmMatch": {
            "$ref": "#/components/schemas/TMMatchSettingsDto"
          },
          "ttx": {
            "$ref": "#/components/schemas/TtxSettingsDto"
          },
          "txt": {
            "$ref": "#/components/schemas/TxtSettingsDto"
          },
          "xlf2": {
            "$ref": "#/components/schemas/Xlf2SettingsDto"
          },
          "xlf": {
            "$ref": "#/components/schemas/XlfSettingsDto"
          },
          "xls": {
            "$ref": "#/components/schemas/XlsSettingsDto"
          },
          "xml": {
            "$ref": "#/components/schemas/XmlSettingsDto"
          },
          "yaml": {
            "$ref": "#/components/schemas/YamlSettingsDto"
          },
          "asciidoc": {
            "$ref": "#/components/schemas/AsciidocSettingsDto"
          }
        }
      },
      "PageDtoCustomFileTypeDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFileTypeDto"
            }
          }
        }
      },
      "UpdateCustomFileTypeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "filenamePattern": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "html",
              "json",
              "xml",
              "multiling_xml",
              "txt"
            ]
          },
          "fileImportSettings": {
            "$ref": "#/components/schemas/FileImportSettingsCreateDto"
          }
        }
      },
      "DeleteCustomFileTypeDto": {
        "required": [
          "customFileTypes"
        ],
        "type": "object",
        "properties": {
          "customFileTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          }
        }
      },
      "DiscountSettingsDto": {
        "type": "object",
        "properties": {
          "repetition": {
            "type": "number",
            "format": "double"
          },
          "tm101": {
            "type": "number",
            "format": "double"
          },
          "tm100": {
            "type": "number",
            "format": "double"
          },
          "tm95": {
            "type": "number",
            "format": "double"
          },
          "tm85": {
            "type": "number",
            "format": "double"
          },
          "tm75": {
            "type": "number",
            "format": "double"
          },
          "tm50": {
            "type": "number",
            "format": "double"
          },
          "tm0": {
            "type": "number",
            "format": "double"
          },
          "mt100": {
            "type": "number",
            "format": "double"
          },
          "mt95": {
            "type": "number",
            "format": "double"
          },
          "mt85": {
            "type": "number",
            "format": "double"
          },
          "mt75": {
            "type": "number",
            "format": "double"
          },
          "mt50": {
            "type": "number",
            "format": "double"
          },
          "mt0": {
            "type": "number",
            "format": "double"
          },
          "nt100": {
            "type": "number",
            "format": "double"
          },
          "nt99": {
            "type": "number",
            "format": "double"
          },
          "nt85": {
            "type": "number",
            "format": "double"
          },
          "nt75": {
            "type": "number",
            "format": "double"
          },
          "nt50": {
            "type": "number",
            "format": "double"
          },
          "nt0": {
            "type": "number",
            "format": "double"
          },
          "if100": {
            "type": "number",
            "format": "double"
          },
          "if95": {
            "type": "number",
            "format": "double"
          },
          "if85": {
            "type": "number",
            "format": "double"
          },
          "if75": {
            "type": "number",
            "format": "double"
          },
          "if50": {
            "type": "number",
            "format": "double"
          },
          "if0": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "NetRateScheme": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReference"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "workflowStepNetSchemes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NetRateSchemeWorkflowStepReference"
            }
          },
          "rates": {
            "$ref": "#/components/schemas/DiscountSettingsDto"
          }
        }
      },
      "NetRateSchemeWorkflowStepReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/WorkflowStepReference"
          }
        }
      },
      "PageDtoNetRateSchemeReference": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NetRateSchemeReference"
            }
          }
        }
      },
      "DiscountSchemeCreateDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "rates": {
            "$ref": "#/components/schemas/DiscountSettingsDto"
          },
          "workflowStepNetSchemes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NetRateSchemeWorkflowStepCreate"
            }
          }
        }
      },
      "NetRateSchemeWorkflowStepCreate": {
        "required": [
          "workflowStep"
        ],
        "type": "object",
        "properties": {
          "workflowStep": {
            "$ref": "#/components/schemas/IdReference"
          },
          "rates": {
            "$ref": "#/components/schemas/DiscountSettingsDto"
          }
        }
      },
      "NetRateSchemeEdit": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "rates": {
            "$ref": "#/components/schemas/DiscountSettingsDto"
          }
        }
      },
      "NetRateSchemeWorkflowStep": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/WorkflowStepReference"
          },
          "rates": {
            "$ref": "#/components/schemas/DiscountSettingsDto"
          }
        }
      },
      "NetRateSchemeWorkflowStepEdit": {
        "type": "object",
        "properties": {
          "rates": {
            "$ref": "#/components/schemas/DiscountSettingsDto"
          }
        }
      },
      "PageDtoNetRateSchemeWorkflowStepReference": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NetRateSchemeWorkflowStepReference"
            }
          }
        }
      },
      "DomainDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          }
        }
      },
      "PageDtoDomainDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainDto"
            }
          }
        }
      },
      "DomainEditDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "OrganizationEmailTemplateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "JobAssigned",
              "JobStatusChanged",
              "NextWorkflowStep",
              "JobRejected",
              "LoginInfo",
              "ProjectTransferredToBuyer",
              "SharedProjectAssigned",
              "SharedProjectStatusChanged",
              "AutomatedProjectCreated",
              "AutomatedProjectSourceUpdated",
              "AutomatedProjectStatusChanged",
              "JobWidgetProjectQuotePrepared",
              "JobWidgetProjectQuotePreparationFailure",
              "JobWidgetProjectCreated",
              "JobWidgetProjectCompleted",
              "CmsQuoteReady",
              "CmsWorkCompleted",
              "CmsJobRejected",
              "QUOTE_UPDATED",
              "QUOTE_STATUS_CHANGED",
              "LQA_SHARE_REPORT"
            ]
          },
          "name": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "ccAddress": {
            "type": "string"
          },
          "bccAddress": {
            "type": "string"
          }
        }
      },
      "PageDtoOrganizationEmailTemplateDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationEmailTemplateDto"
            }
          }
        }
      },
      "FileHandoverDto": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "string",
            "description": "ID of the uploaded file"
          },
          "filename": {
            "type": "string",
            "description": "Filename of the uploaded file"
          }
        }
      },
      "JobPartReferences": {
        "required": [
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          }
        }
      },
      "UploadedFileDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "PageDtoUploadedFileDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UploadedFileDto"
            }
          }
        }
      },
      "RemoteUploadedFileDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "readOnly": true
          },
          "url": {
            "type": "string"
          }
        }
      },
      "GlossaryDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "internalId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "langs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "owner": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "profileCount": {
            "type": "integer",
            "format": "int32"
          },
          "active": {
            "type": "boolean"
          },
          "profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemsourceTranslateProfileSimpleDto"
            }
          }
        }
      },
      "MachineTranslateSettingsLangsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id"
          },
          "sourceLang": {
            "type": "string",
            "description": "Source language for CUSTOMIZABLE engine"
          },
          "targetLangs": {
            "type": "array",
            "description": "List of target languages for the CUSTOMIZABLE engine",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MemTransMachineTranslateSettingsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "baseName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "default_": {
            "type": "boolean"
          },
          "includeTags": {
            "type": "boolean"
          },
          "mtQualityEstimation": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "glossarySupported": {
            "type": "boolean"
          },
          "args": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "langs": {
            "$ref": "#/components/schemas/MachineTranslateSettingsLangsDto"
          },
          "charCount": {
            "type": "integer",
            "description": "Unknown value is represented by value: -1",
            "format": "int32"
          }
        }
      },
      "MemsourceTranslateProfileSimpleDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "memsourceTranslate": {
            "$ref": "#/components/schemas/MemTransMachineTranslateSettingsDto"
          },
          "locked": {
            "type": "boolean"
          }
        }
      },
      "PageDtoGlossaryDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlossaryDto"
            }
          }
        }
      },
      "GlossaryEditDto": {
        "required": [
          "langs",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "langs": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "owner": {
            "$ref": "#/components/schemas/IdReference"
          }
        }
      },
      "GlossaryActivationDto": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          }
        }
      },
      "SearchResponseListTmDto": {
        "type": "object",
        "properties": {
          "searchResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchTMResponseDto"
            }
          }
        }
      },
      "SearchTMClientDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SearchTMDomainDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SearchTMProjectDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SearchTMResponseDto": {
        "type": "object",
        "properties": {
          "segmentId": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/SearchTMSegmentDto"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchTMSegmentDto"
            }
          },
          "transMemory": {
            "$ref": "#/components/schemas/SearchTMTransMemoryDto"
          },
          "grossScore": {
            "type": "number",
            "format": "double"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "subSegment": {
            "type": "boolean"
          }
        }
      },
      "SearchTMSegmentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "rtl": {
            "type": "boolean"
          },
          "modifiedAt": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "filename": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/SearchTMProjectDto"
          },
          "client": {
            "$ref": "#/components/schemas/SearchTMClientDto"
          },
          "domain": {
            "$ref": "#/components/schemas/SearchTMDomainDto"
          },
          "subDomain": {
            "$ref": "#/components/schemas/SearchTMSubDomainDto"
          },
          "tagMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagMetadata"
            }
          },
          "previousSegment": {
            "type": "string"
          },
          "nextSegment": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "SearchTMSubDomainDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SearchTMTransMemoryDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "reverse": {
            "type": "boolean"
          }
        }
      },
      "TagMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "transAttributes": {
            "type": "string"
          }
        }
      },
      "SearchTMByJobRequestDto": {
        "required": [
          "segment"
        ],
        "type": "object",
        "properties": {
          "segment": {
            "type": "string"
          },
          "workflowLevel": {
            "maximum": 15,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "scoreThreshold": {
            "maximum": 1.01,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number",
            "format": "double"
          },
          "previousSegment": {
            "type": "string"
          },
          "nextSegment": {
            "type": "string"
          },
          "contextKey": {
            "type": "string"
          },
          "maxSegments": {
            "maximum": 5,
            "minimum": 0,
            "type": "integer",
            "description": "Default: 5",
            "format": "int32"
          },
          "maxSubSegments": {
            "maximum": 5,
            "minimum": 0,
            "type": "integer",
            "description": "Default: 5",
            "format": "int32"
          },
          "tagMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagMetadataDto"
            }
          }
        }
      },
      "TagMetadataDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "transAttributes": {
            "type": "string"
          }
        }
      },
      "LQAConversationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "LQA"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time"
          },
          "dateEdited": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/MentionableUserDto"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentDto"
            }
          },
          "status": {
            "$ref": "#/components/schemas/StatusDto"
          },
          "deleted": {
            "type": "boolean"
          },
          "references": {
            "$ref": "#/components/schemas/LQAReferences"
          },
          "lqaDescription": {
            "type": "string"
          }
        }
      },
      "AddCommentDto": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          }
        }
      },
      "LQAConversationsListDto": {
        "type": "object",
        "properties": {
          "conversations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LQAConversationDto"
            }
          }
        }
      },
      "LanguageDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "rfc": {
            "type": "string"
          },
          "android": {
            "type": "string"
          },
          "androidBcp": {
            "type": "string"
          }
        }
      },
      "LanguageListDto": {
        "required": [
          "languages"
        ],
        "type": "object",
        "properties": {
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageDto"
            }
          }
        },
        "description": "envelope for list of languages"
      },
      "AccuracyWeightsDto": {
        "type": "object",
        "properties": {
          "accuracy": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "addition": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "omission": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "mistranslation": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "underTranslation": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "untranslated": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "improperTmMatch": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "overTranslation": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          }
        }
      },
      "DesignWeightsDto": {
        "type": "object",
        "properties": {
          "design": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "length": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "localFormatting": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "markup": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "missingText": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "truncation": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          }
        }
      },
      "ErrorCategoriesDto": {
        "type": "object",
        "properties": {
          "accuracy": {
            "$ref": "#/components/schemas/AccuracyWeightsDto"
          },
          "fluency": {
            "$ref": "#/components/schemas/FluencyWeightsDto"
          },
          "terminology": {
            "$ref": "#/components/schemas/TerminologyWeightsDto"
          },
          "style": {
            "$ref": "#/components/schemas/StyleWeightsDto"
          },
          "localeConvention": {
            "$ref": "#/components/schemas/LocaleConventionWeightsDto"
          },
          "verity": {
            "$ref": "#/components/schemas/VerityWeightsDto"
          },
          "design": {
            "$ref": "#/components/schemas/DesignWeightsDto"
          },
          "other": {
            "$ref": "#/components/schemas/OtherWeightsDto"
          }
        },
        "description": "Error categories and their importance weight. If not provided, defaults will be created."
      },
      "FluencyWeightsDto": {
        "type": "object",
        "properties": {
          "fluency": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "punctuation": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "spelling": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "grammar": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "grammaticalRegister": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "inconsistency": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "crossReference": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "characterEncoding": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          }
        }
      },
      "LocaleConventionWeightsDto": {
        "type": "object",
        "properties": {
          "localeConvention": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "addressFormat": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "dateFormat": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "currencyFormat": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "measurementFormat": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "shortcutKey": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "telephoneFormat": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          }
        }
      },
      "OtherWeightsDto": {
        "type": "object",
        "properties": {
          "other": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          }
        }
      },
      "PassFailThresholdDto": {
        "required": [
          "minScorePercentage"
        ],
        "type": "object",
        "properties": {
          "minScorePercentage": {
            "type": "number",
            "description": "Minimum allowed LQA score in percentage in line with MQM scoring (1 - penalties/word-count)",
            "format": "double",
            "example": 99
          }
        }
      },
      "PenaltyPointsDto": {
        "type": "object",
        "properties": {
          "neutral": {
            "$ref": "#/components/schemas/SeverityDto"
          },
          "minor": {
            "$ref": "#/components/schemas/SeverityDto"
          },
          "major": {
            "$ref": "#/components/schemas/SeverityDto"
          },
          "critical": {
            "$ref": "#/components/schemas/SeverityDto"
          }
        },
        "description": "Penalty points for each severity level. By default neutral is 0, minor is 1, major is 5, critical is 10."
      },
      "SeverityDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Code of the severity category",
            "format": "int32"
          },
          "value": {
            "type": "number",
            "description": "Allowed values 0.0-100,000.0",
            "format": "double"
          }
        }
      },
      "StyleWeightsDto": {
        "type": "object",
        "properties": {
          "style": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "awkward": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "companyStyle": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "inconsistentStyle": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "thirdPartyStyle": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "unidiomatic": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          }
        }
      },
      "TerminologyWeightsDto": {
        "type": "object",
        "properties": {
          "terminology": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "inconsistentWithTb": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "inconsistentUseOfTerminology": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          }
        }
      },
      "ToggleableWeightDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "If this error category is enabled, default false"
          },
          "weight": {
            "type": "number",
            "description": "Weight of this error category (0.1 - 99.9)",
            "format": "double",
            "example": 1
          },
          "code": {
            "type": "integer",
            "description": "Code of the error category",
            "format": "int32"
          }
        }
      },
      "VerityWeightsDto": {
        "type": "object",
        "properties": {
          "verity": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          },
          "cultureSpecificReference": {
            "$ref": "#/components/schemas/ToggleableWeightDto"
          }
        }
      },
      "LqaProfileReferenceDto": {
        "required": [
          "createdBy",
          "dateCreated",
          "isDefault",
          "name",
          "organization",
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "UID of the profile",
            "example": "string"
          },
          "name": {
            "type": "string",
            "description": "Name of the profile"
          },
          "isDefault": {
            "type": "boolean",
            "description": "If profile is set as default for organization"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateCreated": {
            "type": "string",
            "description": "When profile was created",
            "format": "date-time"
          },
          "organization": {
            "$ref": "#/components/schemas/UidReference"
          }
        }
      },
      "PageDtoLqaProfileReferenceDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LqaProfileReferenceDto"
            }
          }
        }
      },
      "LqaProfileDetailDto": {
        "required": [
          "createdBy",
          "dateCreated",
          "errorCategories",
          "isDefault",
          "name",
          "organization",
          "passFailThreshold",
          "penaltyPoints",
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "UID of the profile",
            "example": "string"
          },
          "name": {
            "type": "string",
            "description": "Name of the profile"
          },
          "errorCategories": {
            "$ref": "#/components/schemas/ErrorCategoriesDto"
          },
          "penaltyPoints": {
            "$ref": "#/components/schemas/PenaltyPointsDto"
          },
          "passFailThreshold": {
            "$ref": "#/components/schemas/PassFailThresholdDto"
          },
          "isDefault": {
            "type": "boolean",
            "description": "If profile is set as default for organization"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "organization": {
            "$ref": "#/components/schemas/UidReference"
          }
        }
      },
      "CreateLqaProfileDto": {
        "required": [
          "errorCategories",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "errorCategories": {
            "$ref": "#/components/schemas/ErrorCategoriesDto"
          },
          "penaltyPoints": {
            "$ref": "#/components/schemas/PenaltyPointsDto"
          },
          "passFailThreshold": {
            "$ref": "#/components/schemas/PassFailThresholdDto"
          }
        }
      },
      "UpdateLqaProfileDto": {
        "required": [
          "errorCategories",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "errorCategories": {
            "$ref": "#/components/schemas/ErrorCategoriesDto"
          },
          "penaltyPoints": {
            "$ref": "#/components/schemas/PenaltyPointsDto"
          },
          "passFailThreshold": {
            "$ref": "#/components/schemas/PassFailThresholdDto"
          }
        }
      },
      "MachineTranslateStatusDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "ok": {
            "type": "boolean"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "MachineTranslateSettingsPbmDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "baseName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "default_": {
            "type": "boolean"
          },
          "includeTags": {
            "type": "boolean"
          },
          "mtQualityEstimation": {
            "type": "boolean"
          },
          "args": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "payForMtPossible": {
            "type": "boolean"
          },
          "payForMtActive": {
            "type": "boolean"
          },
          "charCount": {
            "type": "integer",
            "format": "int32"
          },
          "sharingSettings": {
            "type": "integer",
            "format": "int32"
          },
          "langs": {
            "$ref": "#/components/schemas/MachineTranslateSettingsLangsDto"
          }
        }
      },
      "MachineTranslateSettingsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "baseName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "default_": {
            "type": "boolean"
          },
          "includeTags": {
            "type": "boolean"
          },
          "mtQualityEstimation": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "args": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "langs": {
            "$ref": "#/components/schemas/MachineTranslateSettingsLangsDto"
          }
        }
      },
      "PageDtoMachineTranslateSettingsPbmDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MachineTranslateSettingsPbmDto"
            }
          }
        }
      },
      "TypesDto": {
        "type": "object",
        "properties": {
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MachineTranslateResponse": {
        "type": "object",
        "properties": {
          "translations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TranslationRequestExtendedDto": {
        "required": [
          "from",
          "sourceTexts",
          "to"
        ],
        "type": "object",
        "properties": {
          "sourceTexts": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          }
        }
      },
      "MachineTranslateSettingsReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "ProjectTermBaseReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "termBase": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "name": {
            "type": "string"
          },
          "writeMode": {
            "type": "boolean"
          },
          "targetLang": {
            "type": "string"
          },
          "readMode": {
            "type": "boolean"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/ObjectReference"
          }
        }
      },
      "ProjectTranslationMemoryReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "transMem": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "name": {
            "type": "string"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "targetLang": {
            "type": "string"
          },
          "penalty": {
            "type": "number",
            "format": "double"
          },
          "readMode": {
            "type": "boolean"
          }
        }
      },
      "TaskMappingDto": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "string"
          },
          "workflowLevel": {
            "type": "string"
          },
          "resourcePath": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "job": {
            "$ref": "#/components/schemas/ObjectReference"
          }
        }
      },
      "ImportSettingsDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "fileImportSettings": {
            "$ref": "#/components/schemas/FileImportSettingsDto"
          }
        }
      },
      "ImportSettingsEditDto": {
        "required": [
          "fileImportSettings",
          "name",
          "uid"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "fileImportSettings": {
            "$ref": "#/components/schemas/FileImportSettingsCreateDto"
          }
        }
      },
      "ImportSettingsReference": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PageDtoImportSettingsReference": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImportSettingsReference"
            }
          }
        }
      },
      "ImportSettingsCreateDto": {
        "required": [
          "fileImportSettings",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "fileImportSettings": {
            "$ref": "#/components/schemas/FileImportSettingsCreateDto"
          }
        }
      },
      "BusinessUnitReference": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        }
      },
      "DiscountSchemeReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          }
        }
      },
      "DomainReference": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        }
      },
      "SubDomainReference": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        }
      },
      "FileNamingSettingsDto": {
        "type": "object",
        "properties": {
          "renameCompleted": {
            "type": "boolean"
          },
          "completedFilePattern": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "targetFolderPath": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "VendorSecuritySettingsDto": {
        "type": "object",
        "properties": {
          "canChangeSharedJobDueDateEnabled": {
            "type": "boolean",
            "description": "Default: `false`"
          },
          "canChangeSharedJobDueDate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "jobVendorsMayUploadReferences": {
            "type": "boolean",
            "description": "Default: `false`"
          }
        }
      },
      "MachineTranslationSettingsDto": {
        "type": "object",
        "properties": {
          "useMachineTranslation": {
            "type": "boolean",
            "description": "Pre-translate from machine translation. Default: false"
          },
          "lock100PercentMatches": {
            "type": "boolean",
            "description": "Lock section: 100% machine translation matches. Default: false"
          },
          "confirm100PercentMatches": {
            "type": "boolean",
            "description": "Set segment status to confirmed for: 100% translation machine matches. Default: false"
          },
          "useAltTransOnly": {
            "type": "boolean",
            "description": "Do not put machine translations to target and use alt-trans fields (alt-trans in mxlf).\nDefault: false"
          },
          "mtQeMatchesInEditors": {
            "type": "boolean",
            "description": "Display quality-estimated machine translation matches in Memsource Editor. Default: false"
          },
          "mtForTMAbove100": {
            "type": "boolean",
            "description": "Use machine translation for segments with a TM match of 100% or more. Default: false"
          }
        },
        "description": "Machine translation related settings"
      },
      "NonTranslatableSettingsDto": {
        "type": "object",
        "properties": {
          "preTranslateNonTranslatables": {
            "type": "boolean",
            "description": "Pre-translate non-translatables. Default: false"
          },
          "confirm100PercentMatches": {
            "type": "boolean",
            "description": "Set segment status to confirmed for: 100% non-translatable matches. Default: false"
          },
          "lock100PercentMatches": {
            "type": "boolean",
            "description": "Lock section: 100% non-translatable matches. Default: false"
          },
          "nonTranslatablesInEditors": {
            "type": "boolean",
            "description": "If non-translatables are enabled in Editors."
          }
        },
        "description": "Non-translatables related settings"
      },
      "RepetitionsSettingsDto": {
        "type": "object",
        "properties": {
          "autoPropagateRepetitions": {
            "type": "boolean",
            "description": "Propagate repetitions. Default: false"
          },
          "confirmRepetitions": {
            "type": "boolean",
            "description": "Set segment status to confirmed for: Repetitions. Default: false"
          },
          "autoPropagateToLockedRepetitions": {
            "type": "boolean",
            "description": "Changes in 1st repetition propagate upon confirmation into subsequent locked repetitions. Default: false"
          },
          "lockSubsequentRepetitions": {
            "type": "boolean",
            "description": "If auto-propagated subsequent repetitions should be locked. Default: false"
          }
        },
        "description": "Repetitions related settings"
      },
      "TranslationMemorySettingsDto": {
        "type": "object",
        "properties": {
          "useTranslationMemory": {
            "type": "boolean",
            "description": "Pre-translate from translation memory. Default: false"
          },
          "translationMemoryThreshold": {
            "maximum": 1.01,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "Pre-translation threshold percent",
            "format": "double"
          },
          "confirm100PercentMatches": {
            "type": "boolean",
            "description": "Set segment status to confirmed for: 100% translation memory matches. Default: false"
          },
          "confirm101PercentMatches": {
            "type": "boolean",
            "description": "Set segment status to confirmed for: 101% translation memory matches. Default: false"
          },
          "lock100PercentMatches": {
            "type": "boolean",
            "description": "Lock section: 100% translation memory matches. Default: false"
          },
          "lock101PercentMatches": {
            "type": "boolean",
            "description": "Lock section: 101% translation memory matches. Default: false"
          }
        },
        "description": "Translation memory related settings"
      },
      "MORAVIA": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QACheckDtoV2"
          },
          {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "profile": {
                "type": "string"
              },
              "ignorable": {
                "type": "boolean"
              },
              "instant": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "NUMBER": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QACheckDtoV2"
          },
          {
            "type": "object",
            "properties": {
              "ignorable": {
                "type": "boolean"
              },
              "enabled": {
                "type": "boolean"
              },
              "value": {
                "$ref": "#/components/schemas/Number"
              },
              "instant": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "Number": {
        "type": "object"
      },
      "QACheckDtoV2": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "VOID",
              "NUMBER",
              "STRING",
              "REGEX",
              "MORAVIA"
            ]
          },
          "name": {
            "type": "string",
            "enum": [
              "emptyTarget",
              "inconsistentTranslation",
              "joinMarksInconsistency",
              "missingNumber",
              "segmentNotConfirmed",
              "nonConformingTerms",
              "multipleSpaces",
              "endPunctuation",
              "targetLength",
              "absoluteTargetLength",
              "relativeTargetLength",
              "inconsistentFormatting",
              "unresolvedComment",
              "emptyPairTags",
              "strictJobStatus",
              "forbiddenStringsEnabled",
              "excludeLockedSegments",
              "ignoreNotApprovedTerms",
              "spellCheck",
              "repeatedWords",
              "inconsistentTagContent",
              "emptyTagContent",
              "malformed",
              "forbiddenTerms",
              "targetLengthPercent",
              "targetLengthPerSegment",
              "newerAtLowerLevel",
              "leadingAndTrailingSpaces",
              "targetSourceIdentical",
              "ignoreInAllWorkflowSteps",
              "regexp",
              "unmodifiedFuzzyTranslation",
              "unmodifiedFuzzyTranslationTM",
              "unmodifiedFuzzyTranslationMTNT",
              "moravia",
              "extraNumbers",
              "nestedTags"
            ]
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "QASettingsDtoV2": {
        "type": "object",
        "properties": {
          "checks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QACheckDtoV2"
            }
          }
        }
      },
      "REGEX": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QACheckDtoV2"
          },
          {
            "type": "object",
            "properties": {
              "rules": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RegexpCheckRuleDtoV2"
                }
              }
            }
          }
        ]
      },
      "RegexpCheckRuleDtoV2": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "sourceRegexp": {
            "type": "string"
          },
          "targetRegexp": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "ignorable": {
            "type": "boolean"
          },
          "instant": {
            "type": "boolean"
          }
        }
      },
      "STRING": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QACheckDtoV2"
          },
          {
            "type": "object",
            "properties": {
              "ignorable": {
                "type": "boolean"
              },
              "enabled": {
                "type": "boolean"
              },
              "value": {
                "type": "string"
              },
              "instant": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "VOID": {
        "allOf": [
          {
            "$ref": "#/components/schemas/QACheckDtoV2"
          },
          {
            "type": "object",
            "properties": {
              "ignorable": {
                "type": "boolean"
              },
              "enabled": {
                "type": "boolean"
              },
              "instant": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "EditQASettingsDtoV2": {
        "type": "object",
        "properties": {
          "checks": {
            "type": "array",
            "description": "checks",
            "example": "\n        {\n            \"ignorable\": false,\n            \"enabled\": true,\n            \"type\": \"VOID\",\n            \"instant\": false,\n            \"name\": \"emptyTarget\"\n        },\n        {\n            \"ignorable\": false,\n            \"enabled\": true,\n            \"value\": 12,\n            \"type\": \"NUMBER\",\n            \"name\": \"targetLength\"\n        },\n        {\n            \"ignorable\": false,\n            \"enabled\": true,\n            \"value\": \"ASAP, irony\",\n            \"type\": \"STRING\",\n            \"instant\": true,\n            \"name\": \"forbiddenStrings\"\n        },\n        {\n            \"enabled\": true,\n            \"profile\": \"jiris\",\n            \"ignorable\": true,\n            \"type\": \"MORAVIA\",\n            \"name\": \"moravia\"\n        },\n        {\n            \"rules\": [\n                {\n                    \"description\": \"Description\",\n                    \"sourceRegexp\": \".+\",\n                    \"targetRegexp\": \".+\",\n                    \"ignorable\": true\n                },\n                {\n                    \"description\": \"Description\",\n                    \"sourceRegexp\": \"i+\",\n                    \"targetRegexp\": \"e+\",\n                    \"ignorable\": false\n                }\n            ],\n            \"type\": \"REGEX\",\n            \"name\": \"regexp\"\n        },\n        {\n            \"enabled\": true,\n            \"ignorable\": true,\n            \"type\": \"VOID\",\n            \"name\": \"customQa\"\n        }\n    ",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "PlainConversationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "SEGMENT_TARGET"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "format": "date-time"
          },
          "dateEdited": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/MentionableUserDto"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommentDto"
            }
          },
          "status": {
            "$ref": "#/components/schemas/StatusDto"
          },
          "deleted": {
            "type": "boolean"
          },
          "references": {
            "$ref": "#/components/schemas/PlainReferences"
          }
        }
      },
      "CreatePlainConversationDto": {
        "required": [
          "references"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "$ref": "#/components/schemas/AddCommentDto"
          },
          "references": {
            "$ref": "#/components/schemas/PlainReferences"
          }
        }
      },
      "EditPlainConversationDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "resolved",
              "unresolved"
            ]
          },
          "correlation": {
            "$ref": "#/components/schemas/ReferenceCorrelation"
          }
        }
      },
      "PlainConversationsListDto": {
        "type": "object",
        "properties": {
          "conversations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlainConversationDto"
            }
          }
        }
      },
      "Providers": {
        "type": "object",
        "properties": {
          "all": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderReference"
            }
          },
          "relevant": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderReference"
            }
          }
        }
      },
      "AbstractProjectDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "internalId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "domain": {
            "$ref": "#/components/schemas/DomainReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/SubDomainReference"
          },
          "owner": {
            "$ref": "#/components/schemas/UserReference"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferenceFileReference"
            }
          },
          "mtSettingsPerLanguageList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MTSettingsPerLanguageReference"
            }
          },
          "userRole": {
            "type": "string",
            "description": "Response differs based on user's role",
            "readOnly": true
          }
        },
        "description": "Base projectDto",
        "discriminator": {
          "propertyName": "userRole"
        }
      },
      "Admin, Project Manager": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractProjectDto"
          },
          {
            "type": "object",
            "properties": {
              "shared": {
                "type": "boolean",
                "description": "Default: false"
              },
              "progress": {
                "$ref": "#/components/schemas/ProgressDto"
              },
              "client": {
                "$ref": "#/components/schemas/ClientReference"
              },
              "costCenter": {
                "$ref": "#/components/schemas/CostCenterReference"
              },
              "businessUnit": {
                "$ref": "#/components/schemas/BusinessUnitReference"
              },
              "dateDue": {
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NEW",
                  "ASSIGNED",
                  "COMPLETED",
                  "ACCEPTED_BY_VENDOR",
                  "DECLINED_BY_VENDOR",
                  "COMPLETED_BY_VENDOR",
                  "CANCELLED"
                ]
              },
              "purchaseOrder": {
                "type": "string"
              },
              "isPublishedOnJobBoard": {
                "type": "boolean",
                "description": "Default: false"
              },
              "note": {
                "type": "string"
              },
              "createdBy": {
                "$ref": "#/components/schemas/UserReference"
              },
              "qualityAssuranceSettings": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "workflowSteps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectWorkflowStepDto"
                }
              },
              "analyseSettings": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "accessSettings": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "financialSettings": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "archived": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "Buyer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractProjectDto"
          },
          {
            "type": "object",
            "properties": {
              "shared": {
                "type": "boolean",
                "description": "Default: false"
              },
              "progress": {
                "$ref": "#/components/schemas/ProgressDto"
              },
              "client": {
                "$ref": "#/components/schemas/ClientReference"
              },
              "costCenter": {
                "$ref": "#/components/schemas/CostCenterReference"
              },
              "businessUnit": {
                "$ref": "#/components/schemas/BusinessUnitReference"
              },
              "dateDue": {
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NEW",
                  "ASSIGNED",
                  "COMPLETED",
                  "ACCEPTED_BY_VENDOR",
                  "DECLINED_BY_VENDOR",
                  "COMPLETED_BY_VENDOR",
                  "CANCELLED"
                ]
              },
              "purchaseOrder": {
                "type": "string"
              },
              "isPublishedOnJobBoard": {
                "type": "boolean",
                "description": "Default: false"
              },
              "note": {
                "type": "string"
              },
              "createdBy": {
                "$ref": "#/components/schemas/UserReference"
              },
              "qualityAssuranceSettings": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "workflowSteps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectWorkflowStepDto"
                }
              },
              "analyseSettings": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "accessSettings": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "financialSettings": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "archived": {
                "type": "boolean"
              },
              "vendorOwner": {
                "$ref": "#/components/schemas/USER"
              },
              "vendor": {
                "$ref": "#/components/schemas/VendorReference"
              }
            }
          }
        ]
      },
      "BuyerReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "CostCenterReference": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        }
      },
      "Linguist": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractProjectDto"
          },
          {
            "type": "object"
          }
        ]
      },
      "MTSettingsPerLanguageReference": {
        "required": [
          "targetLang"
        ],
        "type": "object",
        "properties": {
          "targetLang": {
            "type": "string",
            "description": "mtSettings is set for whole project if targetLang == null"
          },
          "machineTranslateSettings": {
            "$ref": "#/components/schemas/MachineTranslateSettingsReference"
          }
        }
      },
      "ProgressDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "finishedCount": {
            "type": "integer",
            "format": "int32"
          },
          "overdueCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProjectWorkflowStepDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "abbreviation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "workflowLevel": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "lqaProfileUid": {
            "type": "string"
          }
        }
      },
      "ReferenceFileReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          }
        }
      },
      "Vendor": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractProjectDto"
          },
          {
            "type": "object",
            "properties": {
              "shared": {
                "type": "boolean",
                "description": "Default: false"
              },
              "progress": {
                "$ref": "#/components/schemas/ProgressDto"
              },
              "client": {
                "$ref": "#/components/schemas/ClientReference"
              },
              "costCenter": {
                "$ref": "#/components/schemas/CostCenterReference"
              },
              "businessUnit": {
                "$ref": "#/components/schemas/BusinessUnitReference"
              },
              "dateDue": {
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NEW",
                  "ASSIGNED",
                  "COMPLETED",
                  "ACCEPTED_BY_VENDOR",
                  "DECLINED_BY_VENDOR",
                  "COMPLETED_BY_VENDOR",
                  "CANCELLED"
                ]
              },
              "purchaseOrder": {
                "type": "string"
              },
              "isPublishedOnJobBoard": {
                "type": "boolean",
                "description": "Default: false"
              },
              "note": {
                "type": "string"
              },
              "createdBy": {
                "$ref": "#/components/schemas/UserReference"
              },
              "qualityAssuranceSettings": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "workflowSteps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectWorkflowStepDto"
                }
              },
              "analyseSettings": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "accessSettings": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "financialSettings": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "archived": {
                "type": "boolean"
              },
              "buyerOwner": {
                "$ref": "#/components/schemas/USER"
              },
              "buyer": {
                "$ref": "#/components/schemas/BuyerReference"
              }
            }
          }
        ]
      },
      "VendorReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "AssignableTemplatesDto": {
        "type": "object",
        "properties": {
          "assignableTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTemplateDto"
            }
          }
        }
      },
      "ProjectTemplateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "templateName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "note": {
            "type": "string"
          },
          "useDynamicTitle": {
            "type": "boolean"
          },
          "dynamicTitle": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/UserReference"
          },
          "client": {
            "$ref": "#/components/schemas/ClientReference"
          },
          "domain": {
            "$ref": "#/components/schemas/DomainReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/SubDomainReference"
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorReference"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateModified": {
            "type": "string",
            "description": "Deprecated - use dateTimeModified field instead",
            "format": "date-time"
          },
          "dateTimeModified": {
            "type": "string",
            "format": "date-time"
          },
          "workflowSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStepDto"
            }
          },
          "workflowSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStepSettingsDto"
            }
          },
          "businessUnit": {
            "$ref": "#/components/schemas/BusinessUnitReference"
          },
          "notifyProviders": {
            "$ref": "#/components/schemas/ProjectTemplateNotifyProviderDto"
          },
          "assignedTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssignmentPerTargetLangDto"
            }
          },
          "importSettings": {
            "$ref": "#/components/schemas/UidReference"
          }
        }
      },
      "ProjectTemplateWorkflowSettingsAssignedToDto": {
        "type": "object",
        "properties": {
          "targetLang": {
            "type": "string"
          },
          "providers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderReference"
            }
          }
        }
      },
      "ProjectMTSettingsPerLangDto": {
        "required": [
          "targetLang"
        ],
        "type": "object",
        "properties": {
          "targetLang": {
            "type": "string"
          },
          "machineTranslateSettings": {
            "$ref": "#/components/schemas/UidReference"
          }
        }
      },
      "PageDtoAbstractProjectDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbstractProjectDto"
            }
          }
        }
      },
      "PatchProjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ASSIGNED",
              "COMPLETED",
              "ACCEPTED_BY_VENDOR",
              "DECLINED_BY_VENDOR",
              "COMPLETED_BY_VENDOR",
              "CANCELLED"
            ]
          },
          "client": {
            "$ref": "#/components/schemas/IdReference"
          },
          "businessUnit": {
            "$ref": "#/components/schemas/IdReference"
          },
          "domain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "owner": {
            "$ref": "#/components/schemas/IdReference"
          },
          "purchaseOrder": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "dateDue": {
            "type": "string",
            "format": "date-time"
          },
          "note": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string"
          },
          "machineTranslateSettings": {
            "$ref": "#/components/schemas/UidReference"
          },
          "machineTranslateSettingsPerLangs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectMTSettingsPerLangDto"
            }
          },
          "archived": {
            "type": "boolean"
          }
        }
      },
      "AddTargetLangDto": {
        "type": "object",
        "properties": {
          "targetLangs": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AddWorkflowStepsDto": {
        "type": "object",
        "properties": {
          "workflowSteps": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdReference"
            }
          }
        }
      },
      "AssignVendorDto": {
        "type": "object",
        "properties": {
          "vendor": {
            "$ref": "#/components/schemas/IdReference"
          },
          "dateDue": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CloneProjectDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "PageDtoProviderReference": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderReference"
            }
          }
        }
      },
      "SetProjectStatusDto": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ASSIGNED",
              "COMPLETED",
              "ACCEPTED_BY_VENDOR",
              "DECLINED_BY_VENDOR",
              "COMPLETED_BY_VENDOR",
              "CANCELLED"
            ]
          }
        }
      },
      "FinancialSettingsDto": {
        "type": "object",
        "properties": {
          "netRateScheme": {
            "$ref": "#/components/schemas/NetRateSchemeReference"
          },
          "priceList": {
            "$ref": "#/components/schemas/PriceListReference"
          }
        }
      },
      "SetFinancialSettingsDto": {
        "type": "object",
        "properties": {
          "netRateScheme": {
            "$ref": "#/components/schemas/IdReference"
          },
          "priceList": {
            "$ref": "#/components/schemas/IdReference"
          }
        }
      },
      "EnabledQualityChecksDto": {
        "type": "object",
        "properties": {
          "enabledChecks": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EmptyTranslation",
                "TrailingPunctuation",
                "Formatting",
                "JoinTags",
                "MissingNumbersV3",
                "MultipleSpacesV3",
                "NonConformingTerm",
                "NotConfirmed",
                "TranslationLength",
                "AbsoluteLength",
                "RelativeLength",
                "UnresolvedComment",
                "EmptyPairTags",
                "InconsistentTranslationTargetSource",
                "InconsistentTranslationSourceTarget",
                "ForbiddenString",
                "SpellCheck",
                "RepeatedWord",
                "InconsistentTagContent",
                "EmptyTagContent",
                "Malformed",
                "ForbiddenTerm",
                "NewerAtLowerLevel",
                "LeadingAndTrailingSpaces",
                "LeadingSpaces",
                "TrailingSpaces",
                "TargetSourceIdentical",
                "SourceOrTargetRegexp",
                "UnmodifiedFuzzyTranslation",
                "UnmodifiedFuzzyTranslationTM",
                "UnmodifiedFuzzyTranslationMTNT",
                "Moravia",
                "ExtraNumbersV3",
                "UnresolvedConversation",
                "NestedTags",
                "FuzzyInconsistencyTargetSource",
                "FuzzyInconsistencySourceTarget"
              ]
            }
          }
        }
      },
      "LqaErrorCategoryDto": {
        "type": "object",
        "properties": {
          "errorCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "errorCategories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LqaErrorCategoryDto"
            }
          }
        }
      },
      "LqaSettingsDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "severities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LqaSeverityDto"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LqaErrorCategoryDto"
            }
          }
        }
      },
      "LqaSeverityDto": {
        "type": "object",
        "properties": {
          "severityId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MTSettingsPerLanguageDto": {
        "required": [
          "targetLang"
        ],
        "type": "object",
        "properties": {
          "targetLang": {
            "type": "string",
            "description": "mtSettings is set for whole project if targetLang == null"
          },
          "machineTranslateSettings": {
            "$ref": "#/components/schemas/MachineTranslateSettingsDto"
          }
        }
      },
      "MTSettingsPerLanguageListDto": {
        "type": "object",
        "properties": {
          "mtSettingsPerLangList": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MTSettingsPerLanguageDto"
            }
          }
        }
      },
      "PageDtoQuoteDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuoteDto"
            }
          }
        }
      },
      "QuoteDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "APPROVED",
              "DECLINED",
              "DRAFT",
              "FOR_APPROVAL",
              "NEW"
            ]
          },
          "currency": {
            "type": "string"
          },
          "billingUnit": {
            "type": "string",
            "enum": [
              "Character",
              "Word",
              "Page",
              "Hour"
            ]
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "totalPrice": {
            "type": "number",
            "format": "double"
          },
          "netRateScheme": {
            "$ref": "#/components/schemas/NetRateSchemeReference"
          },
          "priceList": {
            "$ref": "#/components/schemas/PriceListReference"
          },
          "workflowStepList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStepReference"
            }
          },
          "provider": {
            "$ref": "#/components/schemas/ProviderReference"
          },
          "customerEmail": {
            "type": "string"
          },
          "quoteType": {
            "type": "string",
            "enum": [
              "BUYER",
              "PROVIDER"
            ]
          },
          "editable": {
            "type": "boolean"
          },
          "outdated": {
            "type": "boolean"
          }
        }
      },
      "EditProjectMTSettPerLangDto": {
        "required": [
          "targetLang"
        ],
        "type": "object",
        "properties": {
          "targetLang": {
            "type": "string"
          },
          "machineTranslateSettings": {
            "$ref": "#/components/schemas/IdReference"
          }
        }
      },
      "EditProjectMTSettPerLangListDto": {
        "type": "object",
        "properties": {
          "mtSettingsPerLangList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EditProjectMTSettPerLangDto"
            }
          }
        }
      },
      "EditProjectMTSettingsDto": {
        "type": "object",
        "properties": {
          "machineTranslateSettings": {
            "$ref": "#/components/schemas/IdReference"
          }
        }
      },
      "AnalyseSettingsDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PreAnalyse",
              "PostAnalyse",
              "PreAnalyseTarget",
              "Compare"
            ]
          },
          "includeFuzzyRepetitions": {
            "type": "boolean",
            "description": "Default: false"
          },
          "separateFuzzyRepetitions": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeNonTranslatables": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeMachineTranslationMatches": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeConfirmedSegments": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeNumbers": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeLockedSegments": {
            "type": "boolean",
            "description": "Default: false"
          },
          "countSourceUnits": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeTransMemory": {
            "type": "boolean",
            "description": "Default: false"
          },
          "namingPattern": {
            "type": "string"
          },
          "analyzeByLanguage": {
            "type": "boolean",
            "description": "Default: false"
          },
          "analyzeByProvider": {
            "type": "boolean",
            "description": "Default: false"
          },
          "allowAutomaticPostAnalysis": {
            "type": "boolean",
            "description": "If automatic post analysis should be created after update source. Default: false"
          },
          "transMemoryPostEditing": {
            "type": "boolean",
            "description": "Default: false"
          },
          "nonTranslatablePostEditing": {
            "type": "boolean",
            "description": "Default: false"
          },
          "machineTranslatePostEditing": {
            "type": "boolean",
            "description": "Default: false"
          }
        }
      },
      "CustomFieldInstanceDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "customField": {
            "$ref": "#/components/schemas/CustomFieldDto"
          },
          "selectedOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldOptionDto"
            }
          },
          "value": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UidReference"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/UidReference"
          }
        }
      },
      "CustomFieldInstancesDto": {
        "type": "object",
        "properties": {
          "customFieldInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldInstanceDto"
            }
          }
        }
      },
      "CreateCustomFieldInstanceDto": {
        "type": "object",
        "properties": {
          "customField": {
            "$ref": "#/components/schemas/UidReference"
          },
          "selectedOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "value": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "UpdateCustomFieldInstanceWithUidDto": {
        "type": "object",
        "properties": {
          "customFieldInstance": {
            "$ref": "#/components/schemas/UidReference"
          },
          "customField": {
            "$ref": "#/components/schemas/UidReference"
          },
          "selectedOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "value": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "UpdateCustomFieldInstancesDto": {
        "type": "object",
        "properties": {
          "addInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCustomFieldInstanceDto"
            }
          },
          "removeInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "updateInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateCustomFieldInstanceWithUidDto"
            }
          }
        }
      },
      "UpdateCustomFieldInstanceDto": {
        "type": "object",
        "properties": {
          "selectedOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "value": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "CreateCustomFieldInstancesDto": {
        "type": "object",
        "properties": {
          "customFieldInstances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCustomFieldInstanceDto"
            }
          }
        }
      },
      "PageDtoCustomFieldInstanceDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomFieldInstanceDto"
            }
          }
        }
      },
      "SplitJobActionDto": {
        "type": "object",
        "properties": {
          "segmentOrdinals": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "partCount": {
            "type": "integer",
            "format": "int32"
          },
          "partSize": {
            "type": "integer",
            "format": "int32"
          },
          "wordCount": {
            "type": "integer",
            "format": "int32"
          },
          "byDocumentPart": {
            "type": "boolean",
            "description": "Can be used only for PowerPoint files"
          }
        }
      },
      "JobStatusChangeActionDto": {
        "type": "object",
        "properties": {
          "requestedStatus": {
            "type": "string",
            "enum": [
              "NEW",
              "ACCEPTED",
              "DECLINED",
              "REJECTED",
              "DELIVERED",
              "EMAILED",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "notifyOwner": {
            "type": "boolean",
            "description": "Default: false; Both project owner and job owner are notified;\n                    the parameter is subordinated to notification settings in the project"
          },
          "propagateStatus": {
            "type": "boolean",
            "description": "Default: false;\n        Controls both job status and email notifications to previous/next provider"
          }
        }
      },
      "ContinuousJobInfoDto": {
        "type": "object",
        "properties": {
          "dateUpdated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ImportStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "RUNNING",
              "ERROR",
              "OK"
            ]
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "JobPartExtendedDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "innerId": {
            "type": "string",
            "description": "InnerId is a sequential number of a job in a project. Jobs created from the same file share the same innerId across workflow steps."
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ACCEPTED",
              "DECLINED",
              "REJECTED",
              "DELIVERED",
              "EMAILED",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "providers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderReference"
            }
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLang": {
            "type": "string"
          },
          "workflowLevel": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/ProjectWorkflowStepReference"
          },
          "filename": {
            "type": "string"
          },
          "dateDue": {
            "type": "string",
            "format": "date-time"
          },
          "wordsCount": {
            "type": "integer",
            "format": "int32"
          },
          "beginIndex": {
            "type": "integer",
            "format": "int32"
          },
          "endIndex": {
            "type": "integer",
            "format": "int32"
          },
          "isParentJobSplit": {
            "type": "boolean"
          },
          "updateSourceDate": {
            "type": "string",
            "format": "date-time"
          },
          "updateTargetDate": {
            "type": "string",
            "format": "date-time"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "jobReference": {
            "$ref": "#/components/schemas/JobReference"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectReference"
          },
          "lastWorkflowLevel": {
            "type": "integer",
            "format": "int32"
          },
          "workUnit": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "importStatus": {
            "$ref": "#/components/schemas/ImportStatusDto"
          },
          "imported": {
            "type": "boolean"
          },
          "continuous": {
            "type": "boolean"
          },
          "continuousJobInfo": {
            "$ref": "#/components/schemas/ContinuousJobInfoDto"
          },
          "originalFileDirectory": {
            "type": "string"
          }
        }
      },
      "JobReference": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          }
        }
      },
      "ProjectWorkflowStepReference": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "workflowLevel": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PseudoTranslateActionDto": {
        "type": "object",
        "properties": {
          "replacement": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "suffix": {
            "type": "string"
          },
          "length": {
            "type": "number",
            "format": "double"
          },
          "keyHashPrefixLen": {
            "maximum": 18,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "substitution": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubstituteDto"
            }
          }
        }
      },
      "SubstituteDto": {
        "required": [
          "source",
          "target"
        ],
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        }
      },
      "JobPartReadyReferences": {
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "getParts": {
            "type": "object",
            "properties": {}
          }
        }
      },
      "AsyncRequestWrapperDto": {
        "type": "object",
        "properties": {
          "asyncRequest": {
            "$ref": "#/components/schemas/AsyncRequestDto"
          }
        }
      },
      "UpdateIgnoredSegment": {
        "required": [
          "uid",
          "warnings"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "warnings": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateIgnoredWarning"
            }
          }
        }
      },
      "UpdateIgnoredWarning": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "UpdateIgnoredWarningsDto": {
        "required": [
          "jobParts"
        ],
        "type": "object",
        "properties": {
          "jobParts": {
            "maxItems": 500,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateIgnoredJobPartSegment"
            }
          }
        }
      },
      "JobPartStatusChangeDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ACCEPTED",
              "DECLINED",
              "REJECTED",
              "DELIVERED",
              "EMAILED",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "changedDate": {
            "type": "string",
            "format": "date-time"
          },
          "changedBy": {
            "$ref": "#/components/schemas/UserReference"
          }
        }
      },
      "JobPartStatusChangesDto": {
        "type": "object",
        "properties": {
          "statusChanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobPartStatusChangeDto"
            }
          }
        }
      },
      "JobPartUpdateSingleDto": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ACCEPTED",
              "DECLINED",
              "REJECTED",
              "DELIVERED",
              "EMAILED",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "dateDue": {
            "type": "string",
            "format": "date-time"
          },
          "providers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderReference"
            }
          }
        }
      },
      "JobPartPatchSingleDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ACCEPTED",
              "DECLINED",
              "REJECTED",
              "DELIVERED",
              "EMAILED",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "dateDue": {
            "type": "string",
            "format": "date-time"
          },
          "providers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderReference"
            }
          }
        }
      },
      "TranslationResourcesDto": {
        "type": "object",
        "properties": {
          "machineTranslateSettings": {
            "$ref": "#/components/schemas/MachineTranslateSettingsReference"
          },
          "translationMemories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTranslationMemoryReference"
            }
          },
          "termBases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTermBaseReference"
            }
          }
        }
      },
      "JobSegmentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "translation": {
            "type": "string"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedAt": {
            "type": "integer",
            "format": "int64"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "workflowLevel": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/WorkflowStepDto"
          }
        }
      },
      "SegmentListDto": {
        "type": "object",
        "properties": {
          "segments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobSegmentDto"
            }
          }
        }
      },
      "WorkflowStepDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "abbr": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "lqaEnabled": {
            "type": "boolean"
          }
        }
      },
      "TargetFileWarningsDto": {
        "type": "object",
        "properties": {
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PreviewUrlDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ORIGINAL",
              "PDF"
            ]
          },
          "url": {
            "type": "string"
          }
        }
      },
      "PreviewUrlsDto": {
        "type": "object",
        "properties": {
          "previews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PreviewUrlDto"
            }
          }
        }
      },
      "AsyncRequestReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "action": {
            "type": "string",
            "enum": [
              "PRE_ANALYSE",
              "POST_ANALYSE",
              "COMPARE_ANALYSE",
              "PARENT_ANALYSE",
              "PRE_TRANSLATE",
              "ASYNC_TRANSLATE",
              "IMPORT_JOB",
              "IMPORT_FILE",
              "ALIGN",
              "EXPORT_TMX_BY_QUERY",
              "EXPORT_TMX",
              "IMPORT_TMX",
              "INSERT_INTO_TM",
              "DELETE_TM",
              "CLEAR_TM",
              "QA",
              "QA_V3",
              "UPDATE_CONTINUOUS_JOB",
              "UPDATE_SOURCE",
              "UPDATE_TARGET",
              "EXTRACT_CLEANED_TMS",
              "GLOSSARY_PUT",
              "GLOSSARY_DELETE",
              "CREATE_PROJECT",
              "EXPORT_COMPLETE_FILE"
            ]
          }
        }
      },
      "JobListDto": {
        "type": "object",
        "properties": {
          "unsupportedFiles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobPartReference"
            }
          },
          "asyncRequest": {
            "$ref": "#/components/schemas/AsyncRequestReference"
          }
        }
      },
      "JobCreateRemoteFileDto": {
        "required": [
          "connectorToken",
          "remoteFileName"
        ],
        "type": "object",
        "properties": {
          "connectorToken": {
            "type": "string"
          },
          "remoteFolder": {
            "type": "string"
          },
          "remoteFileName": {
            "type": "string"
          },
          "remoteFileNameRegex": {
            "type": "boolean"
          },
          "continuous": {
            "type": "boolean"
          }
        }
      },
      "JobCreateRequestDto": {
        "required": [
          "targetLangs"
        ],
        "type": "object",
        "properties": {
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "due": {
            "type": "string",
            "description": "only use for projects without workflows; otherwise specify in the workflowSettings object. Use ISO 8601 date format.",
            "format": "date-time"
          },
          "workflowSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStepConfiguration"
            }
          },
          "assignments": {
            "type": "array",
            "description": "only use for projects without workflows; otherwise specify in the workflowSettings object",
            "items": {
              "$ref": "#/components/schemas/ProvidersPerLanguage"
            }
          },
          "importSettings": {
            "$ref": "#/components/schemas/UidReference"
          },
          "useProjectFileImportSettings": {
            "type": "boolean",
            "description": "Default: false"
          },
          "preTranslate": {
            "type": "boolean"
          },
          "notifyProvider": {
            "$ref": "#/components/schemas/NotifyProviderDto"
          },
          "callbackUrl": {
            "type": "string"
          },
          "path": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "remoteFile": {
            "$ref": "#/components/schemas/JobCreateRemoteFileDto"
          }
        }
      },
      "NotifyProviderDto": {
        "required": [
          "organizationEmailTemplate"
        ],
        "type": "object",
        "properties": {
          "organizationEmailTemplate": {
            "$ref": "#/components/schemas/IdReference"
          },
          "notificationIntervalInMinutes": {
            "maximum": 1440,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProvidersPerLanguage": {
        "type": "object",
        "properties": {
          "targetLang": {
            "type": "string"
          },
          "providers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderReference"
            }
          },
          "assignedUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "User": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "WorkflowStepConfiguration": {
        "required": [
          "assignments"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "assignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProvidersPerLanguage"
            }
          },
          "due": {
            "type": "string",
            "description": "Use ISO 8601 date format.",
            "format": "date-time"
          },
          "notifyProvider": {
            "$ref": "#/components/schemas/NotifyProviderDto"
          }
        }
      },
      "JobPartUpdateSourceDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ACCEPTED",
              "DECLINED",
              "REJECTED",
              "DELIVERED",
              "EMAILED",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "targetLang": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "workflowLevel": {
            "type": "integer",
            "format": "int32"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/WorkflowStepReference"
          }
        }
      },
      "JobUpdateSourceResponseDto": {
        "type": "object",
        "properties": {
          "asyncRequest": {
            "$ref": "#/components/schemas/AsyncRequestReference"
          },
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobPartUpdateSourceDto"
            }
          }
        }
      },
      "JobPartDeleteReferences": {
        "required": [
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "getParts": {
            "type": "object",
            "properties": {}
          }
        }
      },
      "HumanTranslateJobsDto": {
        "required": [
          "humanTranslateSettings",
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "humanTranslateSettings": {
            "$ref": "#/components/schemas/IdReference"
          },
          "comment": {
            "type": "string"
          },
          "glossaryId": {
            "type": "string"
          },
          "usePreferredTranslators": {
            "type": "boolean"
          },
          "level": {
            "type": "string",
            "enum": [
              "STANDARD",
              "PRO"
            ]
          },
          "callbackUrl": {
            "type": "string"
          }
        }
      },
      "NotifyJobPartsRequestDto": {
        "required": [
          "emailTemplate",
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "emailTemplate": {
            "$ref": "#/components/schemas/IdReference"
          },
          "cc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bcc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetBilingualFileDto": {
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          }
        }
      },
      "JobPartUpdateBatchDto": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ACCEPTED",
              "DECLINED",
              "REJECTED",
              "DELIVERED",
              "EMAILED",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "dateDue": {
            "type": "string",
            "format": "date-time"
          },
          "providers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderReference"
            }
          }
        }
      },
      "SegmentReference": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          }
        }
      },
      "UpdateIgnoredChecksDto": {
        "required": [
          "segment",
          "warningTypes"
        ],
        "type": "object",
        "properties": {
          "segment": {
            "$ref": "#/components/schemas/SegmentReference"
          },
          "warningTypes": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EmptyTranslation",
                "TrailingPunctuation",
                "Formatting",
                "JoinTags",
                "MissingNumbersV3",
                "MultipleSpacesV3",
                "NonConformingTerm",
                "NotConfirmed",
                "TranslationLength",
                "AbsoluteLength",
                "RelativeLength",
                "UnresolvedComment",
                "EmptyPairTags",
                "InconsistentTranslationTargetSource",
                "InconsistentTranslationSourceTarget",
                "ForbiddenString",
                "SpellCheck",
                "RepeatedWord",
                "InconsistentTagContent",
                "EmptyTagContent",
                "Malformed",
                "ForbiddenTerm",
                "NewerAtLowerLevel",
                "LeadingAndTrailingSpaces",
                "LeadingSpaces",
                "TrailingSpaces",
                "TargetSourceIdentical",
                "SourceOrTargetRegexp",
                "UnmodifiedFuzzyTranslation",
                "UnmodifiedFuzzyTranslationTM",
                "UnmodifiedFuzzyTranslationMTNT",
                "Moravia",
                "ExtraNumbersV3",
                "UnresolvedConversation",
                "NestedTags",
                "FuzzyInconsistencyTargetSource",
                "FuzzyInconsistencySourceTarget"
              ]
            }
          }
        }
      },
      "SearchJobsDto": {
        "type": "object",
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobPartExtendedDto"
            }
          }
        }
      },
      "SearchJobsRequestDto": {
        "required": [
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 50,
            "minItems": 1,
            "type": "array",
            "description": "Max: 50 records",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          }
        }
      },
      "PreviousWorkflowDto": {
        "type": "object",
        "properties": {
          "completed": {
            "type": "boolean"
          },
          "counts": {
            "$ref": "#/components/schemas/SegmentsCountsDto"
          }
        }
      },
      "QualityAssuranceDto": {
        "type": "object",
        "properties": {
          "segmentsCount": {
            "type": "integer",
            "format": "int64"
          },
          "warningsCount": {
            "type": "integer",
            "format": "int64"
          },
          "ignoredWarningsCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SegmentsCountsDto": {
        "type": "object",
        "properties": {
          "allConfirmed": {
            "type": "boolean"
          },
          "charsCount": {
            "type": "integer",
            "format": "int64"
          },
          "completedCharsCount": {
            "type": "integer",
            "format": "int64"
          },
          "confirmedCharsCount": {
            "type": "integer",
            "format": "int64"
          },
          "confirmedLockedCharsCount": {
            "type": "integer",
            "format": "int64"
          },
          "lockedCharsCount": {
            "type": "integer",
            "format": "int64"
          },
          "segmentsCount": {
            "type": "integer",
            "format": "int64"
          },
          "completedSegmentsCount": {
            "type": "integer",
            "format": "int64"
          },
          "lockedSegmentsCount": {
            "type": "integer",
            "format": "int64"
          },
          "segmentGroupsCount": {
            "type": "integer",
            "format": "int64"
          },
          "translatedSegmentsCount": {
            "type": "integer",
            "format": "int64"
          },
          "translatedLockedSegmentsCount": {
            "type": "integer",
            "format": "int64"
          },
          "wordsCount": {
            "type": "integer",
            "format": "int64"
          },
          "completedWordsCount": {
            "type": "integer",
            "format": "int64"
          },
          "confirmedWordsCount": {
            "type": "integer",
            "format": "int64"
          },
          "confirmedLockedWordsCount": {
            "type": "integer",
            "format": "int64"
          },
          "lockedWordsCount": {
            "type": "integer",
            "format": "int64"
          },
          "addedSegments": {
            "type": "integer",
            "format": "int64"
          },
          "addedWords": {
            "type": "integer",
            "format": "int64"
          },
          "machineTranslationPostEditedSegmentsCount": {
            "type": "integer",
            "format": "int64"
          },
          "machineTranslationRelevantSegmentsCount": {
            "type": "integer",
            "format": "int64"
          },
          "qualityAssurance": {
            "$ref": "#/components/schemas/QualityAssuranceDto"
          },
          "qualityAssuranceResolved": {
            "type": "boolean"
          }
        }
      },
      "SegmentsCountsResponseDto": {
        "type": "object",
        "properties": {
          "jobPartUid": {
            "type": "string"
          },
          "counts": {
            "$ref": "#/components/schemas/SegmentsCountsDto"
          },
          "previousWorkflow": {
            "$ref": "#/components/schemas/PreviousWorkflowDto"
          }
        }
      },
      "SegmentsCountsResponseListDto": {
        "type": "object",
        "properties": {
          "segmentsCountsResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SegmentsCountsResponseDto"
            }
          }
        }
      },
      "ImportStatusDtoV2": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "RUNNING",
              "ERROR",
              "OK"
            ]
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "JobPartReferenceV2": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "innerId": {
            "type": "string",
            "description": "InnerId is a sequential number of a job in a project.\n            Jobs created from the same file share the same innerId across workflow steps"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ACCEPTED",
              "DECLINED",
              "REJECTED",
              "DELIVERED",
              "EMAILED",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "providers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderReference"
            }
          },
          "targetLang": {
            "type": "string"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/ProjectWorkflowStepReference"
          },
          "filename": {
            "type": "string"
          },
          "originalFileDirectory": {
            "type": "string"
          },
          "dateDue": {
            "type": "string",
            "format": "date-time"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "importStatus": {
            "$ref": "#/components/schemas/ImportStatusDtoV2"
          },
          "continuous": {
            "type": "boolean"
          },
          "sourceFileUid": {
            "type": "string"
          },
          "split": {
            "type": "boolean"
          },
          "serverTaskId": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/UserReference"
          },
          "imported": {
            "type": "boolean",
            "description": "Default: false"
          }
        }
      },
      "PageDtoJobPartReferenceV2": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobPartReferenceV2"
            }
          }
        }
      },
      "SearchResponseListTbDto": {
        "type": "object",
        "properties": {
          "searchResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchResponseTbDto"
            }
          }
        }
      },
      "SearchResponseTbDto": {
        "type": "object",
        "properties": {
          "termBase": {
            "$ref": "#/components/schemas/TermBaseDto"
          },
          "conceptId": {
            "type": "string"
          },
          "sourceTerm": {
            "$ref": "#/components/schemas/TermDto"
          },
          "translationTerms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TermDto"
            }
          }
        }
      },
      "TermBaseDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "internalId": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "langs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "client": {
            "$ref": "#/components/schemas/ClientReference"
          },
          "domain": {
            "$ref": "#/components/schemas/DomainReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/SubDomainReference"
          },
          "businessUnit": {
            "$ref": "#/components/schemas/BusinessUnitReference"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "owner": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "note": {
            "type": "string"
          },
          "canShow": {
            "type": "boolean"
          }
        }
      },
      "TermDto": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "rtl": {
            "type": "boolean"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "caseSensitive": {
            "type": "boolean"
          },
          "exactMatch": {
            "type": "boolean"
          },
          "forbidden": {
            "type": "boolean"
          },
          "preferred": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "New",
              "Approved"
            ]
          },
          "conceptId": {
            "type": "string"
          },
          "usage": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "writable": {
            "type": "boolean"
          },
          "shortTranslation": {
            "type": "string"
          },
          "termType": {
            "type": "string"
          },
          "partOfSpeech": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "definition": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "subDomains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "type": "string"
          },
          "conceptNote": {
            "type": "string"
          }
        }
      },
      "TermPairDto": {
        "required": [
          "sourceTerm",
          "targetTerm"
        ],
        "type": "object",
        "properties": {
          "sourceTerm": {
            "$ref": "#/components/schemas/TermDto"
          },
          "targetTerm": {
            "$ref": "#/components/schemas/TermDto"
          }
        }
      },
      "CreateTermsDto": {
        "required": [
          "sourceTerm",
          "targetTerm"
        ],
        "type": "object",
        "properties": {
          "sourceTerm": {
            "$ref": "#/components/schemas/TermCreateByJobDto"
          },
          "targetTerm": {
            "$ref": "#/components/schemas/TermCreateByJobDto"
          }
        }
      },
      "TermCreateByJobDto": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "caseSensitive": {
            "type": "boolean",
            "description": "Default: false"
          },
          "exactMatch": {
            "type": "boolean",
            "description": "Default: false"
          },
          "forbidden": {
            "type": "boolean",
            "description": "Default: false"
          },
          "preferred": {
            "type": "boolean",
            "description": "Default: false"
          },
          "usage": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "shortTranslation": {
            "type": "string"
          },
          "termType": {
            "type": "string",
            "enum": [
              "FULL_FORM",
              "SHORT_FORM",
              "ACRONYM",
              "ABBREVIATION",
              "PHRASE",
              "VARIANT"
            ]
          },
          "partOfSpeech": {
            "type": "string",
            "enum": [
              "ADJECTIVE",
              "NOUN",
              "VERB",
              "ADVERB"
            ]
          },
          "gender": {
            "type": "string",
            "enum": [
              "MASCULINE",
              "FEMININE",
              "NEUTRAL"
            ]
          },
          "number": {
            "type": "string",
            "enum": [
              "SINGULAR",
              "PLURAL",
              "UNCOUNTABLE"
            ]
          }
        }
      },
      "Match": {
        "type": "object",
        "properties": {
          "beginIndex": {
            "type": "integer",
            "format": "int32"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "CreateReferenceFileNoteDto": {
        "required": [
          "note"
        ],
        "type": "object",
        "properties": {
          "note": {
            "type": "string"
          }
        }
      },
      "ReferenceFileAccessDto": {
        "type": "object",
        "properties": {
          "canCreate": {
            "type": "boolean"
          }
        }
      },
      "ReferenceFilePageDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferenceFileReference"
            }
          },
          "access": {
            "$ref": "#/components/schemas/ReferenceFileAccessDto"
          }
        }
      },
      "ProjectReferenceFilesRequestDto": {
        "required": [
          "referenceFiles"
        ],
        "type": "object",
        "properties": {
          "referenceFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdReference"
            }
          }
        }
      },
      "UserReferencesDto": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserReference"
            }
          }
        }
      },
      "PageDtoTransMemoryDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransMemoryDto"
            }
          }
        }
      },
      "TransMemoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "internalId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "client": {
            "$ref": "#/components/schemas/ClientReference"
          },
          "businessUnit": {
            "$ref": "#/components/schemas/BusinessUnitReference"
          },
          "domain": {
            "$ref": "#/components/schemas/DomainReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/SubDomainReference"
          },
          "note": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "owner": {
            "$ref": "#/components/schemas/UserReference"
          }
        }
      },
      "AssignmentPerTargetLangDto": {
        "type": "object",
        "properties": {
          "targetLang": {
            "type": "string"
          },
          "providers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderReference"
            }
          }
        }
      },
      "ProjectTemplateNotifyProviderDto": {
        "required": [
          "organizationEmailTemplate"
        ],
        "type": "object",
        "properties": {
          "organizationEmailTemplate": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "notificationIntervalInMinutes": {
            "maximum": 1440,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WorkflowStepSettingsDto": {
        "type": "object",
        "properties": {
          "workflowStep": {
            "$ref": "#/components/schemas/WorkflowStepReference"
          },
          "assignedTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTemplateWorkflowSettingsAssignedToDto"
            }
          },
          "notifyProvider": {
            "$ref": "#/components/schemas/ProjectTemplateNotifyProviderDto"
          },
          "lqaProfile": {
            "$ref": "#/components/schemas/UidReference"
          }
        }
      },
      "ProjectTemplateCreateActionDto": {
        "required": [
          "name",
          "project"
        ],
        "type": "object",
        "properties": {
          "project": {
            "$ref": "#/components/schemas/UidReference"
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "importSettings": {
            "$ref": "#/components/schemas/UidReference"
          },
          "useDynamicTitle": {
            "type": "boolean"
          },
          "dynamicTitle": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "ProjectTemplateEditDto": {
        "required": [
          "templateName"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "templateName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "useDynamicTitle": {
            "type": "boolean"
          },
          "dynamicTitle": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "notifyProvider": {
            "$ref": "#/components/schemas/ProjectTemplateNotifyProviderDto"
          },
          "workFlowSettings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStepSettingsEditDto"
            }
          },
          "client": {
            "$ref": "#/components/schemas/IdReference"
          },
          "costCenter": {
            "$ref": "#/components/schemas/IdReference"
          },
          "businessUnit": {
            "$ref": "#/components/schemas/IdReference"
          },
          "domain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "vendor": {
            "$ref": "#/components/schemas/IdReference"
          },
          "importSettings": {
            "$ref": "#/components/schemas/UidReference"
          },
          "note": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string"
          },
          "fileHandover": {
            "type": "boolean",
            "description": "Default: false"
          },
          "assignedTo": {
            "type": "array",
            "description": "only use for projects without workflows; otherwise specify in the workflowSettings object",
            "items": {
              "$ref": "#/components/schemas/ProjectTemplateWorkflowSettingsAssignedToDto"
            }
          }
        }
      },
      "WorkflowStepSettingsEditDto": {
        "type": "object",
        "properties": {
          "workflowStep": {
            "$ref": "#/components/schemas/IdReference"
          },
          "assignedTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTemplateWorkflowSettingsAssignedToDto"
            }
          },
          "notifyProvider": {
            "$ref": "#/components/schemas/ProjectTemplateNotifyProviderDto"
          },
          "lqaProfile": {
            "$ref": "#/components/schemas/UidReference"
          }
        }
      },
      "ProjectSecuritySettingsDtoV2": {
        "type": "object",
        "properties": {
          "downloadEnabled": {
            "type": "boolean"
          },
          "webEditorEnabledForLinguists": {
            "type": "boolean"
          },
          "showUserDataToLinguists": {
            "type": "boolean"
          },
          "emailNotifications": {
            "type": "boolean"
          },
          "strictWorkflowFinish": {
            "type": "boolean"
          },
          "useVendors": {
            "type": "boolean"
          },
          "linguistsMayEditLockedSegments": {
            "type": "boolean"
          },
          "usersMaySetAutoPropagation": {
            "type": "boolean"
          },
          "allowLoadingExternalContentInEditors": {
            "type": "boolean"
          },
          "allowLoadingIframes": {
            "type": "boolean"
          },
          "linguistsMayEditSource": {
            "type": "boolean"
          },
          "linguistsMayEditTagContent": {
            "type": "boolean"
          },
          "linguistsMayDownloadLqaReport": {
            "type": "boolean"
          },
          "usernamesDisplayedInLqaReport": {
            "type": "boolean"
          },
          "userMaySetInstantQA": {
            "type": "boolean"
          },
          "triggerWebhooks": {
            "type": "boolean"
          },
          "vendors": {
            "$ref": "#/components/schemas/VendorSecuritySettingsDto"
          },
          "allowedDomains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EditProjectSecuritySettingsDtoV2": {
        "type": "object",
        "properties": {
          "downloadEnabled": {
            "type": "boolean",
            "description": "Default: `false`"
          },
          "webEditorEnabledForLinguists": {
            "type": "boolean",
            "description": "Default: `false`"
          },
          "showUserDataToLinguists": {
            "type": "boolean",
            "description": "Default: `false`"
          },
          "emailNotifications": {
            "type": "boolean",
            "description": "Default: `false`"
          },
          "strictWorkflowFinish": {
            "type": "boolean",
            "description": "Default: `false`"
          },
          "useVendors": {
            "type": "boolean",
            "description": "Default: `false`"
          },
          "linguistsMayEditLockedSegments": {
            "type": "boolean",
            "description": "Default: `false`"
          },
          "usersMaySetAutoPropagation": {
            "type": "boolean",
            "description": "Default: `true`"
          },
          "allowLoadingExternalContentInEditors": {
            "type": "boolean",
            "description": "Default: `true`"
          },
          "allowLoadingIframes": {
            "type": "boolean",
            "description": "Default: `false`"
          },
          "linguistsMayEditSource": {
            "type": "boolean",
            "description": "Default: `true`"
          },
          "linguistsMayEditTagContent": {
            "type": "boolean",
            "description": "Default: `true`"
          },
          "linguistsMayDownloadLqaReport": {
            "type": "boolean",
            "description": "Default: `true`"
          },
          "usernamesDisplayedInLqaReport": {
            "type": "boolean",
            "description": "Default: `true`"
          },
          "userMaySetInstantQA": {
            "type": "boolean",
            "description": "Default: `true`"
          },
          "triggerWebhooks": {
            "type": "boolean",
            "description": "Default: `true`"
          },
          "notifyJobOwnerStatusChanged": {
            "type": "boolean",
            "description": "Default: `false`"
          },
          "vendors": {
            "$ref": "#/components/schemas/VendorSecuritySettingsDto"
          },
          "allowedDomains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageDtoProjectTemplateReference": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTemplateReference"
            }
          }
        }
      },
      "ProjectTemplateReference": {
        "type": "object",
        "properties": {
          "templateName": {
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/UserReference"
          },
          "domain": {
            "$ref": "#/components/schemas/DomainReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/SubDomainReference"
          },
          "costCenter": {
            "$ref": "#/components/schemas/CostCenterReference"
          },
          "businessUnit": {
            "$ref": "#/components/schemas/BusinessUnitReference"
          },
          "note": {
            "type": "string"
          },
          "client": {
            "$ref": "#/components/schemas/ClientReference"
          }
        }
      },
      "AbstractAnalyseSettingsDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Response differs based on analyse type",
            "enum": [
              "PreAnalyse",
              "PostAnalyse",
              "PreAnalyseTarget",
              "Compare"
            ]
          },
          "includeConfirmedSegments": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeNumbers": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeLockedSegments": {
            "type": "boolean",
            "description": "Default: false"
          },
          "countSourceUnits": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeTransMemory": {
            "type": "boolean",
            "description": "Default: false"
          },
          "namingPattern": {
            "type": "string"
          },
          "analyzeByLanguage": {
            "type": "boolean",
            "description": "Default: false"
          },
          "analyzeByProvider": {
            "type": "boolean",
            "description": "Default: false"
          },
          "allowAutomaticPostAnalysis": {
            "type": "boolean",
            "description": "If automatic post analysis should be created after update source. Default: false"
          }
        },
        "description": "Base analyseSettingsDto",
        "discriminator": {
          "propertyName": "type"
        }
      },
      "PostAnalyse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractAnalyseSettingsDto"
          },
          {
            "type": "object",
            "properties": {
              "transMemoryPostEditing": {
                "type": "boolean",
                "description": "Default: false"
              },
              "nonTranslatablePostEditing": {
                "type": "boolean",
                "description": "Default: false"
              },
              "machineTranslatePostEditing": {
                "type": "boolean",
                "description": "Default: false"
              }
            }
          }
        ]
      },
      "PreAnalyse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractAnalyseSettingsDto"
          },
          {
            "type": "object",
            "properties": {
              "includeFuzzyRepetitions": {
                "type": "boolean",
                "description": "Default: false"
              },
              "separateFuzzyRepetitions": {
                "type": "boolean",
                "description": "Default: false"
              },
              "includeNonTranslatables": {
                "type": "boolean",
                "description": "Default: false"
              },
              "includeMachineTranslationMatches": {
                "type": "boolean",
                "description": "Default: false"
              }
            }
          }
        ]
      },
      "PreAnalyseTarget, Compare": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractAnalyseSettingsDto"
          },
          {
            "type": "object",
            "properties": {
              "transMemoryPostEditing": {
                "type": "boolean",
                "description": "Default: false"
              },
              "nonTranslatablePostEditing": {
                "type": "boolean",
                "description": "Default: false"
              },
              "machineTranslatePostEditing": {
                "type": "boolean",
                "description": "Default: false"
              },
              "includeFuzzyRepetitions": {
                "type": "boolean",
                "description": "Default: false"
              },
              "separateFuzzyRepetitions": {
                "type": "boolean",
                "description": "Default: false"
              },
              "includeNonTranslatables": {
                "type": "boolean",
                "description": "Default: false"
              },
              "includeMachineTranslationMatches": {
                "type": "boolean",
                "description": "Default: false"
              }
            }
          }
        ]
      },
      "EditAnalyseSettingsDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PreAnalyse",
              "PostAnalyse",
              "PreAnalyseTarget",
              "Compare"
            ]
          },
          "includeFuzzyRepetitions": {
            "type": "boolean",
            "description": "Default: false"
          },
          "separateFuzzyRepetitions": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeNonTranslatables": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeMachineTranslationMatches": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeConfirmedSegments": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeNumbers": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeLockedSegments": {
            "type": "boolean",
            "description": "Default: false"
          },
          "transMemoryPostEditing": {
            "type": "boolean",
            "description": "Default: false"
          },
          "nonTranslatablePostEditing": {
            "type": "boolean",
            "description": "Default: false"
          },
          "machineTranslatePostEditing": {
            "type": "boolean",
            "description": "Default: false"
          },
          "countSourceUnits": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeTransMemory": {
            "type": "boolean",
            "description": "Default: false"
          },
          "namingPattern": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "analyzeByLanguage": {
            "type": "boolean",
            "description": "Mutually exclusive with analyzeByProvider. Default: false"
          },
          "analyzeByProvider": {
            "type": "boolean",
            "description": "Mutually exclusive with analyzeByLanguage. Default: true"
          },
          "allowAutomaticPostAnalysis": {
            "type": "boolean",
            "description": "Default: false"
          }
        }
      },
      "ProjectTemplateTermBaseDto": {
        "type": "object",
        "properties": {
          "targetLocale": {
            "type": "string"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/WorkflowStepReference"
          },
          "readMode": {
            "type": "boolean"
          },
          "writeMode": {
            "type": "boolean"
          },
          "termBase": {
            "$ref": "#/components/schemas/TermBaseDto"
          },
          "qualityAssurance": {
            "type": "boolean"
          }
        }
      },
      "ProjectTemplateTermBaseListDto": {
        "type": "object",
        "properties": {
          "termBases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTemplateTermBaseDto"
            }
          }
        }
      },
      "SetProjectTemplateTermBaseDto": {
        "type": "object",
        "properties": {
          "readTermBases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdReference"
            }
          },
          "writeTermBase": {
            "$ref": "#/components/schemas/IdReference"
          },
          "qualityAssuranceTermBases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdReference"
            }
          },
          "targetLang": {
            "type": "string"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/IdReference"
          }
        }
      },
      "ProjectTermBaseDto": {
        "type": "object",
        "properties": {
          "targetLocale": {
            "type": "string"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/WorkflowStepReference"
          },
          "readMode": {
            "type": "boolean"
          },
          "writeMode": {
            "type": "boolean"
          },
          "termBase": {
            "$ref": "#/components/schemas/TermBaseDto"
          },
          "qualityAssurance": {
            "type": "boolean"
          }
        }
      },
      "ProjectTermBaseListDto": {
        "type": "object",
        "properties": {
          "termBases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTermBaseDto"
            }
          }
        }
      },
      "SetTermBaseDto": {
        "type": "object",
        "properties": {
          "readTermBases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdReference"
            }
          },
          "writeTermBase": {
            "$ref": "#/components/schemas/IdReference"
          },
          "qualityAssuranceTermBases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdReference"
            }
          },
          "targetLang": {
            "type": "string"
          }
        }
      },
      "PageDtoTermBaseDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TermBaseDto"
            }
          }
        }
      },
      "SearchTMRequestDto": {
        "required": [
          "segment",
          "targetLangs"
        ],
        "type": "object",
        "properties": {
          "segment": {
            "type": "string"
          },
          "workflowLevel": {
            "maximum": 15,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "scoreThreshold": {
            "maximum": 1.01,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number",
            "format": "double"
          },
          "previousSegment": {
            "type": "string"
          },
          "nextSegment": {
            "type": "string"
          },
          "contextKey": {
            "type": "string"
          },
          "maxSegments": {
            "maximum": 5,
            "minimum": 0,
            "type": "integer",
            "description": "Default: 5",
            "format": "int32"
          },
          "maxSubSegments": {
            "maximum": 5,
            "minimum": 0,
            "type": "integer",
            "description": "Default: 5",
            "format": "int32"
          },
          "tagMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagMetadataDto"
            }
          },
          "targetLangs": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EmailQuotesResponseDto": {
        "type": "object",
        "properties": {
          "recipients": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EmailQuotesRequestDto": {
        "required": [
          "body",
          "quotes",
          "subject"
        ],
        "type": "object",
        "properties": {
          "quotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "subject": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "cc": {
            "type": "string"
          },
          "bcc": {
            "type": "string"
          }
        }
      },
      "SchemaExtension": {
        "type": "object",
        "properties": {
          "schema": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          }
        }
      },
      "ScimResourceTypeSchema": {
        "type": "object",
        "properties": {
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "schema": {
            "type": "string"
          },
          "schemaExtensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SchemaExtension"
            }
          }
        }
      },
      "AuthSchema": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "specUrl": {
            "type": "string"
          },
          "primary": {
            "type": "boolean"
          }
        }
      },
      "ServiceProviderConfigDto": {
        "type": "object",
        "properties": {
          "authenticationSchemes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthSchema"
            }
          },
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "patch": {
            "$ref": "#/components/schemas/Supported"
          },
          "bulk": {
            "$ref": "#/components/schemas/Supported"
          },
          "filter": {
            "$ref": "#/components/schemas/Supported"
          },
          "changePassword": {
            "$ref": "#/components/schemas/Supported"
          },
          "sort": {
            "$ref": "#/components/schemas/Supported"
          },
          "etag": {
            "$ref": "#/components/schemas/Supported"
          },
          "xmlDataFormat": {
            "$ref": "#/components/schemas/Supported"
          }
        }
      },
      "Supported": {
        "type": "object",
        "properties": {
          "supported": {
            "type": "boolean"
          }
        }
      },
      "Attribute": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "STRING",
              "BOOLEAN",
              "DECIMAL",
              "INTEGER",
              "DATE_TIME",
              "BINARY",
              "REFERENCE",
              "COMPLEX"
            ]
          },
          "subAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          },
          "multiValued": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "caseExact": {
            "type": "boolean"
          },
          "mutability": {
            "type": "string",
            "enum": [
              "READ_ONLY",
              "READ_WRITE",
              "IMMUTABLE",
              "WRITE_ONLY"
            ]
          },
          "returned": {
            "type": "string",
            "enum": [
              "ALWAYS",
              "NEVER",
              "DEFAULT",
              "REQUEST"
            ]
          },
          "uniqueness": {
            "type": "string",
            "enum": [
              "NONE",
              "SERVER",
              "GLOBAL"
            ]
          }
        }
      },
      "ScimResourceSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attribute"
            }
          }
        }
      },
      "Email": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "primary": {
            "type": "boolean",
            "description": "Default: false"
          }
        }
      },
      "Name": {
        "required": [
          "familyName",
          "givenName"
        ],
        "type": "object",
        "properties": {
          "givenName": {
            "type": "string"
          },
          "familyName": {
            "type": "string"
          }
        }
      },
      "ScimMeta": {
        "type": "object",
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "location": {
            "type": "string"
          }
        }
      },
      "ScimUserCoreDto": {
        "required": [
          "emails",
          "name",
          "userName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "userName": {
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/Name"
          },
          "active": {
            "type": "boolean",
            "description": "Default: true"
          },
          "emails": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/ScimMeta"
          }
        }
      },
      "SegmentationRuleDto": {
        "required": [
          "filename",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "uid": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "primary": {
            "type": "boolean",
            "description": "Default: false"
          },
          "filename": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          }
        },
        "description": "segmentation rule object"
      },
      "EditSegmentationRuleDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "primary": {
            "type": "boolean",
            "description": "Default: false"
          }
        },
        "description": "segmentation rule object for editing"
      },
      "PageDtoSegmentationRuleReference": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SegmentationRuleReference"
            }
          }
        }
      },
      "SegmentationRuleReference": {
        "required": [
          "filename",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "uid": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "primary": {
            "type": "boolean",
            "description": "Default: false"
          },
          "filename": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "CheckResponse": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "misspelledWords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MisspelledWord"
            }
          }
        }
      },
      "MisspelledWord": {
        "type": "object",
        "properties": {
          "word": {
            "type": "string"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SpellCheckResponseDto": {
        "type": "object",
        "properties": {
          "spellCheckResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckResponse"
            }
          }
        }
      },
      "SpellCheckRequestDto": {
        "required": [
          "lang",
          "texts"
        ],
        "type": "object",
        "properties": {
          "lang": {
            "type": "string"
          },
          "texts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referenceTexts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "zeroLengthSeparator": {
            "type": "string"
          }
        }
      },
      "SuggestResponse": {
        "type": "object",
        "properties": {
          "word": {
            "type": "string"
          },
          "suggestions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Suggestion"
            }
          }
        }
      },
      "SuggestResponseDto": {
        "type": "object",
        "properties": {
          "suggestResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuggestResponse"
            }
          }
        }
      },
      "Suggestion": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          }
        }
      },
      "SuggestRequestDto": {
        "required": [
          "lang",
          "words"
        ],
        "type": "object",
        "properties": {
          "lang": {
            "type": "string"
          },
          "words": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "referenceTexts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DictionaryItemDto": {
        "required": [
          "lang",
          "word"
        ],
        "type": "object",
        "properties": {
          "lang": {
            "type": "string"
          },
          "word": {
            "type": "string"
          }
        }
      },
      "PageDtoSubDomainDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubDomainDto"
            }
          }
        }
      },
      "SubDomainDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          }
        }
      },
      "SubDomainEditDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "TermBaseEditDto": {
        "required": [
          "langs",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "langs": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "client": {
            "$ref": "#/components/schemas/IdReference"
          },
          "domain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "businessUnit": {
            "$ref": "#/components/schemas/IdReference"
          },
          "owner": {
            "$ref": "#/components/schemas/IdReference"
          },
          "note": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "ImportTermBaseResponseDto": {
        "type": "object",
        "properties": {
          "langs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdTermsCount": {
            "type": "integer",
            "format": "int64"
          },
          "updatedTermsCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ConceptListResponseDto": {
        "type": "object",
        "properties": {
          "concepts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConceptWithMetadataDto"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ConceptWithMetadataDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "domain": {
            "$ref": "#/components/schemas/DomainReference"
          },
          "subdomains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubDomainReference"
            }
          },
          "url": {
            "type": "string"
          },
          "definition": {
            "type": "string"
          },
          "conceptNote": {
            "type": "string"
          }
        }
      },
      "ConceptEditDto": {
        "type": "object",
        "properties": {
          "domain": {
            "$ref": "#/components/schemas/UidReference"
          },
          "subdomains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "definition": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "conceptNote": {
            "type": "string"
          }
        }
      },
      "TermCreateDto": {
        "required": [
          "lang",
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "caseSensitive": {
            "type": "boolean",
            "description": "Default: false"
          },
          "exactMatch": {
            "type": "boolean",
            "description": "Default: false"
          },
          "forbidden": {
            "type": "boolean",
            "description": "Default: false"
          },
          "preferred": {
            "type": "boolean",
            "description": "Default: false"
          },
          "status": {
            "type": "string",
            "enum": [
              "New",
              "Approved"
            ]
          },
          "conceptId": {
            "type": "string"
          },
          "usage": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "shortTranslation": {
            "type": "string"
          },
          "termType": {
            "type": "string",
            "enum": [
              "FULL_FORM",
              "SHORT_FORM",
              "ACRONYM",
              "ABBREVIATION",
              "PHRASE",
              "VARIANT"
            ]
          },
          "partOfSpeech": {
            "type": "string",
            "enum": [
              "ADJECTIVE",
              "NOUN",
              "VERB",
              "ADVERB"
            ]
          },
          "gender": {
            "type": "string",
            "enum": [
              "MASCULINE",
              "FEMININE",
              "NEUTRAL"
            ]
          },
          "number": {
            "type": "string",
            "enum": [
              "SINGULAR",
              "PLURAL",
              "UNCOUNTABLE"
            ]
          }
        }
      },
      "TermEditDto": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "caseSensitive": {
            "type": "boolean",
            "description": "Default: false"
          },
          "exactMatch": {
            "type": "boolean",
            "description": "Default: false"
          },
          "forbidden": {
            "type": "boolean",
            "description": "Default: false"
          },
          "preferred": {
            "type": "boolean",
            "description": "Default: false"
          },
          "status": {
            "type": "string",
            "enum": [
              "New",
              "Approved"
            ]
          },
          "usage": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "shortTranslation": {
            "type": "string"
          },
          "termType": {
            "type": "string",
            "enum": [
              "FULL_FORM",
              "SHORT_FORM",
              "ACRONYM",
              "ABBREVIATION",
              "PHRASE",
              "VARIANT"
            ]
          },
          "partOfSpeech": {
            "type": "string",
            "enum": [
              "ADJECTIVE",
              "NOUN",
              "VERB",
              "ADVERB"
            ]
          },
          "gender": {
            "type": "string",
            "enum": [
              "MASCULINE",
              "FEMININE",
              "NEUTRAL"
            ]
          },
          "number": {
            "type": "string",
            "enum": [
              "SINGULAR",
              "PLURAL",
              "UNCOUNTABLE"
            ]
          }
        }
      },
      "ConceptListReference": {
        "required": [
          "concepts"
        ],
        "type": "object",
        "properties": {
          "concepts": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdReference"
            }
          }
        }
      },
      "ConceptDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "writable": {
            "type": "boolean"
          },
          "terms": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TermDto"
              }
            }
          }
        }
      },
      "BackgroundTasksTbDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "finishedDataText": {
            "type": "string"
          },
          "asyncRequest": {
            "$ref": "#/components/schemas/AsyncRequestDto"
          },
          "lastTaskString": {
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/MetadataResponse"
          },
          "lastTaskOk": {
            "type": "string"
          },
          "lastTaskError": {
            "type": "string"
          },
          "lastTaskErrorHtml": {
            "type": "string"
          }
        }
      },
      "MetadataResponse": {
        "type": "object",
        "properties": {
          "segmentsCount": {
            "type": "integer",
            "format": "int64"
          },
          "deduplicatedSegmentsCount": {
            "type": "integer",
            "format": "int64"
          },
          "metadataByLanguage": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LanguageMetadata1"
            }
          }
        }
      },
      "BrowseResponseListDto": {
        "type": "object",
        "properties": {
          "searchResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConceptDto"
            }
          }
        }
      },
      "BrowseRequestDto": {
        "type": "object",
        "properties": {
          "queryLang": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "maximum": 50,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "TermBaseSearchRequestDto": {
        "required": [
          "query",
          "sourceLang",
          "targetLangs"
        ],
        "type": "object",
        "properties": {
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sourceLang": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "New",
              "Approved"
            ]
          }
        }
      },
      "MetadataTbDto": {
        "type": "object",
        "properties": {
          "termsCount": {
            "type": "integer",
            "format": "int64"
          },
          "metadataByLanguage": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "SearchRequestDto": {
        "required": [
          "query",
          "sourceLang"
        ],
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "previousSegment": {
            "type": "string"
          },
          "nextSegment": {
            "type": "string"
          },
          "tagMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagMetadataDto"
            }
          },
          "trimQuery": {
            "type": "boolean",
            "description": "Remove leading and trailing whitespace from query. Default: true"
          },
          "phraseQuery": {
            "type": "boolean",
            "description": "Return both wildcard and exact search results. Default: true"
          }
        }
      },
      "TransMemoryCreateDto": {
        "required": [
          "name",
          "sourceLang",
          "targetLangs"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "client": {
            "$ref": "#/components/schemas/IdReference"
          },
          "businessUnit": {
            "$ref": "#/components/schemas/IdReference"
          },
          "domain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "note": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "TargetLanguageDto": {
        "required": [
          "language"
        ],
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          }
        }
      },
      "SegmentDto": {
        "required": [
          "sourceSegment",
          "targetLang",
          "targetSegment"
        ],
        "type": "object",
        "properties": {
          "targetLang": {
            "type": "string"
          },
          "sourceSegment": {
            "type": "string"
          },
          "targetSegment": {
            "type": "string"
          },
          "previousSourceSegment": {
            "type": "string"
          },
          "nextSourceSegment": {
            "type": "string"
          },
          "sourceTagMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagMetadataDto"
            }
          },
          "targetTagMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagMetadataDto"
            }
          }
        }
      },
      "LanguageMetadata1": {
        "type": "object",
        "properties": {
          "segmentsCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TranslationDto": {
        "required": [
          "lang",
          "text"
        ],
        "type": "object",
        "properties": {
          "lang": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "BackgroundTasksTmDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "finishedDataText": {
            "type": "string"
          },
          "asyncRequest": {
            "$ref": "#/components/schemas/AsyncRequestDto"
          },
          "lastTaskString": {
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/MetadataResponse"
          },
          "lastTaskOk": {
            "type": "string"
          },
          "lastTaskError": {
            "type": "string"
          },
          "lastTaskErrorHtml": {
            "type": "string"
          }
        }
      },
      "WildCardSearchRequestDto": {
        "required": [
          "sourceLang"
        ],
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "count": {
            "maximum": 50,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "sourceLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AsyncExportTMByQueryDto": {
        "type": "object",
        "properties": {
          "asyncRequest": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "transMemory": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "exportTargetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "queries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Query"
            }
          }
        }
      },
      "AsyncExportTMByQueryResponseDto": {
        "type": "object",
        "properties": {
          "asyncRequest": {
            "$ref": "#/components/schemas/AsyncRequestDto"
          },
          "asyncExport": {
            "$ref": "#/components/schemas/AsyncExportTMByQueryDto"
          }
        }
      },
      "Query": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          }
        }
      },
      "ExportByQueryDto": {
        "required": [
          "exportTargetLangs",
          "queries",
          "queryLangs"
        ],
        "type": "object",
        "properties": {
          "exportTargetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "queries": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "queryLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAtMin": {
            "type": "string",
            "format": "date-time"
          },
          "createdAtMax": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAtMin": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAtMax": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/IdReference"
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/IdReference"
          },
          "filename": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/UidReference"
          },
          "callbackUrl": {
            "type": "string"
          }
        }
      },
      "TransMemoryEditDto": {
        "required": [
          "name",
          "targetLangs"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "targetLangs": {
            "type": "array",
            "description": "New target languages to add. No languages can be removed",
            "items": {
              "type": "string"
            }
          },
          "client": {
            "$ref": "#/components/schemas/IdReference"
          },
          "businessUnit": {
            "$ref": "#/components/schemas/IdReference"
          },
          "domain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "owner": {
            "$ref": "#/components/schemas/IdReference"
          },
          "note": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "CleanedTransMemoriesDto": {
        "required": [
          "uids"
        ],
        "type": "object",
        "properties": {
          "uids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "outputFormat": {
            "type": "string",
            "enum": [
              "TXT",
              "TSV"
            ]
          },
          "preserveRatio": {
            "maximum": 1,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "number"
          },
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TranslationRequestDto": {
        "required": [
          "sourceTexts"
        ],
        "type": "object",
        "properties": {
          "sourceTexts": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TranslationPriceDto": {
        "type": "object",
        "properties": {
          "workflowStep": {
            "$ref": "#/components/schemas/WorkflowStepDto"
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        },
        "description": "connection between language pair and workflow steps, contains price"
      },
      "TranslationPriceListDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "uid": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "billingUnit": {
            "type": "string",
            "enum": [
              "Character",
              "Word",
              "Page",
              "Hour"
            ]
          },
          "priceSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationPriceSetDto"
            }
          }
        },
        "description": "Price list with set of prices for language pairs"
      },
      "TranslationPriceSetDto": {
        "type": "object",
        "properties": {
          "sourceLang": {
            "type": "string"
          },
          "targetLang": {
            "type": "string"
          },
          "minimumPrice": {
            "type": "number",
            "format": "double"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationPriceDto"
            }
          }
        },
        "description": "Language pair for translation price list, owns minimalPrice"
      },
      "TranslationPriceListCreateDto": {
        "required": [
          "currencyCode",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "billingUnit": {
            "type": "string",
            "description": "Default: Word",
            "enum": [
              "Word",
              "Page",
              "Character",
              "Hour"
            ]
          }
        }
      },
      "PageDtoTranslationPriceListDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationPriceListDto"
            }
          }
        }
      },
      "TranslationPriceSetListDto": {
        "type": "object",
        "properties": {
          "priceSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationPriceSetDto"
            }
          }
        }
      },
      "TranslationPriceSetCreateDto": {
        "required": [
          "sourceLanguages",
          "targetLanguages"
        ],
        "type": "object",
        "properties": {
          "sourceLanguages": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetLanguages": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TranslationPriceSetBulkDeleteDto": {
        "type": "object",
        "properties": {
          "sourceLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageDtoTranslationPriceSetDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationPriceSetDto"
            }
          }
        }
      },
      "TranslationPriceSetBulkMinimumPricesDto": {
        "type": "object",
        "properties": {
          "sourceLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "minimumPrice": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "TranslationPriceSetBulkPricesDto": {
        "type": "object",
        "properties": {
          "sourceLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "workflowSteps": {
            "maxItems": 15,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdReference"
            }
          }
        }
      },
      "PageDtoProjectReference": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectReference"
            }
          }
        }
      },
      "UserPasswordEditDto": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "maxLength": 255,
            "minLength": 8,
            "type": "string"
          }
        }
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "role": {
            "type": "string",
            "enum": [
              "SYS_ADMIN",
              "SYS_ADMIN_READ",
              "ADMIN",
              "PROJECT_MANAGER",
              "LINGUIST",
              "GUEST",
              "SUBMITTER"
            ]
          },
          "timezone": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "terminologist": {
            "type": "boolean"
          },
          "sourceLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "active": {
            "type": "boolean"
          },
          "priceList": {
            "$ref": "#/components/schemas/PriceListReference"
          },
          "netRateScheme": {
            "$ref": "#/components/schemas/DiscountSchemeReference"
          }
        }
      },
      "UserStatisticsDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "ipAddress": {
            "type": "string"
          },
          "ipCountry": {
            "type": "string"
          },
          "userAgent": {
            "type": "string"
          }
        },
        "description": "user login statistics"
      },
      "UserStatisticsListDto": {
        "required": [
          "userStatistics"
        ],
        "type": "object",
        "properties": {
          "userStatistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserStatisticsDto"
            }
          }
        },
        "description": "envelope for user statistics"
      },
      "PageDtoUserDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          }
        }
      },
      "PageDtoWorkflowStepReference": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStepReference"
            }
          }
        }
      },
      "PageDtoString": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AssignedJobDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "innerId": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "dateDue": {
            "type": "string",
            "format": "date-time"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ACCEPTED",
              "DECLINED",
              "REJECTED",
              "DELIVERED",
              "EMAILED",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "targetLang": {
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectReference"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/ProjectWorkflowStepReference"
          },
          "importStatus": {
            "$ref": "#/components/schemas/ImportStatusDto"
          },
          "imported": {
            "type": "boolean"
          }
        }
      },
      "PageDtoAssignedJobDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssignedJobDto"
            }
          }
        }
      },
      "LastLoginDto": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserReference"
          },
          "lastLoginDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PageDtoLastLoginDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LastLoginDto"
            }
          }
        }
      },
      "VendorDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "vendorToken": {
            "type": "string"
          },
          "priceList": {
            "$ref": "#/components/schemas/PriceListReference"
          },
          "netRateScheme": {
            "$ref": "#/components/schemas/DiscountSchemeReference"
          },
          "sourceLocales": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetLocales": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientReference"
            }
          },
          "domains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainReference"
            }
          },
          "subDomains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubDomainReference"
            }
          },
          "workflowSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStepReference"
            }
          }
        }
      },
      "CreateVendorDto": {
        "required": [
          "vendorToken"
        ],
        "type": "object",
        "properties": {
          "vendorToken": {
            "type": "string"
          },
          "netRateScheme": {
            "$ref": "#/components/schemas/UidReference"
          },
          "priceList": {
            "$ref": "#/components/schemas/UidReference"
          },
          "sourceLocales": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetLocales": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "domains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "subDomains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "workflowSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          }
        }
      },
      "PageDtoVendorDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorDto"
            }
          }
        }
      },
      "PageDtoWebhookCallDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookCallDto"
            }
          }
        }
      },
      "WebhookCallDto": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "parentUid": {
            "type": "string"
          },
          "webhookSettings": {
            "$ref": "#/components/schemas/UidReference"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          },
          "forced": {
            "type": "boolean"
          },
          "lastForcedAt": {
            "type": "string",
            "format": "date-time"
          },
          "body": {
            "type": "string"
          },
          "triggerEvent": {
            "type": "string",
            "enum": [
              "JOB_STATUS_CHANGED",
              "JOB_CREATED",
              "JOB_DELETED",
              "JOB_ASSIGNED",
              "JOB_DUE_DATE_CHANGED",
              "JOB_UPDATED",
              "JOB_TARGET_UPDATED",
              "JOB_EXPORTED",
              "JOB_UNEXPORTED",
              "PROJECT_CREATED",
              "PROJECT_DELETED",
              "PROJECT_STATUS_CHANGED",
              "PROJECT_DUE_DATE_CHANGED",
              "SHARED_PROJECT_ASSIGNED",
              "PROJECT_METADATA_UPDATED",
              "PRE_TRANSLATION_FINISHED",
              "ANALYSIS_CREATED",
              "CONTINUOUS_JOB_UPDATED",
              "PROJECT_TEMPLATE_CREATED",
              "PROJECT_TEMPLATE_UPDATED",
              "PROJECT_TEMPLATE_DELETED"
            ]
          },
          "retryAttempt": {
            "type": "integer",
            "format": "int64"
          },
          "statusCode": {
            "type": "integer",
            "format": "int64"
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "ReplayRequestDto": {
        "type": "object",
        "properties": {
          "webhookCalls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          }
        }
      },
      "CreateWorkflowStepDto": {
        "required": [
          "abbr",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Name of the lqa workflow step"
          },
          "order": {
            "type": "integer",
            "description": "Order value",
            "format": "int32"
          },
          "lqaEnabled": {
            "type": "boolean",
            "description": "Default: false"
          },
          "abbr": {
            "maxLength": 3,
            "minLength": 1,
            "type": "string",
            "description": "Abbreviation"
          }
        }
      },
      "EditWorkflowStepDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Name of the lqa workflow step"
          },
          "order": {
            "type": "integer",
            "description": "Order value",
            "format": "int32"
          },
          "lqaEnabled": {
            "type": "boolean",
            "description": "Default: false"
          },
          "abbr": {
            "maxLength": 3,
            "minLength": 1,
            "type": "string",
            "description": "Abbreviation"
          }
        }
      },
      "PageDtoWorkflowStepDto": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStepDto"
            }
          }
        }
      },
      "AnalyseLanguagePartV2Dto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLang": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DataDto"
          },
          "discountedData": {
            "$ref": "#/components/schemas/DataDto"
          },
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyseJobReference"
            }
          }
        }
      },
      "AnalyseV2Dto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "PreAnalyse",
              "PostAnalyse",
              "PreAnalyseTarget",
              "Compare",
              "PreAnalyseProvider"
            ]
          },
          "name": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/ProviderReference"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "netRateScheme": {
            "$ref": "#/components/schemas/NetRateSchemeReference"
          },
          "analyseLanguageParts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyseLanguagePartV2Dto"
            }
          }
        }
      },
      "DataDto": {
        "type": "object",
        "properties": {
          "available": {
            "type": "boolean"
          },
          "estimate": {
            "type": "boolean"
          },
          "all": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "repetitions": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "transMemoryMatches": {
            "$ref": "#/components/schemas/MatchCounts101Dto"
          },
          "machineTranslationMatches": {
            "$ref": "#/components/schemas/MatchCountsDto"
          },
          "nonTranslatablesMatches": {
            "$ref": "#/components/schemas/MatchCountsNTDto"
          },
          "internalFuzzyMatches": {
            "$ref": "#/components/schemas/MatchCountsDto"
          }
        }
      },
      "MatchCountsNTDto": {
        "type": "object",
        "properties": {
          "match100": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match95": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match85": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match75": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match50": {
            "$ref": "#/components/schemas/CountsDto"
          },
          "match0": {
            "$ref": "#/components/schemas/CountsDto"
          }
        }
      },
      "AsyncAnalyseListResponseV2Dto": {
        "type": "object",
        "properties": {
          "asyncRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AsyncAnalyseResponseV2Dto"
            }
          }
        }
      },
      "AsyncAnalyseResponseV2Dto": {
        "type": "object",
        "properties": {
          "asyncRequest": {
            "$ref": "#/components/schemas/AsyncRequestV2Dto"
          },
          "analyse": {
            "$ref": "#/components/schemas/ObjectReference"
          }
        }
      },
      "AsyncRequestV2Dto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "action": {
            "type": "string",
            "enum": [
              "PRE_ANALYSE",
              "POST_ANALYSE",
              "COMPARE_ANALYSE",
              "PARENT_ANALYSE",
              "PRE_TRANSLATE",
              "ASYNC_TRANSLATE",
              "IMPORT_JOB",
              "IMPORT_FILE",
              "ALIGN",
              "EXPORT_TMX_BY_QUERY",
              "EXPORT_TMX",
              "IMPORT_TMX",
              "INSERT_INTO_TM",
              "DELETE_TM",
              "CLEAR_TM",
              "QA",
              "QA_V3",
              "UPDATE_CONTINUOUS_JOB",
              "UPDATE_SOURCE",
              "UPDATE_TARGET",
              "EXTRACT_CLEANED_TMS",
              "GLOSSARY_PUT",
              "GLOSSARY_DELETE",
              "CREATE_PROJECT",
              "EXPORT_COMPLETE_FILE"
            ]
          },
          "asyncResponse": {
            "$ref": "#/components/schemas/AsyncResponseV2Dto"
          },
          "parent": {
            "$ref": "#/components/schemas/AsyncRequestV2Dto"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectReference"
          }
        }
      },
      "AsyncResponseV2Dto": {
        "type": "object",
        "properties": {
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "errorCode": {
            "type": "string"
          },
          "errorDesc": {
            "type": "string"
          },
          "errorDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetailDtoV2"
            }
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetailDtoV2"
            }
          }
        }
      },
      "ErrorDetailDtoV2": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code, e.g. NOT_FOUND."
          },
          "args": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            },
            "description": "Related arguments, e.g. number => \"hello world\""
          },
          "message": {
            "type": "string",
            "description": "Optional human-readable message."
          }
        }
      },
      "CreateAnalyseAsyncV2Dto": {
        "required": [
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 50000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "type": {
            "type": "string",
            "description": "default: PreAnalyse",
            "enum": [
              "PreAnalyse",
              "PostAnalyse",
              "Compare"
            ]
          },
          "includeFuzzyRepetitions": {
            "type": "boolean",
            "description": "Default: true"
          },
          "separateFuzzyRepetitions": {
            "type": "boolean",
            "description": "Default: false"
          },
          "includeConfirmedSegments": {
            "type": "boolean",
            "description": "Default: true"
          },
          "includeNumbers": {
            "type": "boolean",
            "description": "Default: true"
          },
          "includeLockedSegments": {
            "type": "boolean",
            "description": "Default: true"
          },
          "countSourceUnits": {
            "type": "boolean",
            "description": "Default: true"
          },
          "includeTransMemory": {
            "type": "boolean",
            "description": "Default: true. Works only for type=PreAnalyse."
          },
          "includeNonTranslatables": {
            "type": "boolean",
            "description": "Default: false. Works only for type=PreAnalyse."
          },
          "includeMachineTranslationMatches": {
            "type": "boolean",
            "description": "Default: false. Works only for type=PreAnalyse."
          },
          "transMemoryPostEditing": {
            "type": "boolean",
            "description": "Default: false. Works only for type=PostAnalyse."
          },
          "nonTranslatablePostEditing": {
            "type": "boolean",
            "description": "Default: false. Works only for type=PostAnalyse."
          },
          "machineTranslatePostEditing": {
            "type": "boolean",
            "description": "Default: false. Works only for type=PostAnalyse."
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "netRateScheme": {
            "$ref": "#/components/schemas/IdReference"
          },
          "compareWorkflowLevel": {
            "maximum": 15,
            "minimum": 1,
            "type": "integer",
            "description": "Required for type=Compare",
            "format": "int32"
          },
          "useProjectAnalysisSettings": {
            "type": "boolean",
            "description": "Default: false. Use default project settings. Will be overwritten with setting sent\n        in the API call."
          },
          "callbackUrl": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/ProviderReference"
          }
        }
      },
      "EditAnalyseV2Dto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/ProviderReference"
          },
          "netRateScheme": {
            "$ref": "#/components/schemas/UidReference"
          }
        }
      },
      "AnalysesV2Dto": {
        "type": "object",
        "properties": {
          "analyses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyseV2Dto"
            }
          }
        }
      },
      "BulkEditAnalyseV2Dto": {
        "required": [
          "analyses"
        ],
        "type": "object",
        "properties": {
          "analyses": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdReference"
            }
          },
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/ProviderReference"
          },
          "netRateScheme": {
            "$ref": "#/components/schemas/UidReference"
          }
        }
      },
      "AsyncFileOpResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "fileName": {
            "type": "string"
          },
          "action": {
            "type": "string",
            "enum": [
              "GUI_UPLOAD",
              "GUI_DOWNLOAD",
              "GUI_REIMPORT",
              "GUI_REIMPORT_TARGET",
              "CJ_UPLOAD",
              "CJ_DOWNLOAD",
              "APC_UPLOAD",
              "APC_DOWNLOAD",
              "API_UPLOAD",
              "API_DOWNLOAD",
              "SUBMITTER_PORTAL_DOWNLOAD"
            ]
          }
        }
      },
      "GetFileRequestParamsDto": {
        "required": [
          "callbackUrl"
        ],
        "type": "object",
        "properties": {
          "sourceLang": {
            "type": "string"
          },
          "targetLang": {
            "type": "string"
          },
          "callbackUrl": {
            "type": "string",
            "example": "{\"callbackUrl\": \"https://www.yourdomain.com/callback_endpoint\"}"
          }
        }
      },
      "Response": {
        "type": "object",
        "properties": {
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            }
          },
          "done": {
            "type": "boolean"
          },
          "cancelled": {
            "type": "boolean"
          }
        }
      },
      "WorkflowChangesDto": {
        "required": [
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          }
        }
      },
      "CreateLqaConversationDto": {
        "required": [
          "references"
        ],
        "type": "object",
        "properties": {
          "lqaDescription": {
            "type": "string"
          },
          "references": {
            "$ref": "#/components/schemas/LQAReferences"
          }
        }
      },
      "EditLqaConversationDto": {
        "required": [
          "lqa"
        ],
        "type": "object",
        "properties": {
          "lqaDescription": {
            "type": "string"
          },
          "lqa": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LQAReference"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "resolved",
              "unresolved"
            ]
          },
          "correlation": {
            "$ref": "#/components/schemas/ReferenceCorrelation"
          }
        }
      },
      "AddLqaCommentResultDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of created comment"
          },
          "conversation": {
            "$ref": "#/components/schemas/LQAConversationDto"
          }
        }
      },
      "AddPlainCommentResultDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of created comment"
          },
          "conversation": {
            "$ref": "#/components/schemas/PlainConversationDto"
          }
        }
      },
      "ProviderListDtoV2": {
        "type": "object",
        "properties": {
          "providers": {
            "$ref": "#/components/schemas/Providers"
          }
        }
      },
      "AbstractProjectDtoV2": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "internalId": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "domain": {
            "$ref": "#/components/schemas/DomainReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/SubDomainReference"
          },
          "owner": {
            "$ref": "#/components/schemas/UserReference"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReferenceFileReference"
            }
          },
          "mtSettingsPerLanguageList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MTSettingsPerLanguageReference"
            }
          },
          "userRole": {
            "type": "string",
            "description": "Response differs based on user's role",
            "readOnly": true
          }
        },
        "description": "Base projectDto",
        "discriminator": {
          "propertyName": "userRole"
        }
      },
      "Admin, Project Manager (v2)": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractProjectDtoV2"
          },
          {
            "type": "object",
            "properties": {
              "shared": {
                "type": "boolean",
                "description": "Default: false"
              },
              "progress": {
                "$ref": "#/components/schemas/ProgressDtoV2"
              },
              "client": {
                "$ref": "#/components/schemas/ClientReference"
              },
              "costCenter": {
                "$ref": "#/components/schemas/CostCenterReference"
              },
              "businessUnit": {
                "$ref": "#/components/schemas/BusinessUnitReference"
              },
              "dateDue": {
                "type": "string",
                "format": "date-time"
              },
              "status": {
                "type": "string",
                "enum": [
                  "NEW",
                  "ASSIGNED",
                  "COMPLETED",
                  "ACCEPTED_BY_VENDOR",
                  "DECLINED_BY_VENDOR",
                  "COMPLETED_BY_VENDOR",
                  "CANCELLED"
                ]
              },
              "purchaseOrder": {
                "type": "string"
              },
              "isPublishedOnJobBoard": {
                "type": "boolean",
                "description": "Default: false"
              },
              "note": {
                "type": "string"
              },
              "createdBy": {
                "$ref": "#/components/schemas/UserReference"
              },
              "qualityAssuranceSettings": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "workflowSteps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectWorkflowStepDtoV2"
                }
              },
              "analyseSettings": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "accessSettings": {
                "$ref": "#/components/schemas/ObjectReference"
              },
              "financialSettings": {
                "$ref": "#/components/schemas/ObjectReference"
              }
            }
          }
        ]
      },
      "Linguist (v2)": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractProjectDtoV2"
          },
          {
            "type": "object"
          }
        ]
      },
      "ProgressDtoV2": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "finishedCount": {
            "type": "integer",
            "format": "int32"
          },
          "overdueCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LqaProfilesForWsV2Dto": {
        "type": "object",
        "properties": {
          "workflowStep": {
            "$ref": "#/components/schemas/IdReference"
          },
          "lqaProfile": {
            "$ref": "#/components/schemas/UidReference"
          }
        }
      },
      "CreateProjectFromTemplateV2Dto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "workflowSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdReference"
            }
          },
          "dateDue": {
            "type": "string",
            "format": "date-time"
          },
          "note": {
            "type": "string"
          },
          "client": {
            "$ref": "#/components/schemas/IdReference"
          },
          "businessUnit": {
            "$ref": "#/components/schemas/IdReference"
          },
          "domain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "costCenter": {
            "$ref": "#/components/schemas/IdReference"
          }
        }
      },
      "AsyncRequestWrapperV2Dto": {
        "type": "object",
        "properties": {
          "asyncRequest": {
            "$ref": "#/components/schemas/AsyncRequestV2Dto"
          }
        }
      },
      "CreateProjectFromTemplateAsyncV2Dto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "workflowSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdReference"
            }
          },
          "dateDue": {
            "type": "string",
            "format": "date-time"
          },
          "note": {
            "type": "string"
          },
          "client": {
            "$ref": "#/components/schemas/IdReference"
          },
          "businessUnit": {
            "$ref": "#/components/schemas/IdReference"
          },
          "domain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "costCenter": {
            "$ref": "#/components/schemas/IdReference"
          },
          "callbackUrl": {
            "type": "string"
          }
        }
      },
      "ProjectWorkflowStepListDtoV2": {
        "type": "object",
        "properties": {
          "projectWorkflowSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectWorkflowStepDtoV2"
            }
          }
        }
      },
      "CustomFieldInstanceApiDto": {
        "type": "object",
        "properties": {
          "customField": {
            "$ref": "#/components/schemas/UidReference"
          },
          "selectedOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "value": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "EditProjectV2Dto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ASSIGNED",
              "COMPLETED",
              "ACCEPTED_BY_VENDOR",
              "DECLINED_BY_VENDOR",
              "COMPLETED_BY_VENDOR",
              "CANCELLED"
            ]
          },
          "client": {
            "$ref": "#/components/schemas/IdReference"
          },
          "businessUnit": {
            "$ref": "#/components/schemas/IdReference"
          },
          "domain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "owner": {
            "$ref": "#/components/schemas/IdReference"
          },
          "purchaseOrder": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "dateDue": {
            "type": "string",
            "format": "date-time"
          },
          "note": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string"
          },
          "fileHandover": {
            "type": "boolean",
            "description": "Default: false"
          },
          "lqaProfiles": {
            "type": "array",
            "description": "Lqa profiles that will be added to workflow steps",
            "items": {
              "$ref": "#/components/schemas/LqaProfilesForWsV2Dto"
            }
          },
          "archived": {
            "type": "boolean",
            "description": "Default: false"
          },
          "customFields": {
            "type": "array",
            "description": "Custom fields for project",
            "items": {
              "$ref": "#/components/schemas/CustomFieldInstanceApiDto"
            }
          }
        }
      },
      "EnabledCheckContextDtoV2": {
        "type": "object",
        "properties": {
          "moraviaProfileId": {
            "type": "string"
          }
        }
      },
      "EnabledCheckDtoV2": {
        "type": "object",
        "properties": {
          "checkerType": {
            "type": "string"
          },
          "context": {
            "$ref": "#/components/schemas/EnabledCheckContextDtoV2"
          }
        }
      },
      "QualityAssuranceChecksDtoV2": {
        "type": "object",
        "properties": {
          "forbiddenStrings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabledChecks": {
            "type": "array",
            "description": "enabledChecks",
            "example": "\n   [\n      {\n         \"checkerType\":\"EmptyTranslation\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"TrailingPunctuation\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"Formatting\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"JoinTags\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"MissingNumbers\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"MultipleSpaces\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"NonConformingTerm\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"NotConfirmed\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"TranslationLength\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\": \"AbsoluteLength\",\n         \"ignorable\": false\n      },\n      {\n         \"checkerType\": \"RelativeLength\",\n         \"ignorable\": false\n      },\n      {\n         \"checkerType\":\"EmptyPairTags\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"InconsistentTranslationTargetSource\",\n         \"ignorable\":true\n      },\n      {\n         \"checkerType\":\"InconsistentTranslationSourceTarget\",\n         \"ignorable\":true\n      },\n      {\n         \"checkerType\":\"ForbiddenString\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"SpellCheck\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"RepeatedWords\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"InconsistentTagContent\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"EmptyTagContent\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"Malformed\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"ForbiddenTerm\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"NewerAtLowerLevel\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"LeadingAndTrailingSpaces\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"TargetSourceIdentical\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"SourceOrTargetRegexp\"\n      },\n      {\n         \"checkerType\":\"UnmodifiedFuzzyTranslationTM\",\n         \"ignorable\":true\n      },\n      {\n         \"checkerType\":\"UnmodifiedFuzzyTranslationMTNT\",\n         \"ignorable\":true\n      },\n      {\n         \"checkerType\":\"Moravia\",\n         \"ignorable\":false,\n         \"context\": {\"moraviaProfileId\": \"MoraviaProfileIdValue\"}\n      },\n      {\n         \"checkerType\":\"ExtraNumbers\",\n         \"ignorable\":true\n      },\n      {\n         \"checkerType\":\"UnresolvedConversation\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"NestedTags\",\n         \"ignorable\":false\n      },\n      {\n         \"checkerType\":\"FuzzyInconsistency\",\n         \"ignorable\":true\n      }\n   ]\n",
            "items": {
              "$ref": "#/components/schemas/EnabledCheckDtoV2"
            }
          },
          "excludeLockedSegments": {
            "type": "boolean"
          },
          "userCanSetInstantQA": {
            "type": "boolean"
          },
          "strictJobStatus": {
            "type": "boolean"
          },
          "regexpRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegexpCheckRuleDtoV2"
            }
          }
        }
      },
      "WebEditorLinkDtoV2": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorDetailDtoV2"
            }
          }
        }
      },
      "CreateWebEditorLinkDtoV2": {
        "required": [
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 2147483647,
            "minItems": 1,
            "type": "array",
            "description": "Maximum supported number of jobs is 290",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          }
        }
      },
      "PseudoTranslateActionDtoV2": {
        "type": "object",
        "properties": {
          "replacement": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "suffix": {
            "type": "string"
          },
          "length": {
            "type": "number",
            "format": "double"
          },
          "keyHashPrefixLen": {
            "maximum": 18,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "substitution": {
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubstituteDtoV2"
            }
          }
        }
      },
      "PseudoTranslateWrapperDto": {
        "required": [
          "jobParts",
          "pseudoTranslate"
        ],
        "type": "object",
        "properties": {
          "jobParts": {
            "$ref": "#/components/schemas/JobPartReadyReferences"
          },
          "pseudoTranslate": {
            "$ref": "#/components/schemas/PseudoTranslateActionDtoV2"
          }
        }
      },
      "SubstituteDtoV2": {
        "required": [
          "source",
          "target"
        ],
        "type": "object",
        "properties": {
          "source": {
            "maxLength": 1,
            "minLength": 1,
            "type": "string"
          },
          "target": {
            "maxLength": 1,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "JobMachineTranslationSettingsDto": {
        "type": "object",
        "properties": {
          "useMachineTranslation": {
            "type": "boolean",
            "description": "Pre-translate from machine translation. Default: true"
          },
          "lock100PercentMatches": {
            "type": "boolean",
            "description": "Lock section: 100% machine translation matches. Default: false"
          },
          "confirm100PercentMatches": {
            "type": "boolean",
            "description": "Set segment status to confirmed for: 100% translation machine matches. Default: false"
          },
          "useAltTransOnly": {
            "type": "boolean",
            "description": "Do not put machine translations to target and use alt-trans fields (alt-trans in mxlf).\nDefault: false"
          }
        },
        "description": "Machine translation related settings"
      },
      "JobNonTranslatableSettingsDto": {
        "type": "object",
        "properties": {
          "preTranslateNonTranslatables": {
            "type": "boolean",
            "description": "Pre-translate non-translatables. Default: true"
          },
          "confirm100PercentMatches": {
            "type": "boolean",
            "description": "Set segment status to confirmed for: 100% non-translatable matches. Default: false"
          },
          "lock100PercentMatches": {
            "type": "boolean",
            "description": "Lock section: 100% non-translatable matches. Default: false"
          }
        },
        "description": "Non-translatables related settings"
      },
      "JobTranslationMemorySettingsDto": {
        "type": "object",
        "properties": {
          "useTranslationMemory": {
            "type": "boolean",
            "description": "Pre-translate from translation memory. Default: true"
          },
          "translationMemoryThreshold": {
            "maximum": 1.01,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "Pre-translation threshold percent. Default: 0.7",
            "format": "double"
          },
          "confirm100PercentMatches": {
            "type": "boolean",
            "description": "Set segment status to confirmed for: 100% translation memory matches. Default: false"
          },
          "confirm101PercentMatches": {
            "type": "boolean",
            "description": "Set segment status to confirmed for: 101% translation memory matches. Default: false"
          },
          "lock100PercentMatches": {
            "type": "boolean",
            "description": "Lock section: 100% translation memory matches. Default: false"
          },
          "lock101PercentMatches": {
            "type": "boolean",
            "description": "Lock section: 101% translation memory matches. Default: false"
          }
        },
        "description": "Translation memory related settings"
      },
      "PreTranslateJobSettingsDto": {
        "type": "object",
        "properties": {
          "autoPropagateRepetitions": {
            "type": "boolean",
            "description": "Propagate repetitions. Default: false"
          },
          "confirmRepetitions": {
            "type": "boolean",
            "description": "Set segment status to confirmed for: Repetitions. Default: false"
          },
          "setJobStatusCompleted": {
            "type": "boolean",
            "description": "Pre-translate & set job to completed: Set job to completed once pre-translated. Default: false"
          },
          "setJobStatusCompletedWhenConfirmed": {
            "type": "boolean",
            "description": "Pre-translate & set job to completed when all segments confirmed:\nSet job to completed once pre-translated and all segments are confirmed. Default: false"
          },
          "setProjectStatusCompleted": {
            "type": "boolean",
            "description": "Pre-translate & set job to completed: Set project to completed once all jobs pre-translated.\n        Default: false"
          },
          "overwriteExistingTranslations": {
            "type": "boolean",
            "description": "Overwrite existing translations in target segments. Default: false"
          },
          "translationMemorySettings": {
            "$ref": "#/components/schemas/JobTranslationMemorySettingsDto"
          },
          "machineTranslationSettings": {
            "$ref": "#/components/schemas/JobMachineTranslationSettingsDto"
          },
          "nonTranslatableSettings": {
            "$ref": "#/components/schemas/JobNonTranslatableSettingsDto"
          }
        },
        "description": "Pre-translate settings"
      },
      "PreTranslateJobsV2Dto": {
        "required": [
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "description": "Jobs to be pre-translated",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "segmentFilters": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "LOCKED",
                "NOT_LOCKED"
              ]
            }
          },
          "useProjectPreTranslateSettings": {
            "type": "boolean",
            "description": "If pre-translate settings from project should be used.\nIf true, preTranslateSettings values are ignored. Default: false"
          },
          "callbackUrl": {
            "type": "string"
          },
          "preTranslateSettings": {
            "$ref": "#/components/schemas/PreTranslateJobSettingsDto"
          }
        }
      },
      "JobPartReadyDeleteTranslationDto": {
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "deleteSettings": {
            "$ref": "#/components/schemas/TranslationSegmentsReferenceV2"
          },
          "forAllJobs": {
            "type": "boolean",
            "description": "Set true if you want to delete translations for all jobs from project from specific workflow step.\n               Default: false"
          },
          "workflowLevel": {
            "type": "integer",
            "description": "Specifies workflow level for all jobs",
            "format": "int32"
          },
          "filter": {
            "$ref": "#/components/schemas/JobPartReadyDeleteTranslationFilterDto"
          },
          "getParts": {
            "type": "object",
            "properties": {}
          }
        }
      },
      "JobPartReadyDeleteTranslationFilterDto": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string"
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetLang": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/ProviderReference"
          },
          "owner": {
            "$ref": "#/components/schemas/UidReference"
          },
          "dateDue": {
            "type": "string",
            "format": "date-time"
          },
          "dueInHours": {
            "type": "integer",
            "format": "int32"
          },
          "overdue": {
            "type": "boolean"
          }
        }
      },
      "TranslationSegmentsReferenceV2": {
        "type": "object",
        "properties": {
          "confirmed": {
            "type": "boolean",
            "description": "Remove confirmed (true), unconfirmed (false) or both segments (null). Default: null"
          },
          "locked": {
            "type": "boolean",
            "description": "Remove locked (true), unlocked (false) or both segments (null). Default: false"
          }
        }
      },
      "UpdateIgnoredJobPartSegment": {
        "required": [
          "jobPartUid",
          "segments"
        ],
        "type": "object",
        "properties": {
          "jobPartUid": {
            "type": "string"
          },
          "segments": {
            "maxItems": 500,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateIgnoredSegment"
            }
          }
        }
      },
      "TransMemoryDtoV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "internalId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "client": {
            "$ref": "#/components/schemas/ClientReference"
          },
          "businessUnit": {
            "$ref": "#/components/schemas/BusinessUnitReference"
          },
          "domain": {
            "$ref": "#/components/schemas/DomainReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/SubDomainReference"
          },
          "note": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          }
        }
      },
      "TransMemoryReferenceDtoV2": {
        "required": [
          "uid"
        ],
        "type": "object",
        "properties": {
          "internalId": {
            "type": "integer",
            "format": "int32"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProjectTemplateTransMemoryListV2Dto": {
        "type": "object",
        "properties": {
          "transMemories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTemplateTransMemoryV2Dto"
            }
          }
        }
      },
      "ProjectTemplateTransMemoryV2Dto": {
        "type": "object",
        "properties": {
          "targetLocale": {
            "type": "string"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/WorkflowStepReferenceV2"
          },
          "readMode": {
            "type": "boolean"
          },
          "writeMode": {
            "type": "boolean"
          },
          "transMemory": {
            "$ref": "#/components/schemas/TransMemoryDtoV2"
          },
          "penalty": {
            "type": "number",
            "format": "double"
          },
          "applyPenaltyTo101Only": {
            "type": "boolean"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SetContextPTTransMemoriesV2Dto": {
        "required": [
          "transMemories"
        ],
        "type": "object",
        "properties": {
          "transMemories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetProjectTemplateTransMemoryV2Dto"
            }
          },
          "targetLang": {
            "type": "string",
            "description": "Set translation memory only for the specific project target language"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/UidReference"
          },
          "orderEnabled": {
            "type": "boolean",
            "description": "Default: false"
          }
        }
      },
      "SetProjectTemplateTransMemoriesV2Dto": {
        "required": [
          "dataPerContext"
        ],
        "type": "object",
        "properties": {
          "dataPerContext": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetContextPTTransMemoriesV2Dto"
            }
          }
        }
      },
      "SetProjectTemplateTransMemoryV2Dto": {
        "required": [
          "transMemory"
        ],
        "type": "object",
        "properties": {
          "transMemory": {
            "$ref": "#/components/schemas/UidReference"
          },
          "readMode": {
            "type": "boolean",
            "description": "Default: false"
          },
          "writeMode": {
            "type": "boolean",
            "description": "Can be set only for Translation Memory with read == true.<br/>\n        Max 2 write TMs allowed per project.<br/>\n        Default: false"
          },
          "penalty": {
            "maximum": 100,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number",
            "format": "double"
          },
          "applyPenaltyTo101Only": {
            "type": "boolean",
            "description": "Can be set only for penalty == 1<br/>Default: false"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AdditionalWorkflowStepV2Dto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "QuoteV2Dto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "APPROVED",
              "DECLINED",
              "DRAFT",
              "FOR_APPROVAL",
              "NEW"
            ]
          },
          "currency": {
            "type": "string"
          },
          "billingUnit": {
            "type": "string",
            "enum": [
              "Character",
              "Word",
              "Page",
              "Hour"
            ]
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "totalPrice": {
            "type": "number",
            "format": "double"
          },
          "netRateScheme": {
            "$ref": "#/components/schemas/NetRateSchemeReference"
          },
          "priceList": {
            "$ref": "#/components/schemas/PriceListReference"
          },
          "workflowStepList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkflowStepReference"
            }
          },
          "provider": {
            "$ref": "#/components/schemas/ProviderReference"
          },
          "customerEmail": {
            "type": "string"
          },
          "quoteType": {
            "type": "string",
            "enum": [
              "BUYER",
              "PROVIDER"
            ]
          },
          "editable": {
            "type": "boolean"
          },
          "outdated": {
            "type": "boolean"
          },
          "additionalSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalWorkflowStepV2Dto"
            }
          }
        }
      },
      "QuoteCreateV2Dto": {
        "required": [
          "analyse",
          "name",
          "priceList",
          "project"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/UidReference"
          },
          "analyse": {
            "$ref": "#/components/schemas/IdReference"
          },
          "priceList": {
            "$ref": "#/components/schemas/IdReference"
          },
          "netRateScheme": {
            "$ref": "#/components/schemas/IdReference"
          },
          "provider": {
            "$ref": "#/components/schemas/ProviderReference"
          },
          "workflowSettings": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuoteWorkflowSettingDto"
            }
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuoteUnitsDto"
            }
          },
          "additionalSteps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "QuoteUnitsDto": {
        "required": [
          "analyseLanguagePart"
        ],
        "type": "object",
        "properties": {
          "analyseLanguagePart": {
            "$ref": "#/components/schemas/IdReference"
          },
          "value": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        }
      },
      "QuoteWorkflowSettingDto": {
        "required": [
          "workflowStep"
        ],
        "type": "object",
        "properties": {
          "workflowStep": {
            "$ref": "#/components/schemas/IdReference"
          },
          "units": {
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuoteUnitsDto"
            }
          }
        }
      },
      "AsyncExportTMDto": {
        "type": "object",
        "properties": {
          "transMemory": {
            "$ref": "#/components/schemas/ObjectReference"
          },
          "exportTargetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AsyncExportTMResponseDto": {
        "type": "object",
        "properties": {
          "asyncRequest": {
            "$ref": "#/components/schemas/AsyncRequestV2Dto"
          },
          "asyncExport": {
            "$ref": "#/components/schemas/AsyncExportTMDto"
          }
        }
      },
      "ExportTMDto": {
        "type": "object",
        "properties": {
          "exportTargetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "callbackUrl": {
            "type": "string"
          }
        }
      },
      "WebHookDtoV2": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "JOB_STATUS_CHANGED",
                "JOB_CREATED",
                "JOB_DELETED",
                "JOB_ASSIGNED",
                "JOB_DUE_DATE_CHANGED",
                "JOB_UPDATED",
                "JOB_TARGET_UPDATED",
                "JOB_EXPORTED",
                "JOB_UNEXPORTED",
                "PROJECT_CREATED",
                "PROJECT_DELETED",
                "PROJECT_STATUS_CHANGED",
                "PROJECT_DUE_DATE_CHANGED",
                "SHARED_PROJECT_ASSIGNED",
                "PROJECT_METADATA_UPDATED",
                "PRE_TRANSLATION_FINISHED",
                "ANALYSIS_CREATED",
                "CONTINUOUS_JOB_UPDATED",
                "PROJECT_TEMPLATE_CREATED",
                "PROJECT_TEMPLATE_UPDATED",
                "PROJECT_TEMPLATE_DELETED"
              ]
            }
          },
          "secretToken": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "hidden": {
            "type": "boolean",
            "description": "Default: false"
          },
          "status": {
            "type": "string",
            "enum": [
              "ENABLED",
              "DISABLED"
            ]
          },
          "failedAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "$ref": "#/components/schemas/UserReference"
          }
        }
      },
      "CreateWebHookDto": {
        "required": [
          "events",
          "url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "JOB_STATUS_CHANGED",
                "JOB_CREATED",
                "JOB_DELETED",
                "JOB_ASSIGNED",
                "JOB_DUE_DATE_CHANGED",
                "JOB_UPDATED",
                "JOB_TARGET_UPDATED",
                "JOB_EXPORTED",
                "JOB_UNEXPORTED",
                "PROJECT_CREATED",
                "PROJECT_DELETED",
                "PROJECT_STATUS_CHANGED",
                "PROJECT_DUE_DATE_CHANGED",
                "SHARED_PROJECT_ASSIGNED",
                "PROJECT_METADATA_UPDATED",
                "PRE_TRANSLATION_FINISHED",
                "ANALYSIS_CREATED",
                "CONTINUOUS_JOB_UPDATED",
                "PROJECT_TEMPLATE_CREATED",
                "PROJECT_TEMPLATE_UPDATED",
                "PROJECT_TEMPLATE_DELETED"
              ]
            }
          },
          "secretToken": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "hidden": {
            "type": "boolean",
            "description": "Default: false"
          },
          "status": {
            "type": "string",
            "description": "Default: ENABLED",
            "enum": [
              "ENABLED",
              "DISABLED"
            ]
          }
        }
      },
      "WebhookPreviewDto": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string"
          },
          "preview": {
            "type": "string"
          }
        }
      },
      "WebhookPreviewsDto": {
        "type": "object",
        "properties": {
          "previews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookPreviewDto"
            }
          }
        }
      },
      "PageDtoWebHookDtoV2": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebHookDtoV2"
            }
          }
        }
      },
      "ConceptDtov2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "definition": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "subDomains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "url": {
            "type": "string"
          },
          "note": {
            "type": "string"
          }
        }
      },
      "SearchTbResponseDto": {
        "type": "object",
        "properties": {
          "termBase": {
            "$ref": "#/components/schemas/TermBaseReference"
          },
          "concept": {
            "$ref": "#/components/schemas/ConceptDtov2"
          },
          "sourceTerm": {
            "$ref": "#/components/schemas/TermV2Dto"
          },
          "translationTerms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TermV2Dto"
            }
          }
        }
      },
      "SearchTbResponseListDto": {
        "type": "object",
        "properties": {
          "searchResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchTbResponseDto"
            }
          }
        }
      },
      "TermBaseReference": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          }
        }
      },
      "TermV2Dto": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "rtl": {
            "type": "boolean"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "caseSensitive": {
            "type": "boolean"
          },
          "exactMatch": {
            "type": "boolean"
          },
          "forbidden": {
            "type": "boolean"
          },
          "preferred": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "New",
              "Approved"
            ]
          },
          "conceptId": {
            "type": "string"
          },
          "usage": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "writable": {
            "type": "boolean"
          },
          "shortTranslation": {
            "type": "string"
          },
          "termType": {
            "type": "string"
          },
          "partOfSpeech": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "number": {
            "type": "string"
          }
        }
      },
      "SearchTbByJobRequestDto": {
        "required": [
          "query"
        ],
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "description": "Default: 15",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "description": "Default: 0",
            "format": "int32"
          },
          "reverse": {
            "type": "boolean",
            "description": "Default: false"
          }
        }
      },
      "SearchInTextResponse2Dto": {
        "type": "object",
        "properties": {
          "termBase": {
            "$ref": "#/components/schemas/TermBaseReference"
          },
          "sourceTerm": {
            "$ref": "#/components/schemas/TermV2Dto"
          },
          "concept": {
            "$ref": "#/components/schemas/ConceptDtov2"
          },
          "translationTerms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TermV2Dto"
            }
          },
          "subTerm": {
            "type": "boolean"
          },
          "matches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Match"
            }
          }
        }
      },
      "SearchInTextResponseList2Dto": {
        "type": "object",
        "properties": {
          "searchResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchInTextResponse2Dto"
            }
          }
        }
      },
      "SearchTbInTextByJobRequestDto": {
        "required": [
          "text"
        ],
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "reverse": {
            "type": "boolean",
            "description": "Default: false"
          },
          "zeroLengthSeparator": {
            "type": "string"
          }
        }
      },
      "AnalyseLanguagePartV3Dto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLang": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/DataDto"
          },
          "discountedData": {
            "$ref": "#/components/schemas/DataDto"
          },
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyseJobReference"
            }
          },
          "transMemories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransMemoryReferenceDtoV2"
            }
          }
        }
      },
      "AnalyseV3Dto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "innerId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "enum": [
              "PreAnalyse",
              "PostAnalyse",
              "PreAnalyseTarget",
              "Compare",
              "PreAnalyseProvider"
            ]
          },
          "name": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/ProviderReference"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "netRateScheme": {
            "$ref": "#/components/schemas/NetRateSchemeReference"
          },
          "canChangeNetRateScheme": {
            "type": "boolean"
          },
          "analyseLanguageParts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyseLanguagePartV3Dto"
            }
          },
          "settings": {
            "$ref": "#/components/schemas/AbstractAnalyseSettingsDto"
          },
          "outdated": {
            "type": "boolean"
          },
          "importStatus": {
            "$ref": "#/components/schemas/ImportStatusDto"
          },
          "pureWarnings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "project": {
            "$ref": "#/components/schemas/ProjectReference"
          }
        }
      },
      "LoginResponseV3Dto": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserReference"
          },
          "token": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          },
          "lastInvalidateAllSessionsPerformed": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LoginV3Dto": {
        "required": [
          "password",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userUid": {
            "type": "string",
            "description": "When not filled, default user of identity will be logged in"
          },
          "userName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "description": "Required only for 2-factor authentication"
          }
        }
      },
      "LoginToSessionResponseV3Dto": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserReference"
          },
          "cookie": {
            "type": "string"
          },
          "csrfToken": {
            "type": "string"
          }
        }
      },
      "LoginToSessionV3Dto": {
        "required": [
          "password",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userUid": {
            "type": "string",
            "description": "When not filled, default user of identity will be logged in"
          },
          "userName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "rememberMe": {
            "type": "boolean"
          },
          "twoFactorCode": {
            "type": "integer",
            "format": "int32"
          },
          "captchaCode": {
            "type": "string"
          }
        }
      },
      "LoginOtherV3Dto": {
        "required": [
          "userName"
        ],
        "type": "object",
        "properties": {
          "userUid": {
            "type": "string",
            "description": "When not filled, default user of identity will be logged in"
          },
          "userName": {
            "type": "string"
          }
        }
      },
      "ErrorDetailDtoV3": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code, e.g. NOT_FOUND."
          },
          "args": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            },
            "description": "Related arguments, e.g. number => \"hello world\""
          },
          "message": {
            "type": "string",
            "description": "Optional human-readable message."
          }
        }
      },
      "JobPartPatchResultDto": {
        "type": "object",
        "properties": {
          "updated": {
            "type": "integer",
            "description": "Number of successfully updated job parts",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "description": "Errors and their counts encountered during the update",
            "items": {
              "$ref": "#/components/schemas/ErrorDetailDtoV3"
            }
          }
        }
      },
      "JobPartPatchBatchDto": {
        "required": [
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ACCEPTED",
              "DECLINED",
              "REJECTED",
              "DELIVERED",
              "EMAILED",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "dateDue": {
            "type": "string",
            "format": "date-time"
          },
          "clearDateDue": {
            "type": "boolean"
          },
          "providers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProviderReference"
            }
          }
        }
      },
      "SearchResponseListTmDtoV3": {
        "type": "object",
        "properties": {
          "searchResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchTMResponseDtoV3"
            }
          }
        }
      },
      "SearchTMClientDtoV3": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SearchTMDomainDtoV3": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SearchTMProjectDtoV3": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SearchTMResponseDtoV3": {
        "type": "object",
        "properties": {
          "segmentId": {
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/SearchTMSegmentDtoV3"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchTMSegmentDtoV3"
            }
          },
          "transMemory": {
            "$ref": "#/components/schemas/SearchTMTransMemoryDtoV3"
          },
          "grossScore": {
            "type": "number",
            "format": "double"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "subSegment": {
            "type": "boolean"
          }
        }
      },
      "SearchTMSegmentDtoV3": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "rtl": {
            "type": "boolean"
          },
          "modifiedAt": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "filename": {
            "type": "string"
          },
          "project": {
            "$ref": "#/components/schemas/SearchTMProjectDtoV3"
          },
          "client": {
            "$ref": "#/components/schemas/SearchTMClientDtoV3"
          },
          "domain": {
            "$ref": "#/components/schemas/SearchTMDomainDtoV3"
          },
          "subDomain": {
            "$ref": "#/components/schemas/SearchTMSubDomainDtoV3"
          },
          "tagMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagMetadata"
            }
          },
          "previousSegment": {
            "type": "string"
          },
          "nextSegment": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "targetNote": {
            "type": "string"
          }
        }
      },
      "SearchTMSubDomainDtoV3": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SearchTMTransMemoryDtoV3": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "reverse": {
            "type": "boolean"
          }
        }
      },
      "SearchTMByJobRequestDtoV3": {
        "required": [
          "query"
        ],
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "reverse": {
            "type": "boolean",
            "description": "Default: false"
          },
          "scoreThreshold": {
            "maximum": 1.01,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number",
            "description": "Default: 0.0",
            "format": "double"
          },
          "maxResults": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Default: 15",
            "format": "int32"
          }
        }
      },
      "WildCardSearchByJobRequestDtoV3": {
        "required": [
          "query"
        ],
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "reverse": {
            "type": "boolean",
            "description": "Default: false"
          },
          "count": {
            "maximum": 50,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PreTranslateSettingsV3Dto": {
        "type": "object",
        "properties": {
          "preTranslateOnJobCreation": {
            "type": "boolean",
            "description": "Pre-translate & set job to completed: Pre-translate on job creation. Default: false"
          },
          "setJobStatusCompleted": {
            "type": "boolean",
            "description": "Pre-translate & set job to completed: Set job to completed once pre-translated. Default: false"
          },
          "setJobStatusCompletedWhenConfirmed": {
            "type": "boolean",
            "description": "Pre-translate & set job to completed when all segments confirmed:\nSet job to completed once pre-translated and all segments are confirmed. Default: false"
          },
          "setProjectStatusCompleted": {
            "type": "boolean",
            "description": "Pre-translate & set job to completed: Set project to completed once all jobs pre-translated.\n        Default: false"
          },
          "overwriteExistingTranslations": {
            "type": "boolean",
            "description": "Overwrite existing translations in target segments. Default: false"
          },
          "translationMemorySettings": {
            "$ref": "#/components/schemas/TranslationMemorySettingsDto"
          },
          "machineTranslationSettings": {
            "$ref": "#/components/schemas/MachineTranslationSettingsDto"
          },
          "nonTranslatableSettings": {
            "$ref": "#/components/schemas/NonTranslatableSettingsDto"
          },
          "repetitionsSettings": {
            "$ref": "#/components/schemas/RepetitionsSettingsDto"
          }
        },
        "description": "Pre-translate settings"
      },
      "MetadataOptionReference": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "MetadataReference": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "fieldName": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataOptionReference"
            }
          }
        }
      },
      "ProgressReference": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "finishedCount": {
            "type": "integer",
            "format": "int32"
          },
          "overdueCount": {
            "type": "integer",
            "format": "int32"
          },
          "finishedRatio": {
            "type": "number",
            "format": "double"
          },
          "overdueRatio": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "VendorUserReference": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "vendorUid": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReference"
          }
        }
      },
      "AnalyseLanguagePartReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLang": {
            "type": "string"
          },
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyseJobReference"
            }
          }
        }
      },
      "AnalyseReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "innerId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "PreAnalyse",
              "PostAnalyse",
              "PreAnalyseTarget",
              "Compare",
              "PreAnalyseProvider"
            ]
          },
          "name": {
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/ProviderReference"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "netRateScheme": {
            "$ref": "#/components/schemas/NetRateSchemeReference"
          },
          "analyseLanguageParts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyseLanguagePartReference"
            }
          },
          "outdated": {
            "type": "boolean"
          },
          "importStatus": {
            "$ref": "#/components/schemas/ImportStatusDto"
          },
          "pureWarnings": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageDtoAnalyseReference": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnalyseReference"
            }
          }
        }
      },
      "CreateProjectV3Dto": {
        "required": [
          "name",
          "sourceLang",
          "targetLangs"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "client": {
            "$ref": "#/components/schemas/IdReference"
          },
          "businessUnit": {
            "$ref": "#/components/schemas/IdReference"
          },
          "domain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/IdReference"
          },
          "costCenter": {
            "$ref": "#/components/schemas/IdReference"
          },
          "purchaseOrder": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "workflowSteps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdReference"
            }
          },
          "dateDue": {
            "type": "string",
            "format": "date-time"
          },
          "note": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string"
          },
          "lqaProfiles": {
            "type": "array",
            "description": "Lqa profiles that will be added to workflow steps",
            "items": {
              "$ref": "#/components/schemas/LqaProfilesForWsV2Dto"
            }
          },
          "customFields": {
            "type": "array",
            "description": "Custom fields for project",
            "items": {
              "$ref": "#/components/schemas/CustomFieldInstanceApiDto"
            }
          },
          "fileHandover": {
            "type": "boolean",
            "description": "Default: false"
          }
        }
      },
      "AbsoluteTranslationLengthWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "limit": {
                "type": "string"
              }
            }
          }
        ]
      },
      "EmptyPairTagsWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object"
          }
        ]
      },
      "EmptyTagContentWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object"
          }
        ]
      },
      "EmptyTranslationWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object"
          }
        ]
      },
      "ExtraNumbersV3WarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "number": {
                "type": "string"
              },
              "positions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Position"
                }
              }
            }
          }
        ]
      },
      "ExtraNumbersWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "extraNumbers": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "ForbiddenStringWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "forbiddenString": {
                "type": "string"
              },
              "positions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Position"
                }
              }
            }
          }
        ]
      },
      "ForbiddenTermWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "term": {
                "type": "string"
              },
              "positions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Position"
                }
              },
              "sourceTerms": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Term"
                }
              }
            }
          }
        ]
      },
      "FormattingWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object"
          }
        ]
      },
      "FuzzyInconsistencyWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "segmentIds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "InconsistentTagContentWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object"
          }
        ]
      },
      "InconsistentTranslationWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "segmentId": {
                "type": "string"
              }
            }
          }
        ]
      },
      "JoinTagsWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "sourceTagsCount": {
                "type": "integer",
                "format": "int32"
              },
              "translationTagsCount": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "LeadingAndTrailingSpacesWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "srcPosition": {
                "$ref": "#/components/schemas/Position"
              },
              "srcWhitespaces": {
                "type": "string"
              },
              "tgtPosition": {
                "$ref": "#/components/schemas/Position"
              },
              "tgtWhitespaces": {
                "type": "string"
              },
              "suggestion": {
                "$ref": "#/components/schemas/Suggestion"
              }
            }
          }
        ]
      },
      "MalformedWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        ]
      },
      "MissingNumbersV3WarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "number": {
                "type": "string"
              },
              "positions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Position"
                }
              }
            }
          }
        ]
      },
      "MissingNumbersWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "missingNumbers": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "MisspelledWordDto": {
        "type": "object",
        "properties": {
          "word": {
            "type": "string"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MoraviaWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "subType": {
                "type": "string"
              }
            }
          }
        ]
      },
      "MultipleSpacesV3WarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "spaces": {
                "type": "string"
              },
              "positions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Position"
                }
              }
            }
          }
        ]
      },
      "MultipleSpacesWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object"
          }
        ]
      },
      "NestedTagsWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "misplacedTargetTag": {
                "type": "string"
              }
            }
          }
        ]
      },
      "NewerAtLowerLevelWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object"
          }
        ]
      },
      "NonConformingTermWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "term": {
                "type": "string"
              },
              "positions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Position"
                }
              },
              "suggestedTargetTerms": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Term"
                }
              }
            }
          }
        ]
      },
      "NotConfirmedWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object"
          }
        ]
      },
      "Position": {
        "type": "object",
        "properties": {
          "beginIndex": {
            "type": "integer",
            "format": "int32"
          },
          "endIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "QualityAssuranceResponseDto": {
        "type": "object",
        "properties": {
          "segmentWarnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SegmentWarningsDto"
            }
          },
          "finished": {
            "type": "boolean"
          }
        }
      },
      "RelativeTranslationLengthWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "limit": {
                "type": "string"
              }
            }
          }
        ]
      },
      "RepeatedWordWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "word": {
                "type": "string"
              },
              "positions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Position"
                }
              }
            }
          }
        ]
      },
      "RepeatedWordsWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "repeatedWords": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "SegmentWarningsDto": {
        "type": "object",
        "properties": {
          "segmentId": {
            "type": "string"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/segmentWarning"
            }
          },
          "ignoredChecks": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SourceTargetRegexpWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              }
            }
          }
        ]
      },
      "SpellCheckWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "misspelledWords": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MisspelledWordDto"
                }
              }
            }
          }
        ]
      },
      "TargetSourceIdenticalWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object"
          }
        ]
      },
      "Term": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "preferred": {
            "type": "boolean"
          }
        }
      },
      "TerminologyWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "missingTerms": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "forbiddenTerms": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "TrailingPunctuationWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "srcPosition": {
                "$ref": "#/components/schemas/Position"
              },
              "srcEndPunctuation": {
                "type": "string"
              },
              "tgtPosition": {
                "$ref": "#/components/schemas/Position"
              },
              "tgtEndPunctuation": {
                "type": "string"
              }
            }
          }
        ]
      },
      "TrailingSpaceWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object"
          }
        ]
      },
      "TranslationLengthWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object"
          }
        ]
      },
      "UnmodifiedFuzzyTranslationMTNTWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "transOrigin": {
                "type": "string"
              }
            }
          }
        ]
      },
      "UnmodifiedFuzzyTranslationTMWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "transOrigin": {
                "type": "string"
              }
            }
          }
        ]
      },
      "UnmodifiedFuzzyTranslationWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object",
            "properties": {
              "transOrigin": {
                "type": "string"
              }
            }
          }
        ]
      },
      "UnresolvedCommentWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object"
          }
        ]
      },
      "UnresolvedConversationWarningDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/segmentWarning"
          },
          {
            "type": "object"
          }
        ]
      },
      "segmentWarning": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "ignored": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          },
          "repetitionGroupId": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "QualityAssuranceRunDtoV3": {
        "type": "object",
        "properties": {
          "initialSegment": {
            "$ref": "#/components/schemas/SegmentReference"
          },
          "maxQaWarningsCount": {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum number of QA warnings in result, default: 100. For efficiency reasons QA\nwarnings are processed with minimum segments chunk size 10, therefore slightly more warnings are returned.",
            "format": "int32"
          },
          "warningTypes": {
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EmptyTranslation",
                "TrailingPunctuation",
                "Formatting",
                "JoinTags",
                "MissingNumbersV3",
                "MultipleSpacesV3",
                "NonConformingTerm",
                "NotConfirmed",
                "TranslationLength",
                "AbsoluteLength",
                "RelativeLength",
                "UnresolvedComment",
                "EmptyPairTags",
                "InconsistentTranslationTargetSource",
                "InconsistentTranslationSourceTarget",
                "ForbiddenString",
                "SpellCheck",
                "RepeatedWord",
                "InconsistentTagContent",
                "EmptyTagContent",
                "Malformed",
                "ForbiddenTerm",
                "NewerAtLowerLevel",
                "LeadingAndTrailingSpaces",
                "LeadingSpaces",
                "TrailingSpaces",
                "TargetSourceIdentical",
                "SourceOrTargetRegexp",
                "UnmodifiedFuzzyTranslation",
                "UnmodifiedFuzzyTranslationTM",
                "UnmodifiedFuzzyTranslationMTNT",
                "Moravia",
                "ExtraNumbersV3",
                "UnresolvedConversation",
                "NestedTags",
                "FuzzyInconsistencyTargetSource",
                "FuzzyInconsistencySourceTarget"
              ]
            }
          }
        }
      },
      "QualityAssuranceBatchRunDtoV3": {
        "required": [
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 500,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          },
          "settings": {
            "$ref": "#/components/schemas/QualityAssuranceRunDtoV3"
          },
          "maxQaWarningsCount": {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum number of QA warnings in result, default: 100. For efficiency reasons QA\nwarnings are processed with minimum segments chunk size 10, therefore slightly more warnings are returned.",
            "format": "int32"
          }
        }
      },
      "JobPartSegmentsDtoV3": {
        "required": [
          "job",
          "segments"
        ],
        "type": "object",
        "properties": {
          "job": {
            "$ref": "#/components/schemas/UidReference"
          },
          "segments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "QualityAssuranceSegmentsRunDtoV3": {
        "required": [
          "jobsAndSegments"
        ],
        "type": "object",
        "properties": {
          "jobsAndSegments": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobPartSegmentsDtoV3"
            }
          },
          "warningTypes": {
            "maxItems": 100,
            "minItems": 0,
            "type": "array",
            "description": "When empty only fast checks run",
            "items": {
              "type": "string",
              "enum": [
                "EmptyTranslation",
                "TrailingPunctuation",
                "Formatting",
                "JoinTags",
                "MissingNumbersV3",
                "MultipleSpacesV3",
                "NonConformingTerm",
                "NotConfirmed",
                "TranslationLength",
                "AbsoluteLength",
                "RelativeLength",
                "UnresolvedComment",
                "EmptyPairTags",
                "InconsistentTranslationTargetSource",
                "InconsistentTranslationSourceTarget",
                "ForbiddenString",
                "SpellCheck",
                "RepeatedWord",
                "InconsistentTagContent",
                "EmptyTagContent",
                "Malformed",
                "ForbiddenTerm",
                "NewerAtLowerLevel",
                "LeadingAndTrailingSpaces",
                "LeadingSpaces",
                "TrailingSpaces",
                "TargetSourceIdentical",
                "SourceOrTargetRegexp",
                "UnmodifiedFuzzyTranslation",
                "UnmodifiedFuzzyTranslationTM",
                "UnmodifiedFuzzyTranslationMTNT",
                "Moravia",
                "ExtraNumbersV3",
                "UnresolvedConversation",
                "NestedTags",
                "FuzzyInconsistencyTargetSource",
                "FuzzyInconsistencySourceTarget"
              ]
            }
          },
          "maxQaWarningsCount": {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum number of QA warnings in result, default: 100. For efficiency reasons QA\nwarnings are processed with minimum segments chunk size 10, therefore slightly more warnings are returned.",
            "format": "int32"
          }
        }
      },
      "JobExportResponseDto": {
        "type": "object",
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          }
        }
      },
      "JobExportActionDto": {
        "required": [
          "jobs"
        ],
        "type": "object",
        "properties": {
          "jobs": {
            "maxItems": 1000,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UidReference"
            }
          }
        }
      },
      "ProjectTemplateTransMemoryDtoV3": {
        "type": "object",
        "properties": {
          "targetLocale": {
            "type": "string"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/WorkflowStepReferenceV3"
          },
          "readMode": {
            "type": "boolean"
          },
          "writeMode": {
            "type": "boolean"
          },
          "transMemory": {
            "$ref": "#/components/schemas/TransMemoryDtoV3"
          },
          "penalty": {
            "type": "number",
            "format": "double"
          },
          "applyPenaltyTo101Only": {
            "type": "boolean"
          }
        }
      },
      "ProjectTemplateTransMemoryListDtoV3": {
        "type": "object",
        "properties": {
          "transMemories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTemplateTransMemoryDtoV3"
            }
          }
        }
      },
      "TransMemoryDtoV3": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "internalId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "sourceLang": {
            "type": "string"
          },
          "targetLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "client": {
            "$ref": "#/components/schemas/ClientReference"
          },
          "businessUnit": {
            "$ref": "#/components/schemas/BusinessUnitReference"
          },
          "domain": {
            "$ref": "#/components/schemas/DomainReference"
          },
          "subDomain": {
            "$ref": "#/components/schemas/SubDomainReference"
          },
          "note": {
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          }
        }
      },
      "WorkflowStepReferenceV3": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "uid": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "lqaEnabled": {
            "type": "boolean"
          }
        }
      },
      "ProjectTransMemoryDtoV3": {
        "type": "object",
        "properties": {
          "transMemory": {
            "$ref": "#/components/schemas/TransMemoryDtoV3"
          },
          "penalty": {
            "type": "number",
            "format": "double"
          },
          "applyPenaltyTo101Only": {
            "type": "boolean"
          },
          "targetLocale": {
            "type": "string"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/WorkflowStepReferenceV3"
          },
          "readMode": {
            "type": "boolean"
          },
          "writeMode": {
            "type": "boolean"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProjectTransMemoryListDtoV3": {
        "type": "object",
        "properties": {
          "transMemories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectTransMemoryDtoV3"
            }
          }
        }
      },
      "SetContextTransMemoriesDtoV3Dto": {
        "required": [
          "transMemories"
        ],
        "type": "object",
        "properties": {
          "transMemories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetProjectTransMemoryV3Dto"
            }
          },
          "targetLang": {
            "type": "string",
            "description": "Set translation memory only for the specific project target language"
          },
          "workflowStep": {
            "$ref": "#/components/schemas/UidReference"
          },
          "orderEnabled": {
            "type": "boolean",
            "description": "Default: false"
          }
        }
      },
      "SetProjectTransMemoriesV3Dto": {
        "required": [
          "dataPerContext"
        ],
        "type": "object",
        "properties": {
          "dataPerContext": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetContextTransMemoriesDtoV3Dto"
            }
          }
        }
      },
      "SetProjectTransMemoryV3Dto": {
        "required": [
          "transMemory"
        ],
        "type": "object",
        "properties": {
          "transMemory": {
            "$ref": "#/components/schemas/UidReference"
          },
          "readMode": {
            "type": "boolean",
            "description": "Default: false"
          },
          "writeMode": {
            "type": "boolean",
            "description": "Can be set only for Translation Memory with read == true.<br/>\n        Max 2 write TMs allowed per project.<br/>\n        Default: false"
          },
          "penalty": {
            "maximum": 100,
            "exclusiveMaximum": false,
            "minimum": 0,
            "exclusiveMinimum": false,
            "type": "number",
            "format": "double"
          },
          "applyPenaltyTo101Only": {
            "type": "boolean",
            "description": "Can be set only for penalty == 1<br/>Default: false"
          },
          "order": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ADMIN_RESPONSE": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserDetailsDtoV3"
          },
          {
            "type": "object"
          }
        ]
      },
      "GUEST_RESPONSE": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserDetailsDtoV3"
          },
          {
            "required": [
              "client"
            ],
            "type": "object",
            "properties": {
              "client": {
                "$ref": "#/components/schemas/ClientReference"
              },
              "enableMT": {
                "type": "boolean"
              },
              "projectViewOther": {
                "type": "boolean"
              },
              "projectViewOtherLinguist": {
                "type": "boolean"
              },
              "projectViewOtherEditor": {
                "type": "boolean"
              },
              "transMemoryViewOther": {
                "type": "boolean"
              },
              "transMemoryEditOther": {
                "type": "boolean"
              },
              "transMemoryExportOther": {
                "type": "boolean"
              },
              "transMemoryImportOther": {
                "type": "boolean"
              },
              "termBaseViewOther": {
                "type": "boolean"
              },
              "termBaseEditOther": {
                "type": "boolean"
              },
              "termBaseExportOther": {
                "type": "boolean"
              },
              "termBaseImportOther": {
                "type": "boolean"
              },
              "termBaseApproveOther": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "LINGUIST_RESPONSE": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserDetailsDtoV3"
          },
          {
            "type": "object",
            "properties": {
              "editAllTermsInTB": {
                "type": "boolean"
              },
              "editTranslationsInTM": {
                "type": "boolean"
              },
              "enableMT": {
                "type": "boolean"
              },
              "mayRejectJobs": {
                "type": "boolean"
              },
              "sourceLocales": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "targetLocales": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "workflowSteps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WorkflowStepReferenceV3"
                }
              },
              "clients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientReference"
                }
              },
              "domains": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DomainReference"
                }
              },
              "subDomains": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubDomainReference"
                }
              },
              "netRateScheme": {
                "$ref": "#/components/schemas/DiscountSchemeReference"
              },
              "translationPriceList": {
                "$ref": "#/components/schemas/PriceListReference"
              }
            }
          }
        ]
      },
      "PROJECT_MANAGER_RESPONSE": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserDetailsDtoV3"
          },
          {
            "type": "object",
            "properties": {
              "sourceLocales": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "targetLocales": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "workflowSteps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WorkflowStepReferenceV3"
                }
              },
              "clients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientReference"
                }
              },
              "domains": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DomainReference"
                }
              },
              "subDomains": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SubDomainReference"
                }
              },
              "projectCreate": {
                "type": "boolean"
              },
              "projectViewOther": {
                "type": "boolean"
              },
              "projectEditOther": {
                "type": "boolean"
              },
              "projectDeleteOther": {
                "type": "boolean"
              },
              "projectClients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientReference"
                }
              },
              "projectBusinessUnits": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BusinessUnitReference"
                }
              },
              "projectTemplateCreate": {
                "type": "boolean"
              },
              "projectTemplateViewOther": {
                "type": "boolean"
              },
              "projectTemplateEditOther": {
                "type": "boolean"
              },
              "projectTemplateDeleteOther": {
                "type": "boolean"
              },
              "projectTemplateClients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientReference"
                }
              },
              "projectTemplateBusinessUnits": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BusinessUnitReference"
                }
              },
              "transMemoryCreate": {
                "type": "boolean"
              },
              "transMemoryViewOther": {
                "type": "boolean"
              },
              "transMemoryEditOther": {
                "type": "boolean"
              },
              "transMemoryDeleteOther": {
                "type": "boolean"
              },
              "transMemoryExportOther": {
                "type": "boolean"
              },
              "transMemoryImportOther": {
                "type": "boolean"
              },
              "transMemoryClients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientReference"
                }
              },
              "transMemoryBusinessUnits": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BusinessUnitReference"
                }
              },
              "termBaseCreate": {
                "type": "boolean"
              },
              "termBaseViewOther": {
                "type": "boolean"
              },
              "termBaseEditOther": {
                "type": "boolean"
              },
              "termBaseDeleteOther": {
                "type": "boolean"
              },
              "termBaseExportOther": {
                "type": "boolean"
              },
              "termBaseImportOther": {
                "type": "boolean"
              },
              "termBaseApproveOther": {
                "type": "boolean"
              },
              "termBaseClients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ClientReference"
                }
              },
              "termBaseBusinessUnits": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BusinessUnitReference"
                }
              },
              "userCreate": {
                "type": "boolean"
              },
              "userViewOther": {
                "type": "boolean"
              },
              "userEditOther": {
                "type": "boolean"
              },
              "userDeleteOther": {
                "type": "boolean"
              },
              "clientDomainSubDomainCreate": {
                "type": "boolean"
              },
              "clientDomainSubDomainViewOther": {
                "type": "boolean"
              },
              "clientDomainSubDomainEditOther": {
                "type": "boolean"
              },
              "clientDomainSubDomainDeleteOther": {
                "type": "boolean"
              },
              "vendorCreate": {
                "type": "boolean"
              },
              "vendorViewOther": {
                "type": "boolean"
              },
              "vendorEditOther": {
                "type": "boolean"
              },
              "vendorDeleteOther": {
                "type": "boolean"
              },
              "dashboardSetting": {
                "type": "string"
              },
              "setupServer": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "SUBMITTER_RESPONSE": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserDetailsDtoV3"
          },
          {
            "required": [
              "automationWidgets"
            ],
            "type": "object",
            "properties": {
              "automationWidgets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdReference"
                }
              },
              "projectViewCreatedByOtherSubmitters": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "UserDetailsDtoV3": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "role",
          "timezone",
          "uid",
          "userName"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "userName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "firstName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "dateCreated": {
            "type": "string",
            "format": "date-time"
          },
          "dateDeleted": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserReference"
          },
          "role": {
            "type": "string",
            "description": "Enum: \"ADMIN\", \"PROJECT_MANAGER\", \"LINGUIST\", \"GUEST\", \"SUBMITTER\"",
            "enum": [
              "SYS_ADMIN",
              "SYS_ADMIN_READ",
              "ADMIN",
              "PROJECT_MANAGER",
              "LINGUIST",
              "GUEST",
              "SUBMITTER"
            ]
          },
          "timezone": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "note": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string"
          },
          "receiveNewsletter": {
            "type": "boolean"
          },
          "active": {
            "type": "boolean"
          },
          "pendingEmailChange": {
            "type": "boolean",
            "description": "If user has email change pending (new email not verified)"
          }
        },
        "description": "User with all belonging objects",
        "discriminator": {
          "propertyName": "role"
        }
      },
      "ADMIN_EDIT": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractUserEditDto"
          },
          {
            "type": "object"
          }
        ]
      },
      "AbstractUserEditDto": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "role",
          "timezone",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "firstName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "Enum: \"ADMIN\", \"PROJECT_MANAGER\", \"LINGUIST\", \"GUEST\", \"SUBMITTER\"",
            "enum": [
              "SYS_ADMIN",
              "SYS_ADMIN_READ",
              "ADMIN",
              "PROJECT_MANAGER",
              "LINGUIST",
              "GUEST",
              "SUBMITTER"
            ]
          },
          "timezone": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "receiveNewsletter": {
            "type": "boolean",
            "description": "Default: true"
          },
          "note": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string"
          },
          "active": {
            "type": "boolean",
            "description": "Default: true"
          }
        },
        "discriminator": {
          "propertyName": "role"
        }
      },
      "GUEST_EDIT": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractUserEditDto"
          },
          {
            "required": [
              "client"
            ],
            "type": "object",
            "properties": {
              "client": {
                "$ref": "#/components/schemas/UidReference"
              },
              "enableMT": {
                "type": "boolean",
                "description": "Enable MT. Default: true"
              },
              "projectViewOther": {
                "type": "boolean",
                "description": "View projects created by other users. Default: true"
              },
              "projectViewOtherLinguist": {
                "type": "boolean",
                "description": "Show provider names. Default: true"
              },
              "projectViewOtherEditor": {
                "type": "boolean",
                "description": "Edit jobs in Memsource Editor. Default: true"
              },
              "transMemoryViewOther": {
                "type": "boolean",
                "description": "View TMs created by other users. Default: true"
              },
              "transMemoryEditOther": {
                "type": "boolean",
                "description": "Modify TMs created by other users. Default: true"
              },
              "transMemoryExportOther": {
                "type": "boolean",
                "description": "Export TMs created by other users. Default: true"
              },
              "transMemoryImportOther": {
                "type": "boolean",
                "description": "Import into TMs created by other users. Default: true"
              },
              "termBaseViewOther": {
                "type": "boolean",
                "description": "View TBs created by other users. Default: true"
              },
              "termBaseEditOther": {
                "type": "boolean",
                "description": "Modify TBs created by other users. Default: true"
              },
              "termBaseExportOther": {
                "type": "boolean",
                "description": "Export TBs created by other users. Default: true"
              },
              "termBaseImportOther": {
                "type": "boolean",
                "description": "Import into TBs created by other users. Default: true"
              },
              "termBaseApproveOther": {
                "type": "boolean",
                "description": "Approve terms in TBs created by other users. Default: true"
              }
            }
          }
        ]
      },
      "LINGUIST_EDIT": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractUserEditDto"
          },
          {
            "type": "object",
            "properties": {
              "editAllTermsInTB": {
                "type": "boolean",
                "description": "Edit all terms in TB. Default: false"
              },
              "editTranslationsInTM": {
                "type": "boolean",
                "description": "Edit translations in TM. Default: false"
              },
              "enableMT": {
                "type": "boolean",
                "description": "Enable MT. Default: true"
              },
              "mayRejectJobs": {
                "type": "boolean",
                "description": "Reject jobs. Default: false"
              },
              "sourceLocales": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "targetLocales": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "workflowSteps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "clients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "domains": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "subDomains": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "netRateScheme": {
                "$ref": "#/components/schemas/UidReference"
              },
              "translationPriceList": {
                "$ref": "#/components/schemas/UidReference"
              }
            }
          }
        ]
      },
      "PROJECT_MANAGER_EDIT": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractUserEditDto"
          },
          {
            "type": "object",
            "properties": {
              "sourceLocales": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "targetLocales": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "workflowSteps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "clients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "domains": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "subDomains": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "projectCreate": {
                "type": "boolean",
                "description": "Enable project creation. Default: true"
              },
              "projectViewOther": {
                "type": "boolean",
                "description": "View projects created by other users. Default: true"
              },
              "projectEditOther": {
                "type": "boolean",
                "description": "Modify projects created by other users. Default: true"
              },
              "projectDeleteOther": {
                "type": "boolean",
                "description": "Delete projects created by other users. Default: true"
              },
              "projectClients": {
                "type": "array",
                "description": "Access projects of a selected clients only",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "projectBusinessUnits": {
                "type": "array",
                "description": "Access projects of selected business units only",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "projectTemplateCreate": {
                "type": "boolean",
                "description": "Enable project templates creation. Default: true"
              },
              "projectTemplateViewOther": {
                "type": "boolean",
                "description": "View project templates created by other users. Default: true"
              },
              "projectTemplateEditOther": {
                "type": "boolean",
                "description": "Modify project templates created by other users. Default: true"
              },
              "projectTemplateDeleteOther": {
                "type": "boolean",
                "description": "Delete project templates created by other users. Default: true"
              },
              "projectTemplateClients": {
                "type": "array",
                "description": "Access project templates of a selected clients only",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "projectTemplateBusinessUnits": {
                "type": "array",
                "description": "Access project templates of selected business units only",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "transMemoryCreate": {
                "type": "boolean",
                "description": "Enable TMs creation. Default: true"
              },
              "transMemoryViewOther": {
                "type": "boolean",
                "description": "View TMs created by other users. Default: true"
              },
              "transMemoryEditOther": {
                "type": "boolean",
                "description": "Modify TMs created by other users. Default: true"
              },
              "transMemoryDeleteOther": {
                "type": "boolean",
                "description": "Delete TMs created by other users. Default: true"
              },
              "transMemoryExportOther": {
                "type": "boolean",
                "description": "Export TMs created by other users. Default: true"
              },
              "transMemoryImportOther": {
                "type": "boolean",
                "description": "Import into TMs created by other users. Default: true"
              },
              "transMemoryClients": {
                "type": "array",
                "description": "Access TMs of a selected clients only",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "transMemoryBusinessUnits": {
                "type": "array",
                "description": "Access TMs of selected business units only",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "termBaseCreate": {
                "type": "boolean",
                "description": "Enable TBs creation. Default: true"
              },
              "termBaseViewOther": {
                "type": "boolean",
                "description": "View TBs created by other users. Default: true"
              },
              "termBaseEditOther": {
                "type": "boolean",
                "description": "Modify TBs created by other users. Default: true"
              },
              "termBaseDeleteOther": {
                "type": "boolean",
                "description": "Delete TBs created by other users. Default: true"
              },
              "termBaseExportOther": {
                "type": "boolean",
                "description": "Export TBs created by other users. Default: true"
              },
              "termBaseImportOther": {
                "type": "boolean",
                "description": "Import into TBs created by other users. Default: true"
              },
              "termBaseApproveOther": {
                "type": "boolean",
                "description": "Approve terms in TBs created by other users. Default: true"
              },
              "termBaseClients": {
                "type": "array",
                "description": "Access TBs of a selected clients only",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "termBaseBusinessUnits": {
                "type": "array",
                "description": "Access TBs of selected business units only",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "userCreate": {
                "type": "boolean",
                "description": "Enable users creation. Default: true"
              },
              "userViewOther": {
                "type": "boolean",
                "description": "View users created by other users. Default: true"
              },
              "userEditOther": {
                "type": "boolean",
                "description": "Modify users created by other users. Default: true"
              },
              "userDeleteOther": {
                "type": "boolean",
                "description": "Delete users created by other users. Default: true"
              },
              "clientDomainSubDomainCreate": {
                "type": "boolean",
                "description": "Enable clients, domains, subdomains creation. Default: true"
              },
              "clientDomainSubDomainViewOther": {
                "type": "boolean",
                "description": "View clients, domains, subdomains created by other users. Default: true"
              },
              "clientDomainSubDomainEditOther": {
                "type": "boolean",
                "description": "Modify clients, domains, subdomains created by other users. Default: true"
              },
              "clientDomainSubDomainDeleteOther": {
                "type": "boolean",
                "description": "Delete clients, domains, subdomains created by other users. Default: true"
              },
              "vendorCreate": {
                "type": "boolean",
                "description": "Enable Vendors creation. Default: true"
              },
              "vendorViewOther": {
                "type": "boolean",
                "description": "View Vendors created by other users. Default: true"
              },
              "vendorEditOther": {
                "type": "boolean",
                "description": "Modify Vendors created by other users. Default: true"
              },
              "vendorDeleteOther": {
                "type": "boolean",
                "description": "Delete Vendors created by other users. Default: true"
              },
              "dashboardSetting": {
                "type": "string",
                "description": "Home page dashboards. Default: OWN_DATA",
                "enum": [
                  "ALL_DATA",
                  "OWN_DATA",
                  "NO_DASHBOARD"
                ]
              },
              "setupServer": {
                "type": "boolean",
                "description": "Modify setup's server settings. Default: true"
              }
            }
          }
        ]
      },
      "SUBMITTER_EDIT": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractUserEditDto"
          },
          {
            "required": [
              "automationWidgets"
            ],
            "type": "object",
            "properties": {
              "automationWidgets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/IdReference"
                }
              },
              "projectViewCreatedByOtherSubmitters": {
                "type": "boolean",
                "description": "View projects created by other Submitters. Default: false"
              }
            }
          }
        ]
      },
      "ADMIN": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractUserCreateDto"
          },
          {
            "type": "object"
          }
        ]
      },
      "AbstractUserCreateDto": {
        "required": [
          "email",
          "firstName",
          "lastName",
          "password",
          "role",
          "timezone",
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "firstName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "password": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "role": {
            "type": "string",
            "description": "Enum: \"ADMIN\", \"PROJECT_MANAGER\", \"LINGUIST\", \"GUEST\", \"SUBMITTER\"",
            "enum": [
              "SYS_ADMIN",
              "SYS_ADMIN_READ",
              "ADMIN",
              "PROJECT_MANAGER",
              "LINGUIST",
              "GUEST",
              "SUBMITTER"
            ]
          },
          "timezone": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "receiveNewsletter": {
            "type": "boolean",
            "description": "Default: true"
          },
          "note": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string"
          },
          "active": {
            "type": "boolean",
            "description": "Default: true"
          }
        },
        "discriminator": {
          "propertyName": "role"
        }
      },
      "GUEST": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractUserCreateDto"
          },
          {
            "required": [
              "client"
            ],
            "type": "object",
            "properties": {
              "client": {
                "$ref": "#/components/schemas/UidReference"
              },
              "enableMT": {
                "type": "boolean",
                "description": "Enable MT. Default: true"
              },
              "projectViewOther": {
                "type": "boolean",
                "description": "View projects created by other users. Default: true"
              },
              "projectViewOtherLinguist": {
                "type": "boolean",
                "description": "Show provider names. Default: true"
              },
              "projectViewOtherEditor": {
                "type": "boolean",
                "description": "Edit jobs in Memsource Editor. Default: true"
              },
              "transMemoryViewOther": {
                "type": "boolean",
                "description": "View TMs created by other users. Default: true"
              },
              "transMemoryEditOther": {
                "type": "boolean",
                "description": "Modify TMs created by other users. Default: true"
              },
              "transMemoryExportOther": {
                "type": "boolean",
                "description": "Export TMs created by other users. Default: true"
              },
              "transMemoryImportOther": {
                "type": "boolean",
                "description": "Import into TMs created by other users. Default: true"
              },
              "termBaseViewOther": {
                "type": "boolean",
                "description": "View TBs created by other users. Default: true"
              },
              "termBaseEditOther": {
                "type": "boolean",
                "description": "Modify TBs created by other users. Default: true"
              },
              "termBaseExportOther": {
                "type": "boolean",
                "description": "Export TBs created by other users. Default: true"
              },
              "termBaseImportOther": {
                "type": "boolean",
                "description": "Import into TBs created by other users. Default: true"
              },
              "termBaseApproveOther": {
                "type": "boolean",
                "description": "Approve terms in TBs created by other users. Default: true"
              }
            }
          }
        ]
      },
      "LINGUIST": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractUserCreateDto"
          },
          {
            "type": "object",
            "properties": {
              "editAllTermsInTB": {
                "type": "boolean",
                "description": "Edit all terms in TB. Default: false"
              },
              "editTranslationsInTM": {
                "type": "boolean",
                "description": "Edit translations in TM. Default: false"
              },
              "enableMT": {
                "type": "boolean",
                "description": "Enable MT. Default: true"
              },
              "mayRejectJobs": {
                "type": "boolean",
                "description": "Reject jobs. Default: false"
              },
              "sourceLocales": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "targetLocales": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "workflowSteps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "clients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "domains": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "subDomains": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "netRateScheme": {
                "$ref": "#/components/schemas/UidReference"
              },
              "translationPriceList": {
                "$ref": "#/components/schemas/UidReference"
              }
            }
          }
        ]
      },
      "PROJECT_MANAGER": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractUserCreateDto"
          },
          {
            "type": "object",
            "properties": {
              "sourceLocales": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "targetLocales": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "workflowSteps": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "clients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "domains": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "subDomains": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "projectCreate": {
                "type": "boolean",
                "description": "Enable project creation. Default: true"
              },
              "projectViewOther": {
                "type": "boolean",
                "description": "View projects created by other users. Default: true"
              },
              "projectEditOther": {
                "type": "boolean",
                "description": "Modify projects created by other users. Default: true"
              },
              "projectDeleteOther": {
                "type": "boolean",
                "description": "Delete projects created by other users. Default: true"
              },
              "projectClients": {
                "type": "array",
                "description": "Access projects of a selected clients only",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "projectBusinessUnits": {
                "type": "array",
                "description": "Access projects of selected business units only",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "projectTemplateCreate": {
                "type": "boolean",
                "description": "Enable project templates creation. Default: true"
              },
              "projectTemplateViewOther": {
                "type": "boolean",
                "description": "View project templates created by other users. Default: true"
              },
              "projectTemplateEditOther": {
                "type": "boolean",
                "description": "Modify project templates created by other users. Default: true"
              },
              "projectTemplateDeleteOther": {
                "type": "boolean",
                "description": "Delete project templates created by other users. Default: true"
              },
              "projectTemplateClients": {
                "type": "array",
                "description": "Access project templates of a selected clients only",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "projectTemplateBusinessUnits": {
                "type": "array",
                "description": "Access project templates of selected business units only",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "transMemoryCreate": {
                "type": "boolean",
                "description": "Enable TMs creation. Default: true"
              },
              "transMemoryViewOther": {
                "type": "boolean",
                "description": "View TMs created by other users. Default: true"
              },
              "transMemoryEditOther": {
                "type": "boolean",
                "description": "Modify TMs created by other users. Default: true"
              },
              "transMemoryDeleteOther": {
                "type": "boolean",
                "description": "Delete TMs created by other users. Default: true"
              },
              "transMemoryExportOther": {
                "type": "boolean",
                "description": "Export TMs created by other users. Default: true"
              },
              "transMemoryImportOther": {
                "type": "boolean",
                "description": "Import into TMs created by other users. Default: true"
              },
              "transMemoryClients": {
                "type": "array",
                "description": "Access TMs of a selected clients only",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "transMemoryBusinessUnits": {
                "type": "array",
                "description": "Access TMs of selected business units only",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "termBaseCreate": {
                "type": "boolean",
                "description": "Enable TBs creation. Default: true"
              },
              "termBaseViewOther": {
                "type": "boolean",
                "description": "View TBs created by other users. Default: true"
              },
              "termBaseEditOther": {
                "type": "boolean",
                "description": "Modify TBs created by other users. Default: true"
              },
              "termBaseDeleteOther": {
                "type": "boolean",
                "description": "Delete TBs created by other users. Default: true"
              },
              "termBaseExportOther": {
                "type": "boolean",
                "description": "Export TBs created by other users. Default: true"
              },
              "termBaseImportOther": {
                "type": "boolean",
                "description": "Import into TBs created by other users. Default: true"
              },
              "termBaseApproveOther": {
                "type": "boolean",
                "description": "Approve terms in TBs created by other users. Default: true"
              },
              "termBaseClients": {
                "type": "array",
                "description": "Access TBs of a selected clients only",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "termBaseBusinessUnits": {
                "type": "array",
                "description": "Access TBs of selected business units only",
                "items": {
                  "$ref": "#/components/schemas/UidReference"
                }
              },
              "userCreate": {
                "type": "boolean",
                "description": "Enable users creation. Default: true"
              },
              "userViewOther": {
                "type": "boolean",
                "description": "View users created by other users. Default: true"
              },
              "userEditOther": {
                "type": "boolean",
                "description": "Modify users created by other users. Default: true"
              },
              "userDeleteOther": {
                "type": "boolean",
                "description": "Delete users created by other users. Default: true"
              },
              "clientDomainSubDomainCreate": {
                "type": "boolean",
                "description": "Enable clients, domains, subdomains creation. Default: true"
              },
              "clientDomainSubDomainViewOther": {
                "type": "boolean",
                "description": "View clients, domains, subdomains created by other users. Default: true"
              },
              "clientDomainSubDomainEditOther": {
                "type": "boolean",
                "description": "Modify clients, domains, subdomains created by other users. Default: true"
              },
              "clientDomainSubDomainDeleteOther": {
                "type": "boolean",
                "description": "Delete clients, domains, subdomains created by other users. Default: true"
              },
              "vendorCreate": {
                "type": "boolean",
                "description": "Enable Vendors creation. Default: true"
              },
              "vendorViewOther": {
                "type": "boolean",
                "description": "View Vendors created by other users. Default: true"
              },
              "vendorEditOther": {
                "type": "boolean",
                "description": "Modify Vendors created by other users. Default: true"
              },
              "vendorDeleteOther": {
                "type": "boolean",
                "description": "Delete Vendors created by other users. Default: true"
              },
              "dashboardSetting": {
                "type": "string",
                "description": "Home page dashboards. Default: OWN_DATA",
                "enum": [
                  "ALL_DATA",
                  "OWN_DATA",
                  "NO_DASHBOARD"
                ]
              },
              "setupServer": {
                "type": "boolean",
                "description": "Modify setup's server settings. Default: true"
              }
            }
          }
        ]
      },
      "SUBMITTER": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AbstractUserCreateDto"
          },
          {
            "type": "object",
            "properties": {
              "automationWidgets": {
                "type": "array",
                "description": "If no automation widgets are assigned in request the default automation widgets will be assigned instead",
                "items": {
                  "$ref": "#/components/schemas/IdReference"
                }
              },
              "projectViewCreatedByOtherSubmitters": {
                "type": "boolean",
                "description": "View projects created by other Submitters. Default: false"
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "ApiToken": {
        "type": "apiKey",
        "description": "Get a token from `auth/login` [endpoint](#operation/login) and then pass it in the `Authorization` HTTP header in every subsequent API call. For more information visit our [help center](https://support.phrase.com/hc/en-us/articles/5709662181404-API-Authentication-TMS-#token-0-0).",
        "name": "Authorization",
        "in": "header"
      },
      "OAuth2": {
        "type": "oauth2",
        "description": "A standard OAuth 2.0 authorization code flow. For more information visit our [help center](https://support.phrase.com/hc/en-us/articles/5709662181404-API-Authentication-TMS-#oauth-2-0-0-1).",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://cloud.memsource.com/web/oauth/authorize",
            "tokenUrl": "https://cloud.memsource.com/web/oauth/token",
            "scopes": {}
          }
        }
      }
    }
  }
}